package com.mercurio.lms.gm.action;

import com.mercurio.adsm.batch.annotations.Assynchronous;
import com.mercurio.adsm.batch.annotations.AssynchronousMethod;
import com.mercurio.adsm.batch.annotations.BatchFeedbackType;
import com.mercurio.adsm.batch.annotations.BatchType;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.lms.carregamento.model.service.DirectoryWatcherService;
import com.mercurio.lms.carregamento.model.service.FileListenerService;
import com.mercurio.lms.configuracoes.model.service.ParametroGeralService;
import com.mercurio.lms.gm.model.service.CarregamentoService;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.gm.carregamentoAutomaticoAction"
 */
@Assynchronous(name = "carregamentoAutomaticoAction")
public class CarregamentoAutomaticoAction extends CrudAction {
	
	private static final String PARAMETRO_DIRETORIO = "DIRETORIO_CARGA_MPC_GMB";
	
	private ParametroGeralService parametroGeralService;
	private DirectoryWatcherService directoryWatcherService;
	
	@AssynchronousMethod( name = "carregamentoAutomaticoAction.executeCarregamentoAutomatico",
						  type = BatchType.BATCH_SERVICE,
						  feedback = BatchFeedbackType.ON_ERROR)
	public void executeCarregamentoAutomatico() {
		String directory = (String) parametroGeralService.findConteudoByNomeParametro(PARAMETRO_DIRETORIO, false);
		directoryWatcherService.execute(directory);		
	}
	
	public void executeCarregamentoManual() {
		String directory = (String) parametroGeralService.findConteudoByNomeParametro(PARAMETRO_DIRETORIO, false);
		directoryWatcherService.execute(directory);		
	}

	public void setParametroGeralService(ParametroGeralService parametroGeralService) {
		this.parametroGeralService = parametroGeralService;
}

	public void setDirectoryWatcherService(
			DirectoryWatcherService directoryWatcherService) {
		this.directoryWatcherService = directoryWatcherService;
}
	
}
