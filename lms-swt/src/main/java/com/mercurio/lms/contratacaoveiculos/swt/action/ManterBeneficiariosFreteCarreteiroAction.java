package com.mercurio.lms.contratacaoveiculos.swt.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.lms.contratacaoveiculos.model.BeneficiarioProprietario;
import com.mercurio.lms.contratacaoveiculos.model.service.BeneficiarioProprietarioService;
import com.mercurio.lms.util.FormatUtils;
import com.mercurio.lms.util.PessoaUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.contratacaoveiculos.swt.manterBeneficiariosFreteCarreteiroAction"
 */

public class ManterBeneficiariosFreteCarreteiroAction extends CrudAction {
	BeneficiarioProprietarioService beneficiarioProprietarioService;
	
	public void setBeneficiarioProprietarioService(BeneficiarioProprietarioService beneficiarioProprietarioService) {
		this.beneficiarioProprietarioService = beneficiarioProprietarioService;
	}
	

	public ResultSetPage findPaginated(Map criteria) {
		ResultSetPage resultSetPage = beneficiarioProprietarioService.findPaginated(createFindCriteria(criteria));
		List listReturn = new ArrayList();
		for (Iterator iter = resultSetPage.getList().iterator(); iter.hasNext();) {
			BeneficiarioProprietario beneficiarioProprietario = (BeneficiarioProprietario) iter.next();			
			Map mapReturn = new HashMap();
			mapReturn.put("idBeneficiarioProprietario", beneficiarioProprietario.getIdBeneficiarioProprietario());
			mapReturn.put("idBeneficiario", beneficiarioProprietario.getBeneficiario().getIdBeneficiario());
			mapReturn.put("tpIdentificacao", beneficiarioProprietario.getBeneficiario().getPessoa().getTpIdentificacao().getValue());
			mapReturn.put("nrIdentificacao", FormatUtils.formatIdentificacao(beneficiarioProprietario.getBeneficiario().getPessoa()));
			mapReturn.put("nmPessoa", beneficiarioProprietario.getBeneficiario().getPessoa().getNmPessoa());
			mapReturn.put("dtVigenciaInicial", beneficiarioProprietario.getDtVigenciaInicial());
			mapReturn.put("dtVigenciaFinal", beneficiarioProprietario.getDtVigenciaFinal());			
			
			listReturn.add(mapReturn);
		}
		
		resultSetPage.setList(listReturn);		
		return resultSetPage;
	}
	
	public Integer getRowCount(Map criteria) {
		return beneficiarioProprietarioService.getRowCount(createFindCriteria(criteria));
	}
	
    /**
     * Cria mapa com filtros para pesquisa.
     * @param criteria
     * @return
     */
	private Map createFindCriteria(Map criteria) {
		Map mapCriteria = new HashMap();
		Map mapPessoa = new HashMap();
		Map mapBeneficiario = new HashMap();
		Map mapProprietario = new HashMap();

		mapProprietario.put("idProprietario", criteria.get("idProprietario"));
    	
    	mapPessoa.put("tpPessoa", criteria.get("tpPessoa"));
    	mapPessoa.put("tpIdentificacao", criteria.get("tpIdentificacao"));
		if (StringUtils.isNotBlank((String)criteria.get("nrIdentificacao"))) {
			mapPessoa.put("nrIdentificacao", PessoaUtils.validateIdentificacao((String)criteria.get("nrIdentificacao")));
		}
		mapPessoa.put("nmPessoa", criteria.get("nmPessoa"));
    	mapBeneficiario.put("pessoa", mapPessoa);

		mapCriteria.put("_currentPage", criteria.get("_currentPage"));
    	mapCriteria.put("_pageSize", criteria.get("_pageSize"));
    	mapCriteria.put("_order", criteria.get("_order"));
    	mapCriteria.put("beneficiario", mapBeneficiario);
    	mapCriteria.put("proprietario", mapProprietario);
    	mapCriteria.put("dtVigenciaInicial", criteria.get("dtVigenciaInicial"));    	
    	mapCriteria.put("dtVigenciaFinal", criteria.get("dtVigenciaFinal"));
    			
    	return mapCriteria;
	}  	
}
