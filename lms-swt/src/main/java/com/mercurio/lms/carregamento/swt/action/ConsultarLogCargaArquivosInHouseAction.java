package com.mercurio.lms.carregamento.swt.action;

import java.util.Map;

import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.carregamento.model.service.ArquivoLogDescompactadoService;
import com.mercurio.lms.carregamento.model.service.ArquivoLogRegistroService;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.carregamento.swt.consultarLogCargaArquivosInHouseAction"
 */
public class ConsultarLogCargaArquivosInHouseAction {
	private ArquivoLogRegistroService arquivoLogRegistroService;
	private ArquivoLogDescompactadoService arquivoLogDescompactadoService;
	
	public ResultSetPage findPaginated(TypedFlatMap criteria) {
		ResultSetPage<Map<String, Object>> rs = arquivoLogRegistroService.findPaginatedConsultarLogCargaArquivosInHouse(criteria);
		for (Map<String, Object> item : rs.getList()) {
			if (item instanceof Map) {
				String cor = null;
				if (item.get("erro") != null)
					cor = item.get("erro").toString();
				if (cor != null && cor.length() > 0) {
					item.put("erro", "/image/bola_" + cor + ".gif"); 
				}
				item.put("nrTamanhoTotalKb", item.get("nrTamanhoTotalKb") == null ? null :  item.get("nrTamanhoTotalKb") + "kb");
				item.put("nrTamanhoKb", item.get("nrTamanhoKb") == null ? null :  item.get("nrTamanhoKb") + "kb");
			}
		}
		return rs;
	}

	public ResultSetPage findPaginatedCad(TypedFlatMap criteria) {
		ResultSetPage<Map<String, Object>> rs = arquivoLogDescompactadoService.findPaginatedConsultarLogCargaArquivosInHouse(criteria);
		return rs;
	}
	
	public Integer getRowCountList(TypedFlatMap criteria) {		
		return arquivoLogRegistroService.getRowCountConsultarLogCargaArquivosInHouse(criteria);
	}
	
	public Integer getRowCountCad(TypedFlatMap criteria) {		
		return arquivoLogDescompactadoService.getRowCountConsultarLogCargaArquivosInHouse(criteria);
	}
	
	public void setArquivoLogRegistroService(ArquivoLogRegistroService arquivoLogRegistroService) {
		this.arquivoLogRegistroService = arquivoLogRegistroService;
	}
	
	public void setArquivoLogDescompactadoService(ArquivoLogDescompactadoService arquivoLogDescompactadoService) {
		this.arquivoLogDescompactadoService = arquivoLogDescompactadoService;
	}
	
}
