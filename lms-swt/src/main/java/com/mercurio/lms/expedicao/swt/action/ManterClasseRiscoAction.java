package com.mercurio.lms.expedicao.swt.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.DomainValue;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.lms.expedicao.model.ClasseRisco;
import com.mercurio.lms.expedicao.model.service.ClasseRiscoService;
/**
 * Generated by: ADSM ActionGenerator
 *
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.expedicao.swt.manterClasseRiscoAction"
 */

public class ManterClasseRiscoAction extends CrudAction {
	
	public void removeById(java.lang.Long id) {
		((ClasseRiscoService)defaultService).removeById(id);
	}
	
	public ResultSetPage findPaginated(Map criteria) {

		ResultSetPage rsp = ((ClasseRiscoService)defaultService).findPaginated(criteria);
		
		if (rsp != null) {
			List<ClasseRisco> controles = rsp.getList();
			List<Map<String, Object>> result = new ArrayList<Map<String, Object>>();
			if (controles != null) {
				for (ClasseRisco controle : controles) {
					Map<String, Object> mapControle = new HashMap<String, Object>();
					
					mapControle.put("idClasseRisco", controle.getIdClasseRisco());
					mapControle.put("nrClasseRisco", controle.getNrClasseRisco());
					mapControle.put("dsClasseRisco", controle.getDsClasseRisco());
					mapControle.put("tpSituacao", controle.getTpSituacao());
					
					result.add(mapControle);
				}
				rsp.setList(result);
			}
		}
		return rsp;
	}
	
	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
	public void removeByIds(List ids) {
		((ClasseRiscoService)defaultService).removeByIds(ids);
	}

	public Map findById(java.lang.Long id) {
		Map<String, Object> result = new HashMap<String, Object>();
		
		ClasseRisco ClasseRisco = ((ClasseRiscoService)defaultService).findById(id);
		
		result.put("idClasseRisco", ClasseRisco.getIdClasseRisco());
		result.put("nrClasseRisco", ClasseRisco.getNrClasseRisco());
		result.put("dsClasseRisco", ClasseRisco.getDsClasseRisco());
		result.put("tpSituacao", ClasseRisco.getTpSituacao().getValue());
	
		return result;
	}

	public Map store(Map data) {
		ClasseRisco bean = new ClasseRisco();
		
		bean.setIdClasseRisco((Long) data.get("idClasseRisco"));
		bean.setNrClasseRisco((Long)data.get("nrClasseRisco"));
		bean.setDsClasseRisco((String)data.get("dsClasseRisco"));
		bean.setTpSituacao(new DomainValue((String) data.get("tpSituacao")));
		
		Long idClasseRisco = (Long) ((ClasseRiscoService)defaultService).store(bean);
		
		Map<String, Object> result = new HashMap<String, Object>();
		result.put("idClasseRisco", idClasseRisco);
		return result;
	}

	public void setClasseRiscoService(ClasseRiscoService classeRiscoService) {
		this.defaultService = classeRiscoService;
	}
}
