package com.mercurio.lms.expedicao.swt.action;

import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.DomainValue;
import com.mercurio.lms.configuracoes.model.service.ServicoAdicionalService;
import com.mercurio.lms.expedicao.model.service.DigitarDadosNotaNormalCamposAdicionaisService;
import com.mercurio.lms.expedicao.model.service.ServAdicionalDocServService;
import com.mercurio.lms.vendas.model.service.InformacaoDoctoClienteService;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.expedicao.swt.digitarDadosNotaNormalCamposAdicionaisAction"
 */
public class DigitarDadosNotaNormalCamposAdicionaisAction extends CrudAction {

	private ServicoAdicionalService servicoAdicionalService;
	private InformacaoDoctoClienteService informacaoDoctoClienteService;
	private DigitarDadosNotaNormalCamposAdicionaisService digitarDadosNotaNormalCamposAdicionaisService;

	public List findCamposAdicionaisByClienteTpModalTpAbrangencia(Map criteria) {
		List<Map<String, Object>> result = informacaoDoctoClienteService
			.findDadosByClienteTpModalTpAbrangencia(
				(Long) criteria.get("idCliente"), 
				(String) criteria.get("tpModal"), (String) criteria.get("tpAbrangencia"), (Boolean) criteria.get("blRemetente"), (Boolean) criteria.get("blDestinatario"), (Boolean) criteria.get("blDevedor"));
		
		for (Map informacao : result) {
			DomainValue tpCampo = (DomainValue) informacao.remove("tpCampo");
			informacao.put("tpCampo", tpCampo.getValue());
		}
		
		return result;
	}

	/**
	 * Busca os servicos adicionais ativos do Banco e retorna uma lista para popular a combo
	 * @param criterios
	 * @return
	 */
	public List findServicosAdicionaisAtivos(Map criterios){
		return servicoAdicionalService.findServicosAdicionaisAtivos(criterios);
	}

	/**
     * Armazena os campos adicionais preenchidos
     * na lista de campos adicionais do conhecimento que se 
     * encontra na sessão
     * @param parameters
     */
    public Map storeInSession(Map parameters) {
    	return digitarDadosNotaNormalCamposAdicionaisService.storeInSession(parameters);
			}

    public void setServAdicionalDocServService(ServAdicionalDocServService servAdicionalDocServService) {
		this.defaultService = servAdicionalDocServService;
	}
	public void setServicoAdicionalService(ServicoAdicionalService servicoAdicionalService) {
		this.servicoAdicionalService = servicoAdicionalService;
	}
	public void setInformacaoDoctoClienteService(InformacaoDoctoClienteService informacaoDoctoClienteService) {
		this.informacaoDoctoClienteService = informacaoDoctoClienteService;
	}
	public void setDigitarDadosNotaNormalCamposAdicionaisService(DigitarDadosNotaNormalCamposAdicionaisService digitarDadosNotaNormalCamposAdicionaisService) {
		this.digitarDadosNotaNormalCamposAdicionaisService = digitarDadosNotaNormalCamposAdicionaisService;
}
}
