package com.mercurio.lms.tabelaprecos.swt.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.collections.MapUtils;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.PaginatedQuery;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.municipios.model.Municipio;
import com.mercurio.lms.tabelaprecos.model.GrupoRegiao;
import com.mercurio.lms.tabelaprecos.model.MunicipioGrupoRegiao;
import com.mercurio.lms.tabelaprecos.model.service.MunicipioGrupoRegiaoService;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.tabelaprecos.swt.manterGruposRegioesMunicipiosAction"
 */
public class ManterGruposRegioesMunicipiosAction extends CrudAction {
	private MunicipioGrupoRegiaoService municipioGrupoRegiaoService;
		
	public Map<String, Long> store(Map map) {		
		MunicipioGrupoRegiao municipioGrupo = new MunicipioGrupoRegiao();
		
		GrupoRegiao grupo = new GrupoRegiao();
		grupo.setIdGrupoRegiao(MapUtils.getLong(map, "idGrupoRegiao"));
		municipioGrupo.setGrupoRegiao(grupo);
		
		Municipio municipio = new Municipio();
		municipio.setIdMunicipio(MapUtils.getLong(map, "idMunicipio"));
		municipioGrupo.setMunicipio(municipio);
		
		municipioGrupoRegiaoService.store(municipioGrupo);
		
		Map<String, Long> retorno = new HashMap<String, Long>();
		retorno.put("idMunicipioGrupoRegiao", municipioGrupo.getIdMunicipioGrupoRegiao());		
		return retorno;
	}
		
	public ResultSetPage findPaginated(Map criteria) {
		ResultSetPage rsp = municipioGrupoRegiaoService.findPaginated(new PaginatedQuery(criteria));
		List<MunicipioGrupoRegiao> listaReturned = rsp.getList();
		
		//Nova lista que será inserida no ResultSetPage acima
		List<Map<String,Object>> lista = new ArrayList<Map<String,Object>>();
		
		for (MunicipioGrupoRegiao municipioGrupo : listaReturned) {
			TypedFlatMap tpm = new TypedFlatMap();					
			
			tpm.put("idMunicipioGrupoRegiao", municipioGrupo.getIdMunicipioGrupoRegiao());
			tpm.put("nmMunicipio", municipioGrupo.getMunicipio().getNmMunicipio());
			tpm.put("nrCep", municipioGrupo.getMunicipio().getNrCep());			
			
			if(municipioGrupo.getMunicipio().getBlDistrito().equals(Boolean.TRUE)){
				tpm.put("blDistrito","/image/checked.gif");
			}
			
			if(municipioGrupo.getMunicipio().getMunicipioDistrito() != null) {
				tpm.put("nmMunicipioDistrito", municipioGrupo.getMunicipio().getMunicipioDistrito().getNmMunicipio());
			}
			tpm.put("tpSituacao", municipioGrupo.getMunicipio().getTpSituacao());			
			
			tpm.put("sgUnidadeFederativa", municipioGrupo.getMunicipio().getUnidadeFederativa().getSgUnidadeFederativa());
			
						
			lista.add(tpm);
		}
			
		rsp.setList(lista);
				
		return rsp;
	}
		
	@Override
	@ParametrizedAttribute(type=Long.class)
	public void removeByIds(List ids) {
		municipioGrupoRegiaoService.removeByIds(ids);
	}

	//----- Getters und Setters --------//
	public void setMunicipioGrupoRegiaoService(
			MunicipioGrupoRegiaoService municipioGrupoRegiaoService) {
		this.municipioGrupoRegiaoService = municipioGrupoRegiaoService;
	}
}
