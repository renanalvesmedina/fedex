package com.mercurio.lms.configuracoes.swt.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.lms.configuracoes.model.ControleFormulario;
import com.mercurio.lms.configuracoes.model.ImpressoraFormulario;
import com.mercurio.lms.configuracoes.model.service.ControleFormularioService;
import com.mercurio.lms.configuracoes.model.service.ImpressoraFormularioService;
import com.mercurio.lms.expedicao.model.Impressora;
import com.mercurio.lms.expedicao.model.service.ImpressoraService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.util.session.SessionUtils;

/**
 * Generated by: ADSM ActionGenerator
 * 
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.configuracoes.swt.manterVinculoFormulariosImpressorasAction"
 */

public class ManterVinculoFormulariosImpressorasAction extends CrudAction {
	
	private ImpressoraFormularioService impressoraFormularioService;
	private ControleFormularioService controleFormularioService;
	private ImpressoraService impressoraService;
	
	public List findLookupControleFormulario(Map criteria) {
		return controleFormularioService.findLookup(criteria);
	}
	
	public List findComboImpressoras(Map map) {
		Filial filial = SessionUtils.getFilialSessao();  

		List<Impressora> impressoras = impressoraService.findImpressorasByIdFilial(filial.getIdFilial());
		 
		if (impressoras != null) {
			List<Map<String, Object>> result = new ArrayList<Map<String, Object>>();
			for (Impressora impressora : impressoras) {
				if (impressora.getTpImpressora().getValue().equals("M")) {
					Map<String, Object> mapImpressora = new HashMap<String, Object>();
					mapImpressora.put("idImpressora", impressora.getIdImpressora());
					mapImpressora.put("checkinLocalizacao", impressora.getCheckinLocalizacao());
					result.add(mapImpressora);
			}
			}
			return result;
		}
		return null;
	}

	public void removeById(java.lang.Long id) {
		impressoraFormularioService.removeById(id);
	}

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
	public void removeByIds(List ids) {
		impressoraFormularioService.removeByIds(ids);
	}

	public Map<String, Object> findById(java.lang.Long id) {
		Map<String, Object> result = new HashMap<String, Object>();
		ImpressoraFormulario formulario = impressoraFormularioService.findById(id);
		result.put("idImpressoraFormulario", formulario.getIdImpressoraFormulario());
		result.put("idControleFormulario", formulario.getControleFormulario().getIdControleFormulario());
		result.put("controleForm", formulario.getControleFormulario().getControleForm());
		result.put("idImpressora", formulario.getImpressora().getIdImpressora());
		result.put("nrFormularioInicial", formulario.getNrFormularioInicial());
		result.put("nrFormularioFinal", formulario.getNrFormularioFinal());
		result.put("nrUltimoFormulario", formulario.getNrUltimoFormulario());
		result.put("nrSeloFiscalInicial", formulario.getNrSeloFiscalInicial());
		result.put("nrSeloFiscalFinal", formulario.getNrSeloFiscalFinal());
		result.put("nrUltimoSeloFiscal", formulario.getNrUltimoSeloFiscal());
		result.put("nrCodigoBarrasInicial", formulario.getNrCodigoBarrasInicial());
		result.put("nrCodigoBarrasFinal", formulario.getNrCodigoBarrasFinal());
		result.put("nrUltimoCodigoBarras", formulario.getNrUltimoCodigoBarras());
		result.put("cdSerie", formulario.getCdSerie());
		result.put("nrFormularioInicialBase", formulario.getControleFormulario().getNrFormularioInicial());
		result.put("nrFormularioFinalBase", formulario.getControleFormulario().getNrFormularioFinal());
		result.put("nrSeloFiscalInicialBase", formulario.getControleFormulario().getNrSeloFiscalInicial());
		result.put("nrSeloFiscalFinalBase", formulario.getControleFormulario().getNrSeloFiscalFinal());
		result.put("nrCodigoBarrasInicialBase", formulario.getControleFormulario().getNrCodigoBarrasInicial());
		result.put("nrCodigoBarrasFinalBase", formulario.getControleFormulario().getNrCodigoBarrasFinal());
		
		return result;
	}

	public ResultSetPage findPaginated(Map criteria) {
		ResultSetPage rsp = impressoraFormularioService.findPaginated(prepareCriteria(criteria));
		if (rsp != null && rsp.getList() != null) {
			List<Map<String, Object>> impressoraFormularios = rsp.getList();
			List<Map<String, Object>> results = new ArrayList<Map<String, Object>>();
			Map<String, Object> result;
			for (Map<String, Object> impressoraFormulario : impressoraFormularios) {
				result = new HashMap<String, Object>();
				Map<String, Object> impressora = (Map<String, Object>)impressoraFormulario.get("impressora");
				Map<String, Object> controleFormulario = (Map<String, Object>)impressoraFormulario.get("controleFormulario");
				Map<String, Object> filial = (Map<String, Object>)controleFormulario.get("filial");

				result.put("idImpressoraFormulario", impressoraFormulario.get("idImpressoraFormulario"));
				StringBuilder controleForm = new StringBuilder();
				controleForm.append(filial.get("sgFilial")).append(" - ")
				.append(controleFormulario.get("nrFormularioInicial")).append(" - ")
				.append(controleFormulario.get("nrFormularioFinal"));

				result.put("controleForm", controleForm.toString());
				result.put("dsLocalizacao", impressora.get("dsLocalizacao"));
				result.put("tpFormulario", controleFormulario.get("tpFormulario"));
				result.put("nrFormularioInicial", impressoraFormulario.get("nrFormularioInicial"));
				result.put("nrFormularioFinal", impressoraFormulario.get("nrFormularioFinal"));
				result.put("nrUltimoFormulario", impressoraFormulario.get("nrUltimoFormulario"));
				result.put("cdSerie", impressoraFormulario.get("cdSerie"));
				result.put("nrSeloFiscalInicial", impressoraFormulario.get("nrSeloFiscalInicial"));
				result.put("nrSeloFiscalFinal", impressoraFormulario.get("nrSeloFiscalFinal"));
				result.put("nrUltimoSeloFiscal", impressoraFormulario.get("nrUltimoSeloFiscal"));
				result.put("nrCodigoBarrasInicial", impressoraFormulario.get("nrCodigoBarrasInicial"));
				result.put("nrCodigoBarrasFinal", impressoraFormulario.get("nrCodigoBarrasFinal"));
				result.put("nrUltimoCodigoBarras", impressoraFormulario.get("nrUltimoCodigoBarras"));
				
				results.add(result);
			}
			rsp.setList(results);
		}
		return rsp;
	}

	public Integer getRowCount(Map criteria) {
		return impressoraFormularioService.getRowCount(prepareCriteria(criteria));
	}
	
	public Map<String, Object> store(Map criteria) {
		ImpressoraFormulario bean = new ImpressoraFormulario();
		bean.setIdImpressoraFormulario((Long) criteria.get("idImpressoraFormulario"));
		bean.setCdSerie((String) criteria.get("cdSerie"));
		bean.setNrSeloFiscalInicial((Long) criteria.get("nrSeloFiscalInicial"));
		bean.setNrSeloFiscalFinal((Long) criteria.get("nrSeloFiscalFinal"));
		bean.setNrUltimoSeloFiscal((Long) criteria.get("nrUltimoSeloFiscal"));
		bean.setNrFormularioInicial((Long) criteria.get("nrFormularioInicial"));
		bean.setNrFormularioFinal((Long) criteria.get("nrFormularioFinal"));
		bean.setNrUltimoFormulario((Long) criteria.get("nrUltimoFormulario"));
		bean.setNrCodigoBarrasInicial((Long) criteria.get("nrCodigoBarrasInicial"));
		bean.setNrCodigoBarrasFinal((Long) criteria.get("nrCodigoBarrasFinal"));
		bean.setNrUltimoCodigoBarras((Long) criteria.get("nrUltimoCodigoBarras"));
		
		Long idImpressora = (Long) criteria.get("idImpressora");
		Impressora impressora = new Impressora();
		impressora.setIdImpressora(idImpressora);
		bean.setImpressora(impressora);
		
		Long idControleFormulario = (Long) criteria.get("idControleFormulario");
		ControleFormulario controleFormulario = new ControleFormulario();
		controleFormulario.setIdControleFormulario(idControleFormulario);
		bean.setControleFormulario(controleFormulario);
		
		Long idImpressoraFormulario = (Long) impressoraFormularioService.store(bean);
		Map<String, Object> result = new HashMap<String, Object>();
		result.put("idImpressoraFormulario", idImpressoraFormulario);
		return result;
	}

	public Map<String, Object> findDadosSessao() {
		Map<String, Object> retorno = new HashMap<String, Object>();
		Filial filial = SessionUtils.getFilialSessao();
		retorno.put("sgFilial", filial.getSgFilial());
		retorno.put("idFilial", filial.getIdFilial());
		retorno.put("nmFantasia", filial.getPessoa().getNmFantasia());
		return retorno;
	}
	
	/*
	 * METODOS PRIVADOS
	 */
	/**
	 * Prepara os criterios de pesquisa para a service.
	 */
	private Map prepareCriteria(Map criteria) {
		Map result = new HashMap();
		result.put("_currentPage", criteria.get("_currentPage"));
		result.put("_pageSize", criteria.get("_pageSize"));
		result.put("_order", criteria.get("_order"));

		Long idImpressora = (Long) criteria.get("idImpressora");
		if (idImpressora != null) {
			Map<String, Long> impressora = new HashMap();
			impressora.put("idImpressora", idImpressora);
			result.put("impressora", impressora);
		}

		Long idControleFormulario = (Long) criteria.get("idControleFormulario");
		if (idControleFormulario != null) {
			Map<String, Long> controleFormulario = new HashMap<String, Long>();
			controleFormulario.put("idControleFormulario", idControleFormulario);
			result.put("controleFormulario", controleFormulario);
		}

		return result;
	}

	/*
	 * GETTERS E SETTERS
	 */
	public void setImpressoraFormularioService(ImpressoraFormularioService impressoraFormularioService) {
		this.impressoraFormularioService = impressoraFormularioService;
	}
	public void setControleFormularioService(ControleFormularioService controleFormularioService) {
		this.controleFormularioService = controleFormularioService;
	}
	public void setImpressoraService(ImpressoraService impressoraService) {
		this.impressoraService = impressoraService;
	}

}
