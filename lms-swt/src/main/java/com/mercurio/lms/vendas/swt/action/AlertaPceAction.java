package com.mercurio.lms.vendas.swt.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.vendas.model.Cliente;
import com.mercurio.lms.vendas.model.service.ClienteService;
import com.mercurio.lms.vendas.model.service.VersaoDescritivoPceService;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.vendas.swt.alertaPceAction"
 */

public class AlertaPceAction extends CrudAction {
	
	private VersaoDescritivoPceService versaoDescritivoPceService;
	private ClienteService clienteService;
	
	public void executeConfirmaRecebimentoDoAlerta(Long idVersaoDescritivoPce) {
		versaoDescritivoPceService.executeConfirmaRecebimentoDoAlerta(idVersaoDescritivoPce,null);
	}
	
	public Map findDataAlertPCE(TypedFlatMap map) {
		Map<String, Object> retorno = new HashMap<String, Object>();
		TypedFlatMap dados = versaoDescritivoPceService.findDataAlertPCE(map);
		retorno.put("idCliente", dados.get("versaoPce.cliente.idCliente"));
		retorno.put("nrIdentificacao", dados.get("versaoPce.cliente.pessoa.nrIdentificacao"));
		retorno.put("nmPessoa", dados.get("versaoPce.cliente.pessoa.nmPessoa"));
		retorno.put("dsDescritivoPce", dados.get("dsDescritivoPce"));
		retorno.put("nmUsuario", dados.get("usuario.nmUsuario"));
		retorno.put("idVersaoDescritivoPce", dados.get("idVersaoDescritivoPce"));
		return retorno;
	}
	
	public List findLookupCliente(Map criteria) {
		List dados = clienteService.findLookup(criteria);
		if (dados != null && !dados.isEmpty()) {
			List<Map> retorno = new ArrayList<Map>();
			for (int i = 0; i < dados.size(); i++) {
				Cliente cliente = (Cliente) dados.get(i);
				Map<String, Object> cMap = new HashMap<String, Object>();
				cMap.put("idCliente", cliente.getIdCliente());
				cMap.put("nrIdentificacao", cliente.getPessoa().getNrIdentificacao());
				retorno.add(cMap);
			}
			return retorno;
		}
		return null;
	}
	
	/*
	 * GETTERS E SETTER
	 */
	
	public void setVersaoDescritivoPceService(VersaoDescritivoPceService versaoDescritivoPceService) {
		this.versaoDescritivoPceService = versaoDescritivoPceService;
	}

	public void setClienteService(ClienteService clienteService) {
		this.clienteService = clienteService;
	}
	
}
