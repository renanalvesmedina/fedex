package com.mercurio.lms.contasreceber.action;


import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.model.Moeda;
import com.mercurio.lms.contasreceber.report.EmitirRelacaoRedecosService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.util.session.SessionUtils;

/**
 * Generated by: ADSM ActionGenerator
 * 
 * @author Diego Umpierre
 * 
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.contasreceber.emitirRelacaoRedecosAction"
 */

public class EmitirRelacaoRedecosAction extends ReportActionSupport {
	
	private FilialService filialService;

	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}
	
	public List findLookupFilial(TypedFlatMap map){
		return filialService.findLookup(map);
	}
	
	/**
	 * Busca a filial do usuário logado
	 * @param tfm Neste caso sem nenhum critério
	 * @return Filial do usuário logado
	 */
	public TypedFlatMap findFilialUsuario(TypedFlatMap tfm){
		
		TypedFlatMap map = new TypedFlatMap();
		
		Filial filial = SessionUtils.getFilialSessao();
		
		map.put("filial.idFilial",filial.getIdFilial());
		map.put("filial.sgFilial",filial.getSgFilial());
		map.put("filial.pessoa.nmFantasia",filial.getPessoa().getNmFantasia());
		
		return map;
	}


	// executa o execute da super, seta a service default IoC do Spring
	public void setEmitirRelacoesCobrancasSinteticoService(EmitirRelacaoRedecosService emitirRelacaoRedecosService) {
		this.reportServiceSupport = emitirRelacaoRedecosService;
	}

	
	/**Busca a moeda da sessão do usuário
     *
     * @author Diego Umpierre
     * @since 22/09/2006
     *
     * @return
     */
    public Map findMoedaSessao(TypedFlatMap tfm){
      Moeda moedaSession = SessionUtils.getMoedaSessao();
      Map retorno = new HashMap();
      retorno.put("idMoeda", moedaSession.getIdMoeda());
      return retorno;

    }


}