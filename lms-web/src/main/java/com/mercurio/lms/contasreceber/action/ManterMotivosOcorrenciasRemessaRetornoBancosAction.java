package com.mercurio.lms.contasreceber.action;

import java.io.Serializable;
import java.util.List;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.contasreceber.model.MotivoOcorrenciaBanco;
import com.mercurio.lms.contasreceber.model.service.MotivoOcorrenciaBancoService;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;


/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.contasreceber.manterMotivosOcorrenciasRemessaRetornoBancosAction"
 */

public class ManterMotivosOcorrenciasRemessaRetornoBancosAction extends CrudAction {
	
	/** Cria a variável do tipo MotivoOcorOrenciaBancoService*/
	private MotivoOcorrenciaBancoService motivoOcorrenciaBancoService;
	
	/** Seta um novo objeto MotivoOcorrenciaBancoService na variável motivoOcorrenciaBancoService, através da inversão de controle do Spring */
	public void setMotivoOcorrenciaBancoService(MotivoOcorrenciaBancoService motivoOcorrenciaBancoService) {
		this.motivoOcorrenciaBancoService = motivoOcorrenciaBancoService;
	}
	
	/**
     * Método que busca as MotivoOcorrenciasBanco de acordo com os filtros passados
     * @param criteria
     * @return ResultSetPage
     */
	public ResultSetPage findPaginatedByMotivoOcorrenciaRemessaRetornoBancos(TypedFlatMap criteria){
		return motivoOcorrenciaBancoService.findPaginatedByMotivoOcorrenciaRemessaRetornoBancos(criteria);
	}
	
	 /**
     * Método que retorna o número de registros de acordo com os filtros passados
     * @param criteria
     * @return
     */
	public Integer getRowCountByMotivoOcorrenciaRemessaRetornoBancos(TypedFlatMap criteria){
		return motivoOcorrenciaBancoService.getRowCountByMotivoOcorrenciaRemessaRetornoBancos(criteria);
	}
	
	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	motivoOcorrenciaBancoService.removeByIds(ids);
    }

    /**
     * Método responsável por carregar um pojo MotivoOcorrenciaBanco de acordo com o id passado por parâmetro
     * @param id
     * @return OcorrenciaBancos
     */
    public MotivoOcorrenciaBanco findById(Long id) {
		return motivoOcorrenciaBancoService.findById(id);
	}

    /**
     * Método responsavel por excluir um MotivoOcorrenciaBanco de acordo com id passado por parâmetro
     * @param id
     */
	public void removeById(Long id) {
		motivoOcorrenciaBancoService.removeById(id);
	}
    
    /**
     * Método responsável por inserir ou editar um pojo MotivoOcorrenciaBanco
     * @param bean
     * @return Serializable
     */
    public Serializable store(MotivoOcorrenciaBanco bean) {
    	return motivoOcorrenciaBancoService.store(bean);
    }
}
