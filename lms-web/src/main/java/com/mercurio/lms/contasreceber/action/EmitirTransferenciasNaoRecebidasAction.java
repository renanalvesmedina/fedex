package com.mercurio.lms.contasreceber.action;

import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.contasreceber.report.EmitirTransferenciasNaoRecebidasService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.util.session.SessionUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.contasreceber.emitirTransferenciasNaoRecebidasAction"
 */

public class EmitirTransferenciasNaoRecebidasAction extends ReportActionSupport {
	
	private FilialService filialService; 
	
	public void setEmitirTransferenciasNaoRecebidasService(EmitirTransferenciasNaoRecebidasService service){
		this.reportServiceSupport = service;
	}
	
	/**
	 * Busca uma lista de filiais
	 * @param map sgFilial a ser buscada
	 * @return Lista de filiais encontradas
	 */
	public List findLookupFilial(Map map){
		return filialService.findLookupBySgFilial(map);
	}
	
	/**
	 * Busca a filial do usuário e verifica se a filial do usuário é a Matriz
	 * @param tfm Critérios de pesquisa
	 * @return TypedFlatMap com dados de filial e a informação se a filial é ou não a Matriz
	 */
	public TypedFlatMap findFilialUsuario(TypedFlatMap tfm){
		
		Filial filialUsuario = SessionUtils.getFilialSessao();
		
		tfm = new TypedFlatMap();
		
		tfm.put("filial.idFilial",filialUsuario.getIdFilial());
		tfm.put("filial.sgFilial",filialUsuario.getSgFilial());
		tfm.put("siglaNomeFilial",filialUsuario.getSiglaNomeFilial());
		tfm.put("filial.pessoa.nmFantasia",filialUsuario.getPessoa().getNmFantasia());
		
		return tfm;
	}

	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}

}
