package com.mercurio.lms.contasreceber.action;

import java.io.Serializable;
import java.util.List;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.contasreceber.model.Cedente;
import com.mercurio.lms.contasreceber.model.service.CedenteService;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;



/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.contasreceber.manterCedentesAction"
 */

public class ManterCedentesAction extends CrudAction {

	/** Cria a variável do tipo cedenteService*/
	private CedenteService cedenteService;
	
	/** Seta um novo objeto cedenteService na variável cedenteService, através da inversão de controle do Spring */
	public void setCedenteService(CedenteService cedenteService) {
		this.cedenteService = cedenteService;
	}
	
	/**
     * Método que busca as Cedente de acordo com os filtros passados
     * @param criteria
     * @return ResultSetPage
     */
	public ResultSetPage findPaginatedByCedente(TypedFlatMap criteria){
		return cedenteService.findPaginatedByCedente(criteria);
	}
	
	 /**
     * Método que retorna o número de registros de acordo com os filtros passados
     * @param criteria
     * @return
     */
	public Integer getRowCountByCedente(TypedFlatMap criteria){
		return cedenteService.getRowCountByCedente(criteria);
	}
	
	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	cedenteService.removeByIds(ids);
    }

    /**
     * Método responsável por carregar um pojo Cedente de acordo com o id passado por parâmetro
     * @param id
     * @return Cedente
     */
    public Cedente findById(Long id) {
		return cedenteService.findById(id);
	}

    /**
     * Método responsavel por excluir um Cedente de acordo com id passado por parâmetro
     * @param id
     */
	public void removeById(Long id) {
		cedenteService.removeById(id);
	}
    
    /**
     * Método responsável por inserir ou editar um pojo Cedente
     * @param bean
     * @return Serializable
     */
    public Serializable store(Cedente bean) {
    	return cedenteService.store(bean);
    }

}
