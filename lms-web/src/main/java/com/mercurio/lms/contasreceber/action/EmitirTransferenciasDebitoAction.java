package com.mercurio.lms.contasreceber.action;

import java.util.List;

import org.joda.time.YearMonthDay;

import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.contasreceber.report.EmitirTransferenciasDebitoService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.municipios.model.service.HistoricoFilialService;
import com.mercurio.lms.util.JTDateTimeUtils;
import com.mercurio.lms.util.session.SessionUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.contasreceber.emitirTransferenciasDebitoAction"
 */

public class EmitirTransferenciasDebitoAction extends ReportActionSupport {
	
	private FilialService filialService;
	
	public void setTransferenciaService(EmitirTransferenciasDebitoService transferenciasDebitoService) {
		this.reportServiceSupport = transferenciasDebitoService;
	}

	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}
	
	/**
	 * Busca uma lista de filiais
	 * @param map sgFilial a ser buscada
	 * @return Lista de filiais encontradas
	 */
	public List findLookupFilial(TypedFlatMap tfm){ 
		
		YearMonthDay dataAtual = tfm.getYearMonthDay("historicoFiliais.vigenteEm");
		
		if( dataAtual == null ){
			dataAtual = JTDateTimeUtils.getDataAtual();
		}
		
		return filialService.findLookupBySgFilialVigenteEm(tfm.getString("sgFilial"),dataAtual, tfm.getString("tpAcesso"));
	}
	
	/**
	 * Busca a filial do usuário e verifica se a filial do usuário é a Matriz
	 * @param tfm Critérios de pesquisa
	 * @return TypedFlatMap com dados de filial e a informação se a filial é ou não a Matriz
	 */
	public TypedFlatMap findFilialUsuario(TypedFlatMap tfm){
		
		Filial filialUsuario = SessionUtils.getFilialSessao();
		
		boolean filialMatriz = SessionUtils.isFilialSessaoMatriz();
		
		tfm = new TypedFlatMap();
		
		tfm.put("filial.idFilial",filialUsuario.getIdFilial());
		tfm.put("filial.sgFilial",filialUsuario.getSgFilial());
		tfm.put("siglaNomeFilial",filialUsuario.getSiglaNomeFilial());
		tfm.put("filial.pessoa.nmFantasia",filialUsuario.getPessoa().getNmFantasia());
		
		if( filialMatriz ){
			tfm.put("vigenteEm",JTDateTimeUtils.getDataAtual());
		}
		
		tfm.put("filialMatriz",Boolean.valueOf(filialMatriz));
		
		return tfm;
	}
}