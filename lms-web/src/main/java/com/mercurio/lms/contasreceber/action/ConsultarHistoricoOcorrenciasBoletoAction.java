package com.mercurio.lms.contasreceber.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.FindDefinition;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.contasreceber.model.Boleto;
import com.mercurio.lms.contasreceber.model.HistoricoBoleto;
import com.mercurio.lms.contasreceber.model.TarifaBoleto;
import com.mercurio.lms.contasreceber.model.service.ConsultarHistoricoOcorrenciasBoletoService;
import com.mercurio.lms.contasreceber.model.service.GerarFaturaBoletoService;
import com.mercurio.lms.expedicao.model.DoctoServico;




/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.contasreceber.consultarHistoricoOcorrenciasBoletoAction"
 */

public class ConsultarHistoricoOcorrenciasBoletoAction {
	
	
	private ConsultarHistoricoOcorrenciasBoletoService consultarHistoricoOcorrenciasBoletoService;
	private GerarFaturaBoletoService gerarFaturaService;

	/**
	 * Consulta que busca os dados para popular a grid - Histórico da Movimentação 
	 * da tela Consultar Historico das Ocorrencias do Boleto
	 * 
	 */
	public ResultSetPage findPaginatedHistMov(TypedFlatMap map) {		 
		
		FindDefinition findDef = FindDefinition.createFindDefinition(map);
		
		ResultSetPage rsp = getConsultarHistoricoOcorrenciasBoletoService().findPaginatedHistMov(map.getLong("idBoleto"), findDef);

		if ( rsp != null ){
			List<HistoricoBoleto> lstFindPag = rsp.getList();
			List lstRetorno = new ArrayList();
			for (HistoricoBoleto historicoBoleto : lstFindPag) {
				TypedFlatMap mapRetorno = new TypedFlatMap();
				mapRetorno.put("tipoOcorrencia", historicoBoleto.getOcorrenciaBanco().getTpOcorrenciaBanco() );
				mapRetorno.put("nrOcorrenciaBanco", historicoBoleto.getOcorrenciaBanco().getNrOcorrenciaBanco() );
				mapRetorno.put("dsOcorrenciaBanco", historicoBoleto.getOcorrenciaBanco().getDsOcorrenciaBanco() );
				mapRetorno.put("tpSituacao", historicoBoleto.getTpSituacaoAprovacao() );
				mapRetorno.put("nmUsuario", historicoBoleto.getUsuario().getNmUsuario() );
				mapRetorno.put("dhOcorrencia", historicoBoleto.getDhOcorrencia() );
				mapRetorno.put("idHistoricoBoleto", historicoBoleto.getIdHistoricoBoleto() );
				mapRetorno.put("tpSituacaoHistoricoBoleto", historicoBoleto.getTpSituacaoHistoricoBoleto() );
				mapRetorno.put("dsHistoricoBoleto", historicoBoleto.getDsHistoricoBoleto() );
				mapRetorno.put("pendencia.idPendencia",  historicoBoleto.getIdPendencia() );
				
				DoctoServico doctoServico = gerarFaturaService.getFirstDoctoServicoFromFatura(historicoBoleto.getBoleto().getFatura(), historicoBoleto.getBoleto().getFatura().getItemFaturas());
				
				mapRetorno.put("tpDoctoServico", doctoServico.getTpDocumentoServico() );
				
				lstRetorno.add(mapRetorno);
			}
			
			rsp.setList(lstRetorno);
		}
		
		return rsp;
	}

	/**
	 * Busca o numero de registros para a consulta do findPaginatedHistMov
	 * @param map 
	 * @return Integer - num. de tuplas
	 * 
	 * @author Diego Umpierre - LMS
	 */
	public Integer getRowCountHistMov(TypedFlatMap map) {
		return getConsultarHistoricoOcorrenciasBoletoService().getRowCountHistMov( map.getLong("idBoleto" ));
	}
	

		
	/**
	 * Consulta que busca os dados para popular a grid - Tarifas 
	 * da tela Consultar Historico das Ocorrencias do Boleto
	 * 
	 */
	public ResultSetPage findPaginatedTarBol(TypedFlatMap map) {		 
		
		FindDefinition findDef = FindDefinition.createFindDefinition(map);
		
		ResultSetPage rsp = getConsultarHistoricoOcorrenciasBoletoService().findPaginatedTarBol(map.getLong("idBoleto"), findDef);

		if ( rsp != null ){
			List lstFindPag = rsp.getList();
			List lstRetorno = new ArrayList();
			
			for (Iterator iter = lstFindPag.iterator(); iter.hasNext();){
				TarifaBoleto tarifaBoleto = (TarifaBoleto)iter.next();
				
				Map mapRetorno = new HashMap();
				
				mapRetorno.put("tipoOcorrencia", tarifaBoleto.getOcorrenciaBanco().getTpOcorrenciaBanco() );
				mapRetorno.put("nrOcorrenciaBanco", tarifaBoleto.getOcorrenciaBanco().getNrOcorrenciaBanco() );
				mapRetorno.put("dsOcorrenciaBanco", tarifaBoleto.getOcorrenciaBanco().getDsOcorrenciaBanco() );
				mapRetorno.put("vlTarifaBoleto", tarifaBoleto.getVlTarifaBoleto() );
				mapRetorno.put("dhInclusao", tarifaBoleto.getDhInclusao() );
				mapRetorno.put("idTarifaBoleto", tarifaBoleto.getIdTarifaBoleto() );
				
				lstRetorno.add(mapRetorno);
			}
			
			rsp.setList(lstRetorno);
		}
		
		return rsp;
	}

	/**
	 * Busca o numero de registros para a consulta do findPaginatedTarBol
	 * @param map 
	 * @return Integer - num. de tuplas
	 * 
	 * @author Diego Umpierre - LMS
	 */
	public Integer getRowCountTarBol(TypedFlatMap map) {
		return getConsultarHistoricoOcorrenciasBoletoService().getRowCountTarBol( map.getLong("idBoleto" ));
	}
	
	
	/**
	 * Consulta que busca os dados para popular a grid - Motivos da Movimentação 
	 * da tela Consultar Historico das Ocorrencias do Boleto
	 * 
	 */
	public ResultSetPage findPaginatedMotMov(TypedFlatMap map) {		 
		
		FindDefinition findDef = FindDefinition.createFindDefinition(map);
		
		ResultSetPage rsp = getConsultarHistoricoOcorrenciasBoletoService().findPaginatedMotMov(map.getLong("idHistoricoBoleto"), findDef);

		return rsp;
	}

	/**
	 * Busca o numero de registros para a consulta do findPaginatedMotMov
	 * @param map 
	 * @return Integer - num. de tuplas
	 * 
	 * @author Diego Umpierre - LMS
	 */
	public Integer getRowCountMotMov(TypedFlatMap map) {
		return getConsultarHistoricoOcorrenciasBoletoService().getRowCountMotMov( map.getLong("idHistoricoBoleto" ));
	}
	

	/**
	 * 	Metodo que busca os dados basicos da tela
	 */	
	public Map findHistoricoOcorBoleto(TypedFlatMap map){


		Boleto  boleto = getConsultarHistoricoOcorrenciasBoletoService().findHistoricoOcorBoleto( map.getLong("idBoleto" )); 
		
		Map mapRetorno = new HashMap();
		
		if ( boleto != null ){
			mapRetorno.put("nrBoleto", boleto.getNrBoleto() );
			mapRetorno.put("idBoleto", boleto.getIdBoleto() );
			mapRetorno.put("sgFilial", boleto.getFatura().getFilialByIdFilial().getSgFilial());
			mapRetorno.put("nrFatura", boleto.getFatura().getNrFatura());
		}
		return mapRetorno;
		
		
	}
	
	
	
	
	
	/**
	 * Setando a Service default. A service setada é ConsultarHistoricoOcorrenciasBoletoService
	 *  @author Diego Umpierre - LMS
	 */
	public void setHistoricoBoletoService(ConsultarHistoricoOcorrenciasBoletoService consultarHistoricoOcorrenciasBoletoService) {
		this.consultarHistoricoOcorrenciasBoletoService = consultarHistoricoOcorrenciasBoletoService;
	}
	
	/**
	 * Buscando a Service default
	 * @return ConsultarHistoricoOcorrenciasBoletoService
	 * 
	 *  @author Diego Umpierre - LMS
	 */
	public ConsultarHistoricoOcorrenciasBoletoService getConsultarHistoricoOcorrenciasBoletoService() {
		return consultarHistoricoOcorrenciasBoletoService;
	}
	
	public void setGerarFaturaService(GerarFaturaBoletoService gerarFaturaService) {
		this.gerarFaturaService = gerarFaturaService;
	}
	
	public GerarFaturaBoletoService getGerarFaturaService() {
		return gerarFaturaService;
	}
		
	
		
}
