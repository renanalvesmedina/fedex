package com.mercurio.lms.contasreceber.action;

import java.util.HashMap;
import java.util.Map;

import org.joda.time.YearMonthDay;

import com.mercurio.adsm.framework.BusinessException;
import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.model.service.MoedaPaisService;
import com.mercurio.lms.contasreceber.report.EmitirFechamentoDiarioChequesService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.municipios.model.service.HistoricoFilialService;
import com.mercurio.lms.util.JTDateTimeUtils;
import com.mercurio.lms.util.session.SessionUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.contasreceber.emitirFechamentoDiarioChequesAction"
 */

public class EmitirFechamentoDiarioChequesAction extends ReportActionSupport {

	private FilialService filialService;
	private HistoricoFilialService historicoFilialService;
	private MoedaPaisService moedaPaisService;

	public void setEmitirFechamentoDiarioChequesService(EmitirFechamentoDiarioChequesService emitirFechamentoDiarioChequesService) {
		this.reportServiceSupport = emitirFechamentoDiarioChequesService;
	}
	
	/**
	 * Busca a filial do usuário logado caso a mesma seja sucursal,
	 * caso contrário, busca a matriz da empresa do usuário logado
	 * @return
	 */
	public Filial findFilialUsuarioLogado() {

		// Buscar a filial da sessão, caso a mesma seja uma sucursal
		// Caso contrário, buscar a filial matriz da empresa da sessão
		Filial filial = SessionUtils.getFilialSessao(); 
		if (!historicoFilialService.validateFilialByTpFilial(SessionUtils.getFilialSessao().getIdFilial(), "SU")) {
			filial = filialService.findFilialByIdEmpresaTpFilial(SessionUtils.getEmpresaSessao().getIdEmpresa(), "MA"); 
		}

    	filial = filialService.findById(filial.getIdFilial());
    	return filial;

	}

	/**
	 * Método responsável por buscar a data atual
	 *
	 * @author Hector Julian Esnaola Junior
	 * @since 02/07/2007
	 *
	 * @return
	 *
	 */
	public Map findDataAtual(TypedFlatMap criteria){
		
		Map retorno = new HashMap();
		
		retorno.put("data", JTDateTimeUtils.getDataAtual());
		
		return retorno;
	}
	
	/**
	 * Método responsável por validar a data 
	 *
	 * @author Hector Julian Esnaola Junior
	 * @since 11/05/2007
	 *
	 * @return
	 *
	 */
	public void validateDate(TypedFlatMap tfm){
		
		YearMonthDay date = tfm.getYearMonthDay("data");
		
		if ( date != null && JTDateTimeUtils.comparaData(date, JTDateTimeUtils.getDataAtual()) > 0) {
			throw new BusinessException("LMS-00019");
		}
		
	}
	
	public Long getMoedaUsuarioLogado(){
		return moedaPaisService.findMoedaPaisByUsuarioLogado();		
	}
	
	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}

	public void setHistoricoFilialService(
			HistoricoFilialService historicoFilialService) {
		this.historicoFilialService = historicoFilialService;
	}

	public void setMoedaPaisService(MoedaPaisService moedaPaisService) {
		this.moedaPaisService = moedaPaisService;
	}
	
	
}
