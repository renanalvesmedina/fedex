package com.mercurio.lms.contasreceber.action;

import com.mercurio.adsm.framework.report.ReportExecutionManager;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.contasreceber.report.EmitirBDMService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.service.HistoricoFilialService;
import com.mercurio.lms.util.JTDateTimeUtils;
import com.mercurio.lms.util.session.SessionUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.contasreceber.emitirBDMAction"
 */

public class EmitirBDMAction {

	private EmitirBDMService emitirBDMService;
	private ReportExecutionManager reportExecutionManager; 
	
	public void setEmitirBDMService(EmitirBDMService emitirBDMService) {
		this.emitirBDMService = emitirBDMService;
	}
	
	public void setReportExecutionManager(
			ReportExecutionManager reportExecutionManager) {
		this.reportExecutionManager = reportExecutionManager;
	}

	/**
	 * Busca a filial do usuário e verifica se a filial do usuário é a Matriz
	 * @param tfm Critérios de pesquisa
	 * @return TypedFlatMap com dados de filial e a informação se a filial é ou não a Matriz
	 */
	public TypedFlatMap findFilialUsuario(TypedFlatMap tfm){
		
		Filial filialUsuario = SessionUtils.getFilialSessao();
		
		boolean filialMatriz = SessionUtils.isFilialSessaoMatriz();
		
		tfm = new TypedFlatMap();
		
		tfm.put("filial.idFilial", filialUsuario.getIdFilial());
		tfm.put("filial.sgFilial", filialUsuario.getSgFilial());
		tfm.put("filial.pessoa.nmFantasia", filialUsuario.getPessoa().getNmFantasia());
		
		if( filialMatriz ){
			tfm.put("vigenteEm", JTDateTimeUtils.getDataAtual());
		}
		
		tfm.put("filialMatriz", Boolean.valueOf(filialMatriz));
		
		return tfm;
	}
	
	public String execute(TypedFlatMap params) throws Exception {
		return this.reportExecutionManager.generateReportLocator(this.emitirBDMService, params);
	}
	
}