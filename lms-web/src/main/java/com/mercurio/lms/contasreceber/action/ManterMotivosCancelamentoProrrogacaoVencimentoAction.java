package com.mercurio.lms.contasreceber.action;

import java.io.Serializable;
import java.util.List;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.FindDefinition;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.model.service.DomainValueService;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.contasreceber.model.MotivoOcorrencia;
import com.mercurio.lms.contasreceber.model.service.MotivoOcorrenciaService;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.contasreceber.manterMotivosCancelamentoProrrogacaoVencimentoAction"
 */

public class ManterMotivosCancelamentoProrrogacaoVencimentoAction extends CrudAction {
	
	private DomainValueService domainValueService;

	public void setMotivoOcorrenciaService(MotivoOcorrenciaService serviceService) {
		this.defaultService = serviceService;
	}
	
	public MotivoOcorrenciaService getMotivoOcorrenciaService(){
		return (MotivoOcorrenciaService) this.defaultService;
	}
	
	/**
	 * Remove um MotivoOcorrencia
	 * @param tfm	Id do motivo a ser excluido
	 */
    public void removeById(TypedFlatMap tfm) {
        this.getMotivoOcorrenciaService().removeById(tfm.getLong("idMotivoOcorrencia"));
    }

	/**
	 * Remove uma lista de Motivos Ocorrência
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	this.getMotivoOcorrenciaService().removeByIds(ids);
    }

    /**
     * Busca um Motivo Ocorrencia pelo id
     * @param id Identificador do Motivo Ocorrencia
     * @return Motivo Ocorrencia encontrado
     */
    public MotivoOcorrencia findById(Long id) {
    	return this.getMotivoOcorrenciaService().findById(id);
    }
    
    /**
     * Salva um Motivo Ocorrencia 
     * @param tfm Dados do motivo a serem salvos
     * @return Identificador do Motivo Ocorrencia
     */
    public Serializable store(TypedFlatMap tfm) {
    	
    	MotivoOcorrencia bean = new MotivoOcorrencia();
    	
    	if( !tfm.getString("idMotivoOcorrencia").equals("") ){
    		bean.setIdMotivoOcorrencia(tfm.getLong("idMotivoOcorrencia"));
    	}
    	
    	bean.setDsMotivoOcorrencia(tfm.getVarcharI18n("dsMotivoOcorrencia"));
    	bean.setTpMotivoOcorrencia(domainValueService.findDomainValueByValue("DM_TIPO_MOTIVO_OCORRENCIA",tfm.getString("tpMotivoOcorrencia")));
    	bean.setTpSituacao(domainValueService.findDomainValueByValue("DM_STATUS",tfm.getString("tpSituacao")));    	
    	
    	return getMotivoOcorrenciaService().store(bean);
    }
    
    /**
     * Método de listagem da grid
     * @param tfm Critérios de pesquisa
     * @return ResultSetPage contendo os resultados da pesquisa e dados de paginação
     */
    public ResultSetPage findPaginated(TypedFlatMap tfm) {    	
    	return getMotivoOcorrenciaService().findPaginatedMotivoOcorrencia(tfm.getVarcharI18n("dsMotivoOcorrencia"),
    			                                                          tfm.getString("tpMotivoOcorrencia"),
    			                                                          tfm.getString("tpSituacao"),
    			                                                          FindDefinition.createFindDefinition(tfm));
    }
    
    /**
	 * Conta quantos registros serão exibidos na listagem
	 * @param dsMotivoOcorrencia Descrição do motivo ocorrência
     * @param tpMotivoOcorrencia Tipo do Motivo Ocorrência
     * @param tpSituacao Situação do Motivo Ocorrência
	 * @return Inteiro informando quantos registros serão exibidos na listagem
	 */
    public Integer getRowCount(TypedFlatMap tfm) {
    	return getMotivoOcorrenciaService().getRowCountMotivoOcorrencia(tfm.getVarcharI18n("dsMotivoOcorrencia"),
														                tfm.getString("tpMotivoOcorrencia"),
														                tfm.getString("tpSituacao"));
    }

	public void setDomainValueService(DomainValueService domainValueService) {
		this.domainValueService = domainValueService;
	}
}
