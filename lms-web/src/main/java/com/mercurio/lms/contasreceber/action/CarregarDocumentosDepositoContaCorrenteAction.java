package com.mercurio.lms.contasreceber.action;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.contasreceber.model.service.CarregarDocumentosDepositoContaCorrenteService;
import com.mercurio.lms.vendas.model.service.ClienteService;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.contasreceber.carregarDocumentosDepositoContaCorrenteAction"
 */

public class CarregarDocumentosDepositoContaCorrenteAction {
	
	private ClienteService clienteService;
	private CarregarDocumentosDepositoContaCorrenteService carregarDocumentosDepositoContaCorrenteService;
	
	/**
	 * Busca uma lista de clientes de acordo com os critérios de pesquisa
	 * @param tfm Critérios de pesquisa
	 * @return Lista de clientes retornados da pesquisa
	 */
	public List findLookupCliente(Map map){
		return clienteService.findLookup(map);
	}
	
	/**
	 * Método para importar dados de depósito em conta corrente
	 * @param tfm Dados da tela
	 */
	public Serializable executeImportDocumentosDepositadosContaCorrente(TypedFlatMap tfm){
		return getCarregarDocumentosDepositoContaCorrenteService().executeImportDocumentosDepositadosContaCorrente(tfm);
	}
	
	public void setCarregarDocumentosDepositoContaCorrenteService(CarregarDocumentosDepositoContaCorrenteService service){
		this.carregarDocumentosDepositoContaCorrenteService = service;
	}
	
	public CarregarDocumentosDepositoContaCorrenteService getCarregarDocumentosDepositoContaCorrenteService(){
		return carregarDocumentosDepositoContaCorrenteService;
	}

	public void setClienteService(ClienteService clienteService) {
		this.clienteService = clienteService;
	}

}
