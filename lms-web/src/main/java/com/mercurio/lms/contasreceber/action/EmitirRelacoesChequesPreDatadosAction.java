package com.mercurio.lms.contasreceber.action;

import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.contasreceber.report.EmitirRelacoesChequesPreDatadosService;
import com.mercurio.lms.contasreceber.report.EmitirRelacoesChequesPreDatadosServiceEmissao;
import com.mercurio.lms.contasreceber.report.EmitirRelacoesChequesPreDatadosServiceFilial;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Action que recebe parametros da tela e passa ao relatorio correto conforme tipo de quebra selecionado
 * @author Rafael Andrade de Oliveira
 * @since 24/03/2006
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.contasreceber.emitirRelacoesChequesPreDatadosAction"
 */

public class EmitirRelacoesChequesPreDatadosAction extends ReportActionSupport {

	/**
	 * Service do relatorio por vencimento
	 */
	private EmitirRelacoesChequesPreDatadosService emitirRelacoesChequesPreDatadosService;
	public void setEmitirRelacoesChequesPreDatadosService(EmitirRelacoesChequesPreDatadosService emitirRelacoesChequesPreDatadosService) {
		this.emitirRelacoesChequesPreDatadosService = emitirRelacoesChequesPreDatadosService;
	}

	/**
	 * Service do relatorio por data de emissao
	 */
	private EmitirRelacoesChequesPreDatadosServiceEmissao emitirRelacoesChequesPreDatadosServiceEmissao;
	public void setEmitirRelacoesChequesPreDatadosServiceEmissao(EmitirRelacoesChequesPreDatadosServiceEmissao emitirRelacoesChequesPreDatadosServiceEmissao) {
		this.emitirRelacoesChequesPreDatadosServiceEmissao = emitirRelacoesChequesPreDatadosServiceEmissao;
	}

	/**
	 * Service do relatorio por filial
	 */
	private EmitirRelacoesChequesPreDatadosServiceFilial emitirRelacoesChequesPreDatadosServiceFilial;
	public void setEmitirRelacoesChequesPreDatadosServiceFilial(EmitirRelacoesChequesPreDatadosServiceFilial emitirRelacoesChequesPreDatadosServiceFilial) {
		this.emitirRelacoesChequesPreDatadosServiceFilial = emitirRelacoesChequesPreDatadosServiceFilial;
	}
	
	/**
	 * Implementacao p/ verificacao de qual relatorio executar
	 */
	@Override
	public java.io.File execute(TypedFlatMap parameters) throws Exception {
		String tipoQuebra = parameters.getDomainValue("tipoQuebra").getValue();

		if (tipoQuebra.equals("E")) { // emissao
			this.reportServiceSupport = this.emitirRelacoesChequesPreDatadosServiceEmissao;
		} else if (tipoQuebra.equals("F")) { // filial
			this.reportServiceSupport = this.emitirRelacoesChequesPreDatadosServiceFilial;
		} else { // vencimento
			this.reportServiceSupport = this.emitirRelacoesChequesPreDatadosService;
		}
		
		return super.execute(parameters);
	}

}