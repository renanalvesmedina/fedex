package com.mercurio.lms.prestcontasciaaerea.action;

import java.util.HashMap;
import java.util.List;
import java.util.Map;


import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.service.EmpresaService;
import com.mercurio.lms.prestcontasciaaerea.model.service.FaturamentoCiaAereaService;
import com.mercurio.lms.prestcontasciaaerea.report.EmitirPrestacaoContasService;
import com.mercurio.lms.util.session.SessionUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.prestcontasciaaerea.emitirPrestacaoContasAction"
 * @author Robson Edemar Gehl
 */

public class EmitirPrestacaoContasAction extends ReportActionSupport {
	private EmpresaService empresaService;
	private FaturamentoCiaAereaService faturamentoCiaAereaService;
	
    /**
     * Lookup de Companhia Aerea 
     * @param map
     * @return
     */
    public List findComboCompanhiaAerea(Map map){
    	if (map == null) map = new HashMap();
    	map.put("tpEmpresa", "C");
    	return getEmpresaService().findComboEmpresa(map);
    }

    /** getter e setters **/
    
    public void setEmitirPrestacaoContasService(EmitirPrestacaoContasService emitirPrestacaoContasService) {
		this.reportServiceSupport = emitirPrestacaoContasService;
	}

	public EmpresaService getEmpresaService() {
		return empresaService;
	}

	public void setEmpresaService(EmpresaService empresaService) {
		this.empresaService = empresaService;
	}

    public FaturamentoCiaAereaService getFaturamentoCiaAereaService() {
		return faturamentoCiaAereaService;
	}

	public void setFaturamentoCiaAereaService(
			FaturamentoCiaAereaService faturamentoCiaAereaService) {
		this.faturamentoCiaAereaService = faturamentoCiaAereaService;
	}

	/**
	 * Define a Data Final do Periodo de vendas, conforme data inicial.<BR>
	 * @param map
	 * @return
	 */
	public String findDataFinal(TypedFlatMap map){		
		return getFaturamentoCiaAereaService().findDtFinalPeriodoFatura(map.getLong("empresa.idEmpresa"), map.getLong("filial.idFilial"), map.getYearMonthDay("dtInicial"), "M").toString("dd/MM/yyyy");
	}
    
	/**
	 * Busca a filial do usuário logado 
	 * @return
	 */
	public Filial findFilialUsuarioLogado() {
		return SessionUtils.getFilialSessao(); 
	}
    
}
