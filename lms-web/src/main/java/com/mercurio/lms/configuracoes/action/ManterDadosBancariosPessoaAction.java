package com.mercurio.lms.configuracoes.action;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.joda.time.YearMonthDay;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.model.ContaBancaria;
import com.mercurio.lms.configuracoes.model.service.ContaBancariaService;
import com.mercurio.lms.util.JTDateTimeUtils;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.configuracoes.manterDadosBancariosPessoaAction"
 */

public class ManterDadosBancariosPessoaAction extends CrudAction {
	public void setContaBancaria(ContaBancariaService contaBancariaService) {
		this.defaultService = contaBancariaService;
	}
    public void removeById(java.lang.Long id) {
        ((ContaBancariaService)defaultService).removeById(id);
    }

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	((ContaBancariaService)defaultService).removeByIds(ids);
    }

    /**
     * FindById customizado para evitar sobreposição dos dados de cliente vindos da outra tela
     * 
     *
     * @author José Rodrigo Moraes
     * @since 05/12/2006
     *
     * @param id
     * @return
     */
    public List findByIdCustomized(java.lang.Long id) {
    	
    	TypedFlatMap tfm = null; 
    	
    	ContaBancaria cb = ((ContaBancariaService)defaultService).findById(id);
    	
    	List retorno = null;
    	
    	if( cb != null ){
    		retorno = new ArrayList();
    		tfm = new TypedFlatMap();
    		tfm.put("idContaBancaria",cb.getIdContaBancaria());
    		tfm.put("nrContaBancaria",cb.getNrContaBancaria());
    		tfm.put("dvContaBancaria",cb.getDvContaBancaria());
    		tfm.put("dtVigenciaInicial",cb.getDtVigenciaInicial());
    		tfm.put("dtVigenciaFinal",cb.getDtVigenciaFinal());
    		
    		if( cb.getTpConta() != null ){
    			tfm.put("tpConta.description",cb.getTpConta().getDescription().getValue());
    			tfm.put("tpConta.value",cb.getTpConta().getValue());
    			tfm.put("tpConta.id",cb.getTpConta().getId());
    		}
    		
    		tfm.put("agenciaBancaria.banco.idBanco",cb.getAgenciaBancaria().getBanco().getIdBanco());
    		tfm.put("agenciaBancaria.banco.nrBanco",cb.getAgenciaBancaria().getBanco().getNrBanco());
    		tfm.put("agenciaBancaria.banco.nmBanco",cb.getAgenciaBancaria().getBanco().getNmBanco());
    		
    		tfm.put("agenciaBancaria.idAgenciaBancaria",cb.getAgenciaBancaria().getIdAgenciaBancaria());
    		tfm.put("agenciaBancaria.nrAgenciaBancaria",cb.getAgenciaBancaria().getNrAgenciaBancaria());
    		tfm.put("agenciaBancaria.nmAgenciaBancaria",cb.getAgenciaBancaria().getNmAgenciaBancaria());
    		
    		tfm.put("blDisabled", (cb.getDtVigenciaInicial().isBefore(JTDateTimeUtils.getDataAtual()))?Boolean.TRUE:Boolean.FALSE);
    		
    		retorno.add(tfm);
    	}
    	
    	return retorno;
    }
    
	public YearMonthDay findDataAtual(){
		return JTDateTimeUtils.getDataAtual();
	} 
	
	public Map store(ContaBancaria contaBancaria){
		((ContaBancariaService)defaultService).store(contaBancaria);
		
		TypedFlatMap mapRetorno = new TypedFlatMap();
		
		mapRetorno.put("idContaBancaria", contaBancaria.getIdContaBancaria());
		
		mapRetorno.put("blDisabled", (contaBancaria.getDtVigenciaInicial().isBefore(JTDateTimeUtils.getDataAtual()))?Boolean.TRUE:Boolean.FALSE);
		
		return mapRetorno;
	}

}
