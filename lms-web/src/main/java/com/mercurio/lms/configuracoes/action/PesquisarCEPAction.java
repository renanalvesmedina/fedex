package com.mercurio.lms.configuracoes.action;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.FindDefinition;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.model.Cep;
import com.mercurio.lms.configuracoes.model.param.PesquisarCepParam;
import com.mercurio.lms.configuracoes.model.service.CepService;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;

/**
 * Generated by: ADSM ActionGenerator
 *
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.configuracoes.pesquisarCEPAction"
 */

public class PesquisarCEPAction extends CrudAction {
	public void setCep(CepService cepService) {
		this.defaultService = cepService;
	}
	private CepService getCepService() {
		return ((CepService)defaultService);
	}

	public void removeById(java.lang.Long id) {
		getCepService().removeById(id);
	}

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
	public void removeByIds(List ids) {
		getCepService().removeByIds(ids);
	}

	public Cep findById(java.lang.Long id) {
		return getCepService().findById(id);
	}

	/**
	 * Rowcount substituto do método padrão necessário para complemento 
	 * do número do CEP caso o país informado seja BRASIL
	 *
	 * @author José Rodrigo Moraes
	 * @since 23/01/2007
	 *
	 * @param param javaBean de critérios de pesquisa (setado na action)
	 * @return 
	 */
	public Integer getRowCountEspecific(TypedFlatMap tfm) {
		return getCepService().getRowCountEspecific(createPesquisarCepParam(tfm));
	}

	/**
	 * FindPaginated substituto do método padrão necessário para complemento
	 * do número do CEP caso o país informado seja BRASIL
	 *
	 * @author José Rodrigo Moraes
	 * @since 23/01/2007
	 *
	 * @param param javaBean de critérios de pesquisa (setado na action)
	 * @return
	 */
	public ResultSetPage findPaginatedEspecific(TypedFlatMap tfm) {
		Map map = new HashMap();
		map.put("_currentPage",tfm.getString("_currentPage"));
		map.put("_pageSize",tfm.getString("_pageSize"));
		map.put("_order",tfm.getString("_order"));

		return getCepService().findPaginatedEspecific(createPesquisarCepParam(tfm),FindDefinition.createFindDefinition(map));
	}

	/**
	 * Monta o javaBean de parâmetros da tela
	 * 
	 *
	 * @author José Rodrigo Moraes
	 * @since 23/01/2007
	 *
	 * @param tfm Critérios de pesquisa
	 * @return javaBean com os dados
	 */
	private PesquisarCepParam createPesquisarCepParam(TypedFlatMap tfm) {
		PesquisarCepParam cepParam = new PesquisarCepParam();

		cepParam.setNrCep(tfm.getString("nrCep"));
		cepParam.setDsLogradouro(tfm.getString("nmLogradouro"));
		cepParam.setDsTipoLogradouro(tfm.getString("dsLogradouro"));
		cepParam.setNmBairro(tfm.getString("nmBairro"));

		cepParam.setIdPais(tfm.getLong("municipio.unidadeFederativa.pais.idPais"));
		cepParam.setIdUnidadeFederativa(tfm.getLong("municipio.unidadeFederativa.idUnidadeFederativa"));
		cepParam.setIdMunicipio(tfm.getLong("municipio.idMunicipio"));

		return cepParam;
	}

}
