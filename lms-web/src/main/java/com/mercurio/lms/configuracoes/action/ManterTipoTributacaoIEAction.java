package com.mercurio.lms.configuracoes.action;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.ConfiguracoesFacade;
import com.mercurio.lms.configuracoes.model.InscricaoEstadual;
import com.mercurio.lms.configuracoes.model.Pessoa;
import com.mercurio.lms.configuracoes.model.service.TipoTributacaoIEService;
import com.mercurio.lms.tributos.model.TipoTributacaoIE;
import com.mercurio.lms.tributos.model.TipoTributacaoIcms;
import com.mercurio.lms.tributos.model.service.TipoTributacaoIcmsService;
import com.mercurio.lms.util.JTDateTimeUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.configuracoes.manterTipoTributacaoIEAction"
 */          
public class ManterTipoTributacaoIEAction extends CrudAction {
	
	private TipoTributacaoIcmsService tipoTributacaoIcmsService;
	public void setTipoTributacaoIcmsService(TipoTributacaoIcmsService tipoTributacaoIcmsService){
		this.tipoTributacaoIcmsService = tipoTributacaoIcmsService;
	}
	
	public void setConfiguracoesFacade(ConfiguracoesFacade configuracoesFacade){
	}
	
	public void setTipoTributacaoIEService(TipoTributacaoIEService tipoTributacaoIEService){
		this.defaultService = tipoTributacaoIEService;
	}

	public void validateBlAtualizacaoCountasse(TypedFlatMap tfm){
    	getTipoTributacaoIEService().validateBlAtualizacaoCountasse(tfm.getLong("idPessoa"));
    }
	
 	public Map store(TypedFlatMap params) {
    	Map toReturn = new TypedFlatMap();
    	Boolean confirmado = params.getBoolean("confirmacao") == null ? Boolean.FALSE : params.getBoolean("confirmacao");
    	Long idTipoTributacaoIE = (Long)getTipoTributacaoIEService().store(mapToBean(params), confirmado);
    	toReturn.put("idTipoTributacaoIE", idTipoTributacaoIE);
    	return toReturn;
    }
 	
 	private TipoTributacaoIE mapToBean(TypedFlatMap params) {
 		TipoTributacaoIE toReturn = new TipoTributacaoIE();
 		toReturn.setIdTipoTributacaoIE(params.getLong("idTipoTributacaoIE"));

 		if (params.getLong("inscricaoEstadual.idInscricaoEstadual") != null) {
	 		InscricaoEstadual inscricaoEstadual = new InscricaoEstadual();
	 		if (params.getLong("inscricaoEstadual.pessoa.idPessoa") != null) {
	 			Pessoa p = new Pessoa();
	 			p.setIdPessoa(params.getLong("inscricaoEstadual.pessoa.idPessoa"));
	 			inscricaoEstadual.setPessoa(p);
	 		}
	 		inscricaoEstadual.setIdInscricaoEstadual(params.getLong("inscricaoEstadual.idInscricaoEstadual"));
	 		inscricaoEstadual.setNrInscricaoEstadual(params.getString("inscricaoEstadual.nrInscricaoEstadual"));
	 		toReturn.setInscricaoEstadual(inscricaoEstadual);
 		}

 		toReturn.setTpSituacaoTributaria(params.getDomainValue("tpSituacaoTributaria"));
		
 		if (params.getLong("tipoTributacaoIcms.idTipoTributacaoIcms") != null) {
	 		TipoTributacaoIcms tipoTributacaoIcms = new TipoTributacaoIcms();
			tipoTributacaoIcms.setIdTipoTributacaoIcms(params.getLong("tipoTributacaoIcms.idTipoTributacaoIcms"));
			toReturn.setTipoTributacaoIcms(tipoTributacaoIcms);
 		}

		toReturn.setBlIsencaoExportacoes(params.getBoolean("blIsencaoExportacoes"));
		toReturn.setBlAceitaSubstituicao(params.getBoolean("blAceitaSubstituicao"));
		toReturn.setBlIncentivada(params.getBoolean("blIncentivada"));
		toReturn.setDtVigenciaInicial(params.getYearMonthDay("dtVigenciaInicial"));
		toReturn.setDtVigenciaFinal(params.getYearMonthDay("dtVigenciaFinal"));
		
		return toReturn;
 	}
    
    /**
     * Remove uma ParametroSubstituicaoTrib pelo id passado mpor parametro
     * @param id
     */
    public void removeById(Long id) {
		getTipoTributacaoIEService().removeById(id);
	}
	
	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
	public void removeByIds(List ids) {
		getTipoTributacaoIEService().removeByIds(ids);
	}
	
	public TipoTributacaoIEService getTipoTributacaoIEService(){
		return (TipoTributacaoIEService)defaultService; 
	}
    
	/**
	 * Busca uma ParametroSubstituicaoTrib de acordo com o id passado por parametro
	 * @param id
	 * @return
	 */
	public Serializable findById(Long id) {
		
		TipoTributacaoIE ttie = getTipoTributacaoIEService().findById(id);
		
		TypedFlatMap tfm = null;
		
		if( ttie != null ){
			tfm = new TypedFlatMap();
			tfm.put("idTipoTributacaoIE",ttie.getIdTipoTributacaoIE());

			if( ttie.getTpSituacaoTributaria() != null ){ 
				tfm.put("tpSituacaoTributaria.description",ttie.getTpSituacaoTributaria().getDescription().getValue());
				tfm.put("tpSituacaoTributaria.value",ttie.getTpSituacaoTributaria().getValue());
				tfm.put("tpSituacaoTributaria.id",ttie.getTpSituacaoTributaria().getId());
			}
			
			if( ttie.getTipoTributacaoIcms() != null ){			
				tfm.put("tipoTributacaoIcms.idTipoTributacaoIcms",ttie.getTipoTributacaoIcms().getIdTipoTributacaoIcms());
				tfm.put("tipoTributacaoIcms.dsTipoTributacaoIcms",ttie.getTipoTributacaoIcms().getDsTipoTributacaoIcms());
			}
			
			tfm.put("blIsencaoExportacoes",ttie.getBlIsencaoExportacoes());
			tfm.put("blAceitaSubstituicao",ttie.getBlAceitaSubstituicao());
			tfm.put("blIncentivada",ttie.getBlIncentivada());
			tfm.put("dtVigenciaInicial",ttie.getDtVigenciaInicial());
			tfm.put("dtVigenciaFinal",ttie.getDtVigenciaFinal());
	
		}
		
		return tfm;
	}
	
	/**
	 * Método responsável por validar a regra 1.2
	 * 
	 * @author HectorJ
	 * @since 02/06/2006
	 * 
	 * @return Map 
	 */
	public Map validatePermissionEdit(TypedFlatMap criteria){
		
		Map map = new HashMap();
		
		/** Caso a dtVigenciaInicial seja menor que a data atual */
		if(JTDateTimeUtils.comparaData(criteria.getYearMonthDay("dtVigenciaInicial"), JTDateTimeUtils.getDataAtual()) < 0){
			map.put("result", "T");
		/** Caso a dtVigenciaInicial seja maior que a data atual */
		}else{
			map.put("result", "F");
		}
		
		return map;
	}
	
	/**
     * Método responsável por popular a combo de TipoTributacaoICMS somente onde o status é ativo
     * 
     * @author HectorJ
     * @since 31/05/2006
     * 
     * @param notInIdsParametrosGerais
     * @return List <TipoTributacaoIcms>
     */
	public List findComboTipoTributacaoIcmsOnlyActivaValues(){
		return tipoTributacaoIcmsService.findComboTipoTributacaoIcms(null, "A", null);
	}
}
