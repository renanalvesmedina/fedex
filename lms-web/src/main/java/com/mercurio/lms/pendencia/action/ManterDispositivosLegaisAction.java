package com.mercurio.lms.pendencia.action;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.municipios.model.service.UnidadeFederativaService;
import com.mercurio.lms.pendencia.model.UfDispositivoLegal;
import com.mercurio.lms.pendencia.model.service.UfDispositivoLegalService;
import com.mercurio.lms.util.session.SessionUtils;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;


/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.pendencia.manterDispositivosLegaisAction"
 */

public class ManterDispositivosLegaisAction extends CrudAction {
	
	private UnidadeFederativaService unidadeFederativaService;
	private UfDispositivoLegalService ufDispositivoLegalService;

	public UfDispositivoLegalService getUfDispositivoLegalService() {
		return ufDispositivoLegalService;
	}

	public void setUfDispositivoLegalService(
			UfDispositivoLegalService ufDispositivoLegalService) {
		this.ufDispositivoLegalService = ufDispositivoLegalService;
	}

	public UnidadeFederativaService getUnidadeFederativaService() {
		return unidadeFederativaService;
	}

	public void setUnidadeFederativaService(
			UnidadeFederativaService unidadeFederativaService) {
		this.unidadeFederativaService = unidadeFederativaService;
	}

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	getUfDispositivoLegalService().removeByIds(ids);
    }

    public void removeById(Long id) {
    	getUfDispositivoLegalService().removeById(id);
    }
    
    public UfDispositivoLegal findById(Long id){
    	return getUfDispositivoLegalService().findById(id);
    }

	public List findUfsByPais(Map criteria){
		String tpSituacao = null;
		if (criteria!=null){
			tpSituacao =  (String)criteria.get("tpSituacao");	
		}
		Long idPais = SessionUtils.getPaisSessao().getIdPais();
		return getUfDispositivoLegalService().findUfsByPais(idPais, tpSituacao);
	}

	public ResultSetPage findPaginatedDispositivosLegais(Map criteria){
		ResultSetPage resultSetPage = getUfDispositivoLegalService().findPaginated(criteria);
		List list = resultSetPage.getList();
		List retorno = new ArrayList();
		TypedFlatMap tfm = null;
	   	for (Iterator iter = list.iterator(); iter.hasNext();) {
    		tfm = new TypedFlatMap();
    		UfDispositivoLegal ufDispositivoLegal = (UfDispositivoLegal)iter.next();
	    	tfm.put("idUfDispositivoLegal", ufDispositivoLegal.getIdUfDispositivoLegal());
	    	tfm.put("dsDispositivoLegal", ufDispositivoLegal.getDsDispositivoLegal());
	    	tfm.put("unidadeFederativa.idUnidadeFederativa", ufDispositivoLegal.getUnidadeFederativa().getIdUnidadeFederativa());
	    	tfm.put("unidadeFederativa.sgUnidadeFederativa", ufDispositivoLegal.getUnidadeFederativa().getSgUnidadeFederativa());
    		retorno.add(tfm);
	   	}
	   	resultSetPage.setList(retorno);
    	return resultSetPage;
	}
	
    public Integer getRowCountDispositivosLegais(Map criteria) {
    	return getUfDispositivoLegalService().getRowCount(criteria);
    }
    
    public Serializable store(UfDispositivoLegal ufDispositivoLegal) {
    	return getUfDispositivoLegalService().store(ufDispositivoLegal);
    }
}
