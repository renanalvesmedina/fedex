package com.mercurio.lms.pendencia.action;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.pendencia.model.OcorrenciaPendencia;
import com.mercurio.lms.pendencia.model.service.OcorrenciaPendenciaService;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.pendencia.registrarOcorrenciasDocumentosServicoOcorrenciaLookupAction"
 */

public class RegistrarOcorrenciasDocumentosServicoOcorrenciaLookupAction extends CrudAction {
	private OcorrenciaPendenciaService ocorrenciaPendenciaService;
	
	public ResultSetPage findPaginatedOcorrencias(TypedFlatMap tfm) {
		List list = new ArrayList();
		ResultSetPage rsp = this.getOcorrenciaPendenciaService().findPaginatedToRegistrarOcorrenciasDoctosServico(tfm);
		for(Iterator it = rsp.getList().iterator(); it.hasNext(); ) {
			OcorrenciaPendencia ocorrenciaPendencia = (OcorrenciaPendencia)it.next();
			TypedFlatMap map = new TypedFlatMap();
			map.put("idOcorrenciaPendencia", ocorrenciaPendencia.getIdOcorrenciaPendencia());
			map.put("cdOcorrencia", ocorrenciaPendencia.getCdOcorrencia());
			map.put("dsOcorrencia", ocorrenciaPendencia.getDsOcorrencia());
			map.put("tpOcorrencia", ocorrenciaPendencia.getTpOcorrencia());
			map.put("blDescontoDPE", ocorrenciaPendencia.getBlDescontaDpe());
			map.put("blExigeRnc", ocorrenciaPendencia.getBlExigeRnc());
			map.put("blApreensao", ocorrenciaPendencia.getBlApreensao());
			map.put("tpPermissaoUnidade", ocorrenciaPendencia.getTpPermissaoUnidade());
			map.put("blPermiteOcorrenciaManifesto", ocorrenciaPendencia.getBlPermiteOcorParaManif());
			map.put("evento.idEvento", ocorrenciaPendencia.getEvento().getIdEvento());

			list.add(map);
		}
		rsp.setList(list);
		return rsp;
	}
	
	public Integer getRowCountOcorrencias(TypedFlatMap tfm) {
		return this.getOcorrenciaPendenciaService().getRowCountToRegistrarOcorrenciasDoctosServico(tfm);
	}


	public OcorrenciaPendenciaService getOcorrenciaPendenciaService() {
		return ocorrenciaPendenciaService;
	}
	public void setOcorrenciaPendenciaService(
			OcorrenciaPendenciaService ocorrenciaPendenciaService) {
		this.ocorrenciaPendenciaService = ocorrenciaPendenciaService;
	}

}
