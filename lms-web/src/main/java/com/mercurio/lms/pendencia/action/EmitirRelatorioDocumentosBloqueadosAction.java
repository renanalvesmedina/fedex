package com.mercurio.lms.pendencia.action;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.service.DomainValueService;
import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.FilterList;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.contasreceber.model.service.NotaDebitoNacionalService;
import com.mercurio.lms.entrega.model.service.ReciboReembolsoService;
import com.mercurio.lms.expedicao.model.service.ConhecimentoService;
import com.mercurio.lms.expedicao.model.service.CtoInternacionalService;
import com.mercurio.lms.expedicao.model.service.NotaFiscalServicoService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.municipios.model.service.MunicipioService;
import com.mercurio.lms.pendencia.model.service.MdaService;
import com.mercurio.lms.pendencia.model.service.OcorrenciaPendenciaService;
import com.mercurio.lms.pendencia.report.EmitirRelatorioDocumentosBloqueadosService;
import com.mercurio.lms.sim.model.service.LocalizacaoMercadoriaService;
import com.mercurio.lms.vendas.model.service.ClienteService;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir. O valor
 * do <code>id</code> informado abaixo deve ser utilizado para referenciar este
 * serviço.
 * 
 * @spring.bean id="lms.pendencia.emitirRelatorioDocumentosBloqueadosAction"
 */
public class EmitirRelatorioDocumentosBloqueadosAction extends
		ReportActionSupport {
	private FilialService filialService;
	private OcorrenciaPendenciaService ocorrenciaPendenciaService;
	private LocalizacaoMercadoriaService localizacaoMercadoriaService;
	private ClienteService clienteService;
	private MunicipioService municipioService;	
	private DomainValueService domainValueService;
    private ConhecimentoService conhecimentoService;
    private CtoInternacionalService ctoInternacionalService;
    private NotaFiscalServicoService notaFiscalServicoService;
    private NotaDebitoNacionalService notaDebitoNacionalService;
    private MdaService mdaService;
    private ReciboReembolsoService reciboReembolsoService;
	
	/**
	 * Método q executa o relátorio, mas testa alguns casos antes.
	 */
	@Override
	public java.io.File execute(TypedFlatMap parameters) throws Exception {
		return super.execute(parameters);
	}	
	
	public List findLookupCliente(Map criteria) {		
		return this.getClienteService().findLookup(criteria);
	}
	
	public List findLookupFilial(Map criteria) {
		return this.getFilialService().findLookup(criteria);
	}
	
    /**
     * Busca a filial baseado no documento de serviço
	 * 
     * @param criteria
     * @return
     */
    public List findLookupFilialByDocumentoServico(Map criteria) {
    	FilterList filter = new FilterList(getFilialService().findLookup(criteria)) {
			@Override
			public Map filterItem(Object item) {
				Filial filial = (Filial)item;
    			TypedFlatMap typedFlatMap = new TypedFlatMap();
	    		typedFlatMap.put("idFilial", filial.getIdFilial());
		    	typedFlatMap.put("sgFilial", filial.getSgFilial());
				return typedFlatMap;
			}
    	};
    	return (List)filter.doFilter();
    }
    
	public List findLookupLocalizacaoMercadoria(Map criteria) {
		return this.getLocalizacaoMercadoriaService().findLookup(criteria);
	}

	public List findLookupMunicipio(Map criteria) {
		return this.getMunicipioService().findLookup(criteria);
	}

	public List findLookupOcorrenciaPendencia(Map criteria) {
		return this.getOcorrenciaPendenciaService().findLookup(criteria);
	}

    /**
	 * ############################# # Documento Servico Methods #
	 * #############################
	 */
	public List findLookupServiceDocumentFilialCRT(Map criteria) {
		return findLookupFilialByDocumentoServico(criteria);
	}

	public List findLookupServiceDocumentFilialCTE(Map criteria) {
		return findLookupFilialByDocumentoServico(criteria);
	}

	/**
     * FindLookup para filial do tipo de DoctoServico Escolhido.
     */ 
    public List findLookupServiceDocumentFilialCTR(Map criteria) {
    	return findLookupFilialByDocumentoServico(criteria);
    }

	public List findLookupServiceDocumentFilialMDA(Map criteria) {
    	return findLookupFilialByDocumentoServico(criteria);
    }

	public List findLookupServiceDocumentFilialNDN(Map criteria) {
		return findLookupFilialByDocumentoServico(criteria);
	}

    public List findLookupServiceDocumentFilialNFS(Map criteria) {
    	return findLookupFilialByDocumentoServico(criteria);
    }     

    public List findLookupServiceDocumentFilialNFT(Map criteria) {
    	return findLookupFilialByDocumentoServico(criteria);
    }        

	public List findLookupServiceDocumentFilialNTE(Map criteria) {
    	return findLookupFilialByDocumentoServico(criteria);
    }    

    public List findLookupServiceDocumentFilialRRE(Map criteria) {
    	return findLookupFilialByDocumentoServico(criteria);
    }    

	public List findLookupServiceDocumentNumberCRT(Map criteria) {
		return this.getCtoInternacionalService().findLookup(criteria);
    }    
    
	public List findLookupServiceDocumentNumberCTE(Map criteria) {
		return getConhecimentoService().findLookup(criteria);
	}

    /**
     * FindLookup para a tag DoctoServico.
     */  
    public List findLookupServiceDocumentNumberCTR(Map criteria) {
    	return getConhecimentoService().findLookup(criteria);
    }

	public List findLookupServiceDocumentNumberMDA(Map criteria) {
		return this.getMdaService().findLookup(criteria);
    }

	public List findLookupServiceDocumentNumberNDN(Map criteria) {
		return this.getNotaDebitoNacionalService().findLookup(criteria);
	}

    public List findLookupServiceDocumentNumberNFS(Map criteria) {
    	return this.getNotaFiscalServicoService().findLookup(criteria);
    }    

    public List findLookupServiceDocumentNumberNFT(Map criteria) {
    	return this.getConhecimentoService().findLookup(criteria);
    }

	public List findLookupServiceDocumentNumberNTE(Map criteria) {
		return getConhecimentoService().findLookup(criteria);
    }    

    public List findLookupServiceDocumentNumberRRE(Map criteria) {
    	return this.getReciboReembolsoService().findLookup(criteria);
    }    

	/**
	 * Busca os tipos de documento serviço filtrando-os.
	 * 
	 * @param criteria
	 * @return
	 */
	public List findTipoDocumentoServico(Map criteria) {
		List dominiosValidos = new ArrayList();
		dominiosValidos.add("CTR");
		dominiosValidos.add("CRT");
		dominiosValidos.add("MDA");
		dominiosValidos.add("NTE");
		dominiosValidos.add("CTE");
		List retorno = domainValueService.findByDomainNameAndValues("DM_TIPO_DOCUMENTO_SERVICO", dominiosValidos);
		return retorno;
    }

	public ClienteService getClienteService() {
		return clienteService;
	}
    
	public ConhecimentoService getConhecimentoService() {
		return conhecimentoService;
	}
	
	public CtoInternacionalService getCtoInternacionalService() {
		return ctoInternacionalService;
	}

	public DomainValueService getDomainValueService() {
		return domainValueService;
	}

	public FilialService getFilialService() {
		return filialService;
	}

	public LocalizacaoMercadoriaService getLocalizacaoMercadoriaService() {
		return localizacaoMercadoriaService;
	}

	public MdaService getMdaService() {
		return mdaService;
	}

	public MunicipioService getMunicipioService() {
		return municipioService;
	}		

	public NotaDebitoNacionalService getNotaDebitoNacionalService() {
		return notaDebitoNacionalService;
	}

	public NotaFiscalServicoService getNotaFiscalServicoService() {
		return notaFiscalServicoService;
	}

	public OcorrenciaPendenciaService getOcorrenciaPendenciaService() {
		return ocorrenciaPendenciaService;
	}

	public ReciboReembolsoService getReciboReembolsoService() {
		return reciboReembolsoService;
	}

	public void setClienteService(ClienteService clienteService) {
		this.clienteService = clienteService;
	}

	public void setConhecimentoService(ConhecimentoService conhecimentoService) {
		this.conhecimentoService = conhecimentoService;
	}

	public void setCtoInternacionalService(CtoInternacionalService ctoInternacionalService) {
		this.ctoInternacionalService = ctoInternacionalService;
	}

	public void setDomainValueService(DomainValueService domainValueService) {
		this.domainValueService = domainValueService;
	}

	/**
	 * Declaração serviço principal da Action.
	 */
	public void setEmitirRelatorioDocumentosBloqueadosService(EmitirRelatorioDocumentosBloqueadosService emitirRelatorioDocumentosBloqueadosService) {
		this.reportServiceSupport = emitirRelatorioDocumentosBloqueadosService;
	}

	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}

	public void setLocalizacaoMercadoriaService(LocalizacaoMercadoriaService localizacaoMercadoriaService) {
		this.localizacaoMercadoriaService = localizacaoMercadoriaService;
	}

	public void setMdaService(MdaService mdaService) {
		this.mdaService = mdaService;
	}

	public void setMunicipioService(MunicipioService municipioService) {
		this.municipioService = municipioService;
	}

	public void setNotaDebitoNacionalService(NotaDebitoNacionalService notaDebitoNacionalService) {
		this.notaDebitoNacionalService = notaDebitoNacionalService;
	}

	public void setNotaFiscalServicoService(NotaFiscalServicoService notaFiscalServicoService) {
		this.notaFiscalServicoService = notaFiscalServicoService;
	}

	public void setOcorrenciaPendenciaService(OcorrenciaPendenciaService ocorrenciaPendenciaService) {
		this.ocorrenciaPendenciaService = ocorrenciaPendenciaService;
	}

	public void setReciboReembolsoService(ReciboReembolsoService reciboReembolsoService) {
		this.reciboReembolsoService = reciboReembolsoService;
	}
}
