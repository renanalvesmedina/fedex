package com.mercurio.lms.fretecarreteirocoletaentrega.action;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.ConfiguracoesFacade;
import com.mercurio.lms.configuracoes.model.MoedaPais;
import com.mercurio.lms.configuracoes.model.service.MoedaPaisService;
import com.mercurio.lms.contratacaoveiculos.model.service.MeioTransporteRodoviarioService;
import com.mercurio.lms.contratacaoveiculos.model.service.ProprietarioService;
import com.mercurio.lms.fretecarreteirocoletaentrega.report.EmitirExtratoFrotaControleCargaService;
import com.mercurio.lms.fretecarreteirocoletaentrega.report.EmitirExtratoFrotaNotaCreditoService;
import com.mercurio.lms.fretecarreteirocoletaentrega.report.EmitirExtratoFrotaReciboService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.Pais;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.util.session.SessionUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.fretecarreteirocoletaentrega.emitirExtratoFrotaAction"
 */

public class EmitirExtratoFrotaAction extends ReportActionSupport {
	
	private EmitirExtratoFrotaControleCargaService emitirExtratoFrotaControleCargaService;
	private EmitirExtratoFrotaNotaCreditoService emitirExtratoFrotaNotaCreditoService;
	private EmitirExtratoFrotaReciboService emitirExtratoFrotaReciboService;
	private ProprietarioService proprietarioService;
	private FilialService filialService;
	private MeioTransporteRodoviarioService meioTransporteRodoviarioService;
	private ConfiguracoesFacade configuracoesFacade;
	private MoedaPaisService moedaPaisService;
	
	
	public MoedaPaisService getMoedaPaisService() {
		return moedaPaisService;
	}

	public void setMoedaPaisService(MoedaPaisService moedaPaisService) {
		this.moedaPaisService = moedaPaisService;
	}

	public ConfiguracoesFacade getConfiguracoesFacade() {
		return configuracoesFacade;
	}

	public void setConfiguracoesFacade(ConfiguracoesFacade configuracoesFacade) {
		this.configuracoesFacade = configuracoesFacade;
	}

	public MeioTransporteRodoviarioService getMeioTransporteRodoviarioService() {
		return meioTransporteRodoviarioService;
	}

	public void setMeioTransporteRodoviarioService(
			MeioTransporteRodoviarioService meioTransporteRodoviarioService) {
		this.meioTransporteRodoviarioService = meioTransporteRodoviarioService;
	}

	public FilialService getFilialService() {
		return filialService;
	}

	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}

	public ProprietarioService getProprietarioService() {
		return proprietarioService;
	}

	public void setProprietarioService(ProprietarioService proprietarioService) {
		this.proprietarioService = proprietarioService;
	}
	
	


	@Override
	public java.io.File execute(TypedFlatMap parameters) throws Exception {
		if (parameters.getString("tpSelecao").equalsIgnoreCase("N")){
			this.reportServiceSupport = emitirExtratoFrotaNotaCreditoService;
		} else if (parameters.getString("tpSelecao").equalsIgnoreCase("R")) {
			this.reportServiceSupport = emitirExtratoFrotaReciboService;
		} else {
			this.reportServiceSupport = emitirExtratoFrotaControleCargaService;
		}
		return super.execute(parameters); 
	}
	
	
	
	public List findLookupProprietario(Map criteria) {
		return getProprietarioService().findLookup(criteria);
	}
	
	public List findLookupFilial(Map criteria) {
		return getFilialService().findLookup(criteria);
	}
	
	public List findLookupMeioTransporteRodoviario(TypedFlatMap criteria) {
    	return getMeioTransporteRodoviarioService().findLookupWithProprietario(criteria);
    }
	
	
	public EmitirExtratoFrotaControleCargaService getEmitirExtratoFrotaControleCargaService() {
		return emitirExtratoFrotaControleCargaService;
	}

	public void setEmitirExtratoFrotaControleCargaService(
			EmitirExtratoFrotaControleCargaService emitirExtratoFrotaControleCargaService) {
		this.emitirExtratoFrotaControleCargaService = emitirExtratoFrotaControleCargaService;
	}

	public EmitirExtratoFrotaNotaCreditoService getEmitirExtratoFrotaNotaCreditoService() {
		return emitirExtratoFrotaNotaCreditoService;
	}

	public void setEmitirExtratoFrotaNotaCreditoService(
			EmitirExtratoFrotaNotaCreditoService emitirExtratoFrotaNotaCreditoService) {
		this.emitirExtratoFrotaNotaCreditoService = emitirExtratoFrotaNotaCreditoService;
	}

	public EmitirExtratoFrotaReciboService getEmitirExtratoFrotaReciboService() {
		return emitirExtratoFrotaReciboService;
	}

	public void setEmitirExtratoFrotaReciboService(
			EmitirExtratoFrotaReciboService emitirExtratoFrotaReciboService) {
		this.emitirExtratoFrotaReciboService = emitirExtratoFrotaReciboService;
	}
	
	public List findMoedaPais(Map criteria){
		Pais p = SessionUtils.getPaisSessao();
		return configuracoesFacade.getMoedasPais(p.getIdPais(),Boolean.TRUE);
	}
	
	public TypedFlatMap findFilialUsuarioLogado(){
		TypedFlatMap typedFlatMap = new TypedFlatMap();
		Filial filial = SessionUtils.getFilialSessao();
		
		typedFlatMap.put("filial.sgFilial", filial.getSgFilial());
		typedFlatMap.put("filial.pessoa.nmFantasia", filial.getPessoa().getNmFantasia());
		typedFlatMap.put("filial.idFilial", filial.getIdFilial());
		
		return typedFlatMap;
	}
	
	public Map findMoedaUsuario() {		
		Pais p = SessionUtils.getPaisSessao();
		MoedaPais mp = moedaPaisService.findMoedaPaisMaisUtilizada(p.getIdPais());	
		Map m = new HashMap();
		m.put("idMoedaPais",mp.getIdMoedaPais());
		m.put("idMoeda",mp.getMoeda().getIdMoeda());
		m.put("dsSimbolo", mp.getMoeda().getDsSimbolo());
		m.put("siglaSimbolo", mp.getMoeda().getSiglaSimbolo());
		m.put("idPaisDestino",mp.getPais().getIdPais());
		return m;
	}

	
	

}
