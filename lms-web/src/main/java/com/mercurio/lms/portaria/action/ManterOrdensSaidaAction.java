package com.mercurio.lms.portaria.action;

import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.model.Pessoa;
import com.mercurio.lms.configuracoes.model.Usuario;
import com.mercurio.lms.configuracoes.model.service.UsuarioService;
import com.mercurio.lms.contratacaoveiculos.model.MeioTransporteRodoviario;
import com.mercurio.lms.contratacaoveiculos.model.TipoMeioTransporte;
import com.mercurio.lms.contratacaoveiculos.model.service.MeioTransporteRodoviarioService;
import com.mercurio.lms.contratacaoveiculos.model.service.MotoristaService;
import com.mercurio.lms.contratacaoveiculos.model.service.TipoMeioTransporteService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.portaria.model.OrdemSaida;
import com.mercurio.lms.portaria.model.service.OrdemSaidaService;
import com.mercurio.lms.util.FormatUtils;
import com.mercurio.lms.util.session.SessionUtils;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;


/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.portaria.manterOrdensSaidaAction"
 */

public class ManterOrdensSaidaAction extends CrudAction {
	 
	private FilialService filialService;
	private MeioTransporteRodoviarioService meioTransporteRodoviarioService;
	private MotoristaService motoristaService;
	private UsuarioService usuarioService;
	private TipoMeioTransporteService tipoMeioTransporteService;
	
	public void setService(OrdemSaidaService ordemSaidaService) {
		this.defaultService = ordemSaidaService;
	}
	 
	public List findFilial(Map criteria){
		return getFilialService().findLookup(criteria);
	}

	public List findMeioTransporteRodoviario(TypedFlatMap criteria){
		return getMeioTransporteRodoviarioService().findLookup(criteria);
	}

	public List findResponsavel(TypedFlatMap tfm){
		return usuarioService.findLookupUsuarioFuncionario(tfm.getLong("idUsuario"), tfm.getString("nrMatricula"), tfm.getLong("filial.idFilial"), null, null, null, true);
	}
	 
	public List findMotorista(Map criteria){
		return getMotoristaService().findLookup(criteria);
	}
	
	public TipoMeioTransporte findTipoMeioTransporteComposto(TypedFlatMap criteria){
		TipoMeioTransporte tipoMeioTransporte = tipoMeioTransporteService.findTipoMeioTransporteCompostoByIdMeioTransporte(criteria.getLong("idMeioTransporte"));
		if (tipoMeioTransporte != null)
			return tipoMeioTransporte.getTipoMeioTransporte();
		return null;
	}
	
	public ResultSetPage findPaginatedCustom(TypedFlatMap criteria) {
		return ((OrdemSaidaService)defaultService).findPaginatedCustom(criteria);
	}
	
	public Integer getRowCountCustom(TypedFlatMap criteria) {
		return ((OrdemSaidaService)defaultService).getRowCountCustom(criteria);
	}
	
	public TypedFlatMap findDadosSessao(){
		Filial fil = SessionUtils.getFilialSessao();
		Usuario usuario = SessionUtils.getUsuarioLogado();
		TypedFlatMap retorno = new TypedFlatMap(); 
		
		retorno.put("idFilial", fil.getIdFilial());
		retorno.put("sgFilial", fil.getSgFilial());
		retorno.put("nmFantasia", fil.getPessoa().getNmFantasia());
		retorno.put("idUsuario", usuario.getIdUsuario());
		retorno.put("nrMatricula", usuario.getNrMatricula());
		retorno.put("nome", usuario.getNmUsuario());
		
		return retorno;
	}
	
	public TypedFlatMap store(OrdemSaida bean) {
		((OrdemSaidaService) this.defaultService).store(bean);
		
		TypedFlatMap retorno = new TypedFlatMap();
		retorno.put("idOrdemSaida", bean.getIdOrdemSaida());
		retorno.put("dhRegistro", bean.getDhRegistro());
		
		return retorno;
	}
	
	
	public TypedFlatMap findById(Long id) {
		OrdemSaida ordemSaida = ((OrdemSaidaService) this.defaultService).findById(id);
		TypedFlatMap row = new TypedFlatMap();
		
		row.put("idOrdemSaida", ordemSaida.getIdOrdemSaida());
		MeioTransporteRodoviario meioTransporteRodoviario = ordemSaida.getMeioTransporteRodoviarioByIdMeioTransporte();
		row.put("meioTransporteRodoviarioByIdMeioTransporte.idMeioTransporte", meioTransporteRodoviario.getMeioTransporte().getIdMeioTransporte());
		row.put("meioTransporteRodoviarioByIdMeioTransporte2.idMeioTransporte", meioTransporteRodoviario.getMeioTransporte().getIdMeioTransporte());
		row.put("meioTransporteRodoviarioByIdMeioTransporte2.meioTransporte.nrFrota", meioTransporteRodoviario.getMeioTransporte().getNrFrota());
		row.put("meioTransporteRodoviarioByIdMeioTransporte.meioTransporte.nrIdentificador", meioTransporteRodoviario.getMeioTransporte().getNrIdentificador());
		
		meioTransporteRodoviario = ordemSaida.getMeioTransporteRodoviarioByIdSemiReboque();
		if (meioTransporteRodoviario != null) {
			row.put("meioTransporteRodoviarioByIdSemiReboque.idMeioTransporte", meioTransporteRodoviario.getMeioTransporte().getIdMeioTransporte());
			row.put("meioTransporteRodoviarioByIdSemiReboque2.idMeioTransporte", meioTransporteRodoviario.getMeioTransporte().getIdMeioTransporte());
			row.put("meioTransporteRodoviarioByIdSemiReboque2.meioTransporte.nrFrota", meioTransporteRodoviario.getMeioTransporte().getNrFrota());
			row.put("meioTransporteRodoviarioByIdSemiReboque.meioTransporte.nrIdentificador", meioTransporteRodoviario.getMeioTransporte().getNrIdentificador());
		}
		
		Pessoa motorista = ordemSaida.getMotorista().getPessoa();
		row.put("motorista.idMotorista", motorista.getIdPessoa());
		row.put("motorista.pessoa.tpIdentificacao", motorista.getTpIdentificacao().getValue());
		row.put("motorista.pessoa.nrIdentificacaoFormatado", FormatUtils.formatIdentificacao(motorista));
		row.put("motorista.pessoa.nrIdentificacao", motorista.getNrIdentificacao());
		row.put("motorista.pessoa.nmPessoa", motorista.getNmPessoa());
		
		Usuario usuario = ordemSaida.getUsuario();
		row.put("usuario.nmUsuario", usuario.getNmUsuario());
		row.put("usuario.nrMatricula", usuario.getNrMatricula());
		row.put("usuario.idUsuario", usuario.getIdUsuario());
		
		row.put("dhRegistro", ordemSaida.getDhRegistro());
		row.put("dhSaida", ordemSaida.getDhSaida());
		row.put("blSemRetorno", ordemSaida.getBlSemRetorno());
		row.put("dhChegada", ordemSaida.getDhChegada());
		row.put("obMotivo", ordemSaida.getObMotivo());
		
		Filial filial = ordemSaida.getFilialByIdFilialOrigem();
		row.put("filialByIdFilialOrigem.sgFilial", filial.getSgFilial());
		row.put("filialByIdFilialOrigem.idFilial", filial.getIdFilial());
		row.put("filialByIdFilialOrigem.pessoa.nmFantasia", filial.getPessoa().getNmFantasia());
		
		TypedFlatMap criterio = new TypedFlatMap();
		criterio.put("idMeioTransporte", ordemSaida.getMeioTransporteRodoviarioByIdMeioTransporte().getMeioTransporte().getIdMeioTransporte());
		TipoMeioTransporte tmt = findTipoMeioTransporteComposto(criterio);
		if (tmt != null)
			row.put("idTipoMeioTransporte", tmt.getIdTipoMeioTransporte());
				
		return row;
	}

	
	public void removeById(Long id) {
		((OrdemSaidaService) this.defaultService).removeById(id); 
	}
	
	/**
	 * Apaga várias entidades através do Id.
	 *
	 * @param ids lista com as entidades que deverão ser removida.
	 *
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
	public void removeByIds(List ids) {
		((OrdemSaidaService) this.defaultService).removeByIds(ids); 
	}
	
		
	
	/**
	 * @return Returns the filialService.
	 */
	public FilialService getFilialService() {
		return filialService;
	}


	/**
	 * @param filialService The filialService to set.
	 */
	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}


	/**
	 * @return Returns the meioTransporteRodoviarioService.
	 */
	public MeioTransporteRodoviarioService getMeioTransporteRodoviarioService() {
		return meioTransporteRodoviarioService;
	}


	/**
	 * @param meioTransporteRodoviarioService The meioTransporteRodoviarioService to set.
	 */
	public void setMeioTransporteRodoviarioService(
			MeioTransporteRodoviarioService meioTransporteRodoviarioService) {
		this.meioTransporteRodoviarioService = meioTransporteRodoviarioService;
	}

	/**
	 * @return Returns the motoristaService.
	 */
	public MotoristaService getMotoristaService() {
		return motoristaService;
	}


	/**
	 * @param motoristaService The motoristaService to set.
	 */
	public void setMotoristaService(MotoristaService motoristaService) {
		this.motoristaService = motoristaService;
	}

	/**
	 * @return Returns the usuarioService.
	 */
	public UsuarioService getUsuarioService() {
		return usuarioService;
	}

	/**
	 * @param usuarioService The usuarioService to set.
	 */
	public void setUsuarioService(UsuarioService usuarioService) {
		this.usuarioService = usuarioService;
	}

	/**
	 * @param tipoMeioTransporteService The tipoMeioTransporteService to set.
	 */
	public void setTipoMeioTransporteService(
			TipoMeioTransporteService tipoMeioTransporteService) {
		this.tipoMeioTransporteService = tipoMeioTransporteService;
	}

}
