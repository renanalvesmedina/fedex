package com.mercurio.lms.portaria.action;

import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.carregamento.model.service.ControleCargaService;
import com.mercurio.lms.configuracoes.model.Usuario;
import com.mercurio.lms.configuracoes.model.service.UsuarioService;
import com.mercurio.lms.contratacaoveiculos.model.service.MeioTransporteRodoviarioService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.portaria.model.service.ControleQuilometragemService;
import com.mercurio.lms.util.session.SessionUtils;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.portaria.manterQuilometragensSaidaChegadaAction"
 */

public class ManterQuilometragensSaidaChegadaAction extends CrudAction {

	public void setService(ControleQuilometragemService serviceService) {
		this.defaultService = serviceService;
	}

	private FilialService filialService;

	private UsuarioService usuarioService;

	private ControleCargaService controleCargaService;

	private MeioTransporteRodoviarioService meioTransporteRodoviarioService;

	public TypedFlatMap store(TypedFlatMap map) {
		return ((ControleQuilometragemService) defaultService).storeCustom(map);
	}

	public void removeById(java.lang.Long id) {
		((ControleQuilometragemService) defaultService).removeById(id);
	}

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
	public void removeByIds(List ids) {
		((ControleQuilometragemService) defaultService).removeByIds(ids);
	}

	public TypedFlatMap findByIdTela(java.lang.Long id) {
		return ((ControleQuilometragemService) defaultService).findByIdTela(id);
	}

	// Find da grid da tela 'Manter Quilometragem de chegada e saída ##########################################################################
	public ResultSetPage findPaginatedTela(TypedFlatMap criteria) {
		return ((ControleQuilometragemService) this.defaultService)
				.findPaginatedTela(criteria);
	}

	public Integer getRowCountTela(TypedFlatMap criteria) {
		return ((ControleQuilometragemService) this.defaultService)
				.getRowCountTela(criteria);
	}

	//  Find da grid da tela 'Manter Quilometragem de chegada e saída ##########################################################################

	/**
	 * findLookup de filiais.
	 * @param criteria
	 * @return
	 */
	public List findLookupFilial(Map criteria) {
		return filialService.findLookupFilial(criteria);
	}

	/**
	 * findLookup de Meio de transporte.
	 * @param criteria
	 * @return
	 */
	public List findLookupMeioTransp(Map criteria) {
		return meioTransporteRodoviarioService.findLookup(criteria);
	}

	/**
	 * findLookup de Controle de Carga.
	 * @param criteria
	 * @return
	 */
	public List findLookupControleCarga(Map criteria) {
		return controleCargaService.findLookup(criteria);
	}

	/**
	 * Retorna para a tela a filial do usuário logado.
	 * @return
	 */
	public TypedFlatMap findFilialUsuarioLogado() {
		TypedFlatMap retorno = new TypedFlatMap();

		Filial f = SessionUtils.getFilialSessao();
		retorno.put("idFilial", f.getIdFilial());
		retorno.put("sgFilial", f.getSgFilial());
		retorno.put("pessoa.nmFantasia", f.getPessoa().getNmFantasia());

		return retorno;
	}

	public TypedFlatMap findUsuarioLogado() {
		Usuario usuario = SessionUtils.getUsuarioLogado();
		Filial filial = SessionUtils.getFilialSessao();

		TypedFlatMap retorno = new TypedFlatMap();

		retorno.put("idUsuario", usuario.getIdUsuario());
		retorno.put("nrMatricula", usuario.getNrMatricula());
		retorno.put("nmUsuario", usuario.getNmUsuario());
		retorno.put("idFilial", filial.getIdFilial());
		retorno.put("sgFilial", filial.getSgFilial());
		retorno.put("nmFantasia", filial.getPessoa().getNmFantasia());

		return retorno;
	} 

	public FilialService getFilialService() {
		return filialService;
	}

	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}

	public UsuarioService getUsuarioService() {
		return usuarioService;
	}

	public void setUsuarioService(UsuarioService usuarioService) {
		this.usuarioService = usuarioService;
	}

	public ControleCargaService getControleCargaService() {
		return controleCargaService;
	}

	public void setControleCargaService(
			ControleCargaService controleCargaService) {
		this.controleCargaService = controleCargaService;
	}

	public MeioTransporteRodoviarioService getMeioTransporteRodoviarioService() {
		return meioTransporteRodoviarioService;
	}

	public void setMeioTransporteRodoviarioService(
			MeioTransporteRodoviarioService meioTransporteRodoviarioService) {
		this.meioTransporteRodoviarioService = meioTransporteRodoviarioService;
	}

}
