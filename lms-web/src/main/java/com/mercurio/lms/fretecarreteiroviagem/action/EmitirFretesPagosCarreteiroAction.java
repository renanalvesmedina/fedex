package com.mercurio.lms.fretecarreteiroviagem.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.service.DomainValueService;
import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.ConfiguracoesFacade;
import com.mercurio.lms.configuracoes.model.MoedaPais;
import com.mercurio.lms.configuracoes.model.service.MoedaPaisService;
import com.mercurio.lms.contratacaoveiculos.model.service.ProprietarioService;
import com.mercurio.lms.fretecarreteiroviagem.report.EmitirRelacaoFretesPagosCarreteiroService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.Pais;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.util.session.SessionUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.fretecarreteiroviagem.emitirFretesPagosCarreteiroAction"
 */

public class EmitirFretesPagosCarreteiroAction extends ReportActionSupport {
	
	private EmitirRelacaoFretesPagosCarreteiroService emitirRelacaoFretesPagosCarreteiroService;
	
	private FilialService filialService;
	
	private ProprietarioService proprietarioService;
	
	private MoedaPaisService moedaPaisService;
	
	private ConfiguracoesFacade configuracoesFacade;
	
	private DomainValueService domainValueService;

	public void setConfiguracoesFacade(ConfiguracoesFacade configuracoesFacade) {
		this.configuracoesFacade = configuracoesFacade;
	}

	public FilialService getFilialService() {
		return filialService;
	}

	public void setDomainValueService(DomainValueService domainValueService) {
		this.domainValueService = domainValueService;
	}
	
	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}

	public ProprietarioService getProprietarioService() {
		return proprietarioService;
	}

	public void setProprietarioService(ProprietarioService proprietarioService) {
		this.proprietarioService = proprietarioService;
	}

	public EmitirRelacaoFretesPagosCarreteiroService getEmitirRelacaoFretesPagosCarreteiroService() {
		return emitirRelacaoFretesPagosCarreteiroService;
	}

	public void setEmitirRelacaoFretesPagosCarreteiroService(EmitirRelacaoFretesPagosCarreteiroService emitirRelacaoFretesPagosCarreteiroService) {
		this.reportServiceSupport = emitirRelacaoFretesPagosCarreteiroService;
	}
	
	public List findLookupFilial(Map criteria){
		return getFilialService().findLookup(criteria);
	}
	
	public List findLookupProprietario(Map criteria){
		return getProprietarioService().findLookup(criteria);
	}
	
	public List findMoedaPais(Map criteria){
		Pais p = SessionUtils.getPaisSessao();
		return configuracoesFacade.getMoedasPais(p.getIdPais(),Boolean.TRUE);
	}
	
	public Map findMoedaUsuario() {		
		Pais p = SessionUtils.getPaisSessao();
		MoedaPais mp = moedaPaisService.findMoedaPaisMaisUtilizada(p.getIdPais());	
		Map m = new HashMap();
		m.put("idMoedaPais",mp.getIdMoedaPais());
		m.put("idMoeda",mp.getMoeda().getIdMoeda());
		m.put("idPais",mp.getPais().getIdPais());
		m.put("dsSimbolo", mp.getMoeda().getDsSimbolo());
		m.put("siglaSimbolo", mp.getMoeda().getSiglaSimbolo());
		return m; 
	}
	
	public List findTipoCarreteiro(Map criteria) {
    	List dominiosValidos = new ArrayList();
    	dominiosValidos.add("A");
    	dominiosValidos.add("E");
    	List retorno = domainValueService.findByDomainNameAndValues(
                 "DM_TIPO_PROPRIETARIO", dominiosValidos);
         return retorno;
  }

	public MoedaPaisService getMoedaPaisService() {
		return moedaPaisService;
	}

	public void setMoedaPaisService(MoedaPaisService moedaPaisService) {
		this.moedaPaisService = moedaPaisService;
	}
	
	public TypedFlatMap findFilialUsuarioLogado(){
		TypedFlatMap typedFlatMap = new TypedFlatMap();
		Filial filial = SessionUtils.getFilialSessao();
		
		typedFlatMap.put("filial.sgFilial", filial.getSgFilial());
		typedFlatMap.put("filial.pessoa.nmFantasia", filial.getPessoa().getNmFantasia());
		typedFlatMap.put("filial.idFilial", filial.getIdFilial());
		
		return typedFlatMap;
	}

	

}
