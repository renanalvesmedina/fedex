package com.mercurio.lms.fretecarreteiroviagem.action;

import java.math.BigDecimal;
import java.util.List;
import java.util.Map;

import org.joda.time.YearMonthDay;

import com.mercurio.adsm.framework.BusinessException;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.ConfiguracoesFacade;
import com.mercurio.lms.configuracoes.model.MoedaPais;
import com.mercurio.lms.configuracoes.model.service.MoedaPaisService;
import com.mercurio.lms.fretecarreteiroviagem.model.TipoCombustivel;
import com.mercurio.lms.fretecarreteiroviagem.model.ValorCombustivel;
import com.mercurio.lms.fretecarreteiroviagem.model.service.TipoCombustivelService;
import com.mercurio.lms.fretecarreteiroviagem.model.service.ValorCombustivelService;
import com.mercurio.lms.municipios.model.Pais;
import com.mercurio.lms.municipios.model.service.PaisService;
import com.mercurio.lms.util.FormatUtils;
import com.mercurio.lms.util.JTVigenciaUtils;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.fretecarreteiroviagem.manterValoresCombustivelAction"
 */

public class ManterValoresCombustivelAction extends CrudAction {
	
	private MoedaPaisService moedaPaisService;
	private PaisService paisService;
	private TipoCombustivelService tipoCombustivelService;
	private ConfiguracoesFacade configuracoesFacade;
	
	public List findComboMoedaPais(TypedFlatMap criteria) {
		return configuracoesFacade.getMoedasPais(criteria.getLong("pais.idPais"),Boolean.TRUE);
	}
	public List findLookupPais(TypedFlatMap criteria) {
		return paisService.findByNmPais(criteria.getString("nmPais"));
	}
	public List findComboTpCombustivel(TypedFlatMap flat) {
		return tipoCombustivelService.findCombo(flat);
	}
	public Object validateEnabledPercentual(TypedFlatMap typedFlatMap) {
		List rs = ((ValorCombustivelService)defaultService).findValorCombustivelByDtVigenciaTpCombustivelMoeda(
					typedFlatMap.getLong("idMoedaPais"),typedFlatMap.getLong("idTipoCombustivel"),
					typedFlatMap.getYearMonthDay("dtVigenciaInicial"));
		if (rs.size() == 0)
			return Boolean.FALSE;
		return (java.math.BigDecimal)rs.get(0); 
		
	}
	
	private String formatCurrency(BigDecimal arg) {
		return FormatUtils.formatDecimal("###,###,##0.000",arg);
	}
	private String formatPercent(BigDecimal arg) {
		return FormatUtils.formatDecimal("###,###,##0.000",arg);
	}
	
	public TypedFlatMap calculaValor(TypedFlatMap typedFlatMap) {
		BigDecimal vlOld = typedFlatMap.getBigDecimal("vlNow");
		BigDecimal vl = typedFlatMap.getBigDecimal("value");
		TypedFlatMap result = new TypedFlatMap();
		if (vlOld == null)
			return result;
	    			 
		result.put("vlValorCombustivel",formatCurrency(vl.divide(new BigDecimal(100),18,BigDecimal.ROUND_UP).add(new BigDecimal(1)).multiply(vlOld)));
	    return result;
	}
	public TypedFlatMap calculaPercentual(TypedFlatMap typedFlatMap) {
		BigDecimal vlOld = typedFlatMap.getBigDecimal("vlNow");
		BigDecimal vl = typedFlatMap.getBigDecimal("value");
		TypedFlatMap result = new TypedFlatMap();
		if (vlOld == null)
			return result;
		
		BigDecimal valor = vl.subtract(vlOld).divide(vlOld,18,BigDecimal.ROUND_UP).multiply(new BigDecimal(100));
		if (valor.compareTo(BigDecimal.valueOf(100)) > 0) {
			throw new BusinessException("LMS-24034"); 
		}
		
		result.put("pcAumento",formatPercent(valor));
		return result;
	}
	
	public void setService(ValorCombustivelService serviceService) {
		this.defaultService = serviceService;
	}
    public void removeById(java.lang.Long id) {
        ((ValorCombustivelService)defaultService).removeById(id);
    }

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	((ValorCombustivelService)defaultService).removeByIds(ids);
    }
    public TypedFlatMap store(TypedFlatMap parameters) {
        Pais pais = new Pais();
        	 pais.setIdPais(parameters.getLong("moedaPais.pais.idPais"));

    	MoedaPais moedaPais = new MoedaPais();
    			  moedaPais.setIdMoedaPais(parameters.getLong("moedaPais.idMoedaPais"));
    			  moedaPais.setPais(pais);
        	 
    	TipoCombustivel tipoCombustivel = new TipoCombustivel();
    					tipoCombustivel.setIdTipoCombustivel(parameters.getLong("tipoCombustivel.idTipoCombustivel"));
    	
    	ValorCombustivel bean = new ValorCombustivel();
    				     bean.setIdValorCombustivel(parameters.getLong("idValorCombustivel"));
    				     bean.setDtVigenciaInicial(parameters.getYearMonthDay("dtVigenciaInicial"));
    				     bean.setDtVigenciaFinal(parameters.getYearMonthDay("dtVigenciaFinal"));
    				     bean.setVlValorCombustivel(parameters.getBigDecimal("vlValorCombustivel"));
    				     bean.setMoedaPais(moedaPais);
    				     bean.setTipoCombustivel(tipoCombustivel);
    	((ValorCombustivelService)defaultService).store(bean);
    	TypedFlatMap result = new TypedFlatMap();
    				 result.put("idValorCombustivel",bean.getIdValorCombustivel());
    				 result.put("acaoVigenciaAtual",JTVigenciaUtils.getIntegerAcaoVigencia(bean));
    	return result;
    }

    public Map findById(java.lang.Long id) {
    	TypedFlatMap typedFlatMap = new TypedFlatMap();
    			     typedFlatMap.put("idValorCombustivel",id);
    	List rs = ((ValorCombustivelService)defaultService).findById(typedFlatMap);
    	if (rs.size() == 0)
    		return null;
    	
    	Map result = (Map)rs.get(0);
    	result.put("acaoVigenciaAtual",JTVigenciaUtils.getIntegerAcaoVigencia((YearMonthDay)result.get("dtVigenciaInicial"),
																				(YearMonthDay)result.get("dtVigenciaFinal")));    		
		Long idMoedaPais = (Long)((Map)result.get("moedaPais")).get("idMoedaPais");
		Long idTipoCombustivel = (Long)((Map)result.get("tipoCombustivel")).get("idTipoCombustivel");
		BigDecimal vlValorCombustivel = (BigDecimal)result.get("vlValorCombustivel");
		YearMonthDay dtVigenciaInicial = (YearMonthDay)result.get("dtVigenciaInicial");
		List rsTemp = ((ValorCombustivelService)defaultService).findValorCombustivelByDtVigenciaTpCombustivelMoeda(
															idMoedaPais,idTipoCombustivel,dtVigenciaInicial);
		if (rsTemp.size() > 0) {
			BigDecimal vlOld = (java.math.BigDecimal)rsTemp.get(0);
			result.put("pcAumento",vlValorCombustivel.subtract(vlOld).divide(vlOld,18,BigDecimal.ROUND_UP).multiply(new BigDecimal(100)));
			result.put("vlOld",vlOld);
		}
    	return result;
    }
    
    public ResultSetPage findPaginated(TypedFlatMap criteria) {
    	ResultSetPage rsp = ((ValorCombustivelService)defaultService).findPaginated(criteria);
    	List rs = rsp.getList();
    	for(int x = 0; x < rs.size(); x++) {
    		Map valor = (Map)rs.get(x);
    		Long idMoedaPais = (Long)((Map)valor.get("moedaPais")).get("idMoedaPais");
    		Long idTipoCombustivel = (Long)((Map)valor.get("tipoCombustivel")).get("idTipoCombustivel");
    		BigDecimal vlValorCombustivel = (BigDecimal)valor.get("vlValorCombustivel");
    		YearMonthDay dtVigenciaInicial = (YearMonthDay)valor.get("dtVigenciaInicial");
    		List rsTemp = ((ValorCombustivelService)defaultService).findValorCombustivelByDtVigenciaTpCombustivelMoeda(
    															idMoedaPais,idTipoCombustivel,dtVigenciaInicial);
    		if (rsTemp.size() > 0) {
    			BigDecimal vlOld = (java.math.BigDecimal)rsTemp.get(0);
    			valor.put("pcAumento",formatPercent(vlValorCombustivel.subtract(vlOld).divide(vlOld,18,BigDecimal.ROUND_UP).multiply(new BigDecimal(100))));
    			rs.set(x,valor);
    		}
    	} 
    	return rsp;
    }
    public Integer getRowCount(TypedFlatMap criteria) {
    	return ((ValorCombustivelService)defaultService).getRowCount(criteria);
    }
	public MoedaPaisService getMoedaPaisService() {
		return moedaPaisService;
	}
	public void setMoedaPaisService(MoedaPaisService moedaPaisService) {
		this.moedaPaisService = moedaPaisService;
	}
	public PaisService getPaisService() {
		return paisService;
	}
	public void setPaisService(PaisService paisService) {
		this.paisService = paisService;
	}
	public TipoCombustivelService getTipoCombustivelService() {
		return tipoCombustivelService;
	}
	public void setTipoCombustivelService(
			TipoCombustivelService tipoCombustivelService) {
		this.tipoCombustivelService = tipoCombustivelService;
	}
	public void setConfiguracoesFacade(ConfiguracoesFacade configuracoesFacade) {
		this.configuracoesFacade = configuracoesFacade;
	}

}
