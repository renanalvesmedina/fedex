package com.mercurio.lms.fretecarreteiroviagem.action;

import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.model.service.MoedaPaisService;
import com.mercurio.lms.fretecarreteiroviagem.report.EmitirTotalizacaoFreteCarreteiroService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.Regional;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.municipios.model.service.RegionalFilialService;
import com.mercurio.lms.municipios.model.service.RegionalService;
import com.mercurio.lms.util.session.SessionUtils;

/**
 * Generated by: ADSM ActionGenerator
 *
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.fretecarreteiroviagem.emitirTotalizacaoFreteCarreteiroAction"
 */

public class EmitirTotalizacaoFreteCarreteiroAction extends ReportActionSupport {
	private RegionalService regionalService;
	private FilialService filialService;
	private RegionalFilialService regionalFilialService;
	private MoedaPaisService moedaPaisService;

	public void setEmitirTotalizacaoFreteCarreteiroService(EmitirTotalizacaoFreteCarreteiroService service) {
		this.reportServiceSupport = service;
	}

	public List findComboRegional() {
		return regionalService.findRegional();
	}

	public List findLookupFilial(Map criteria) {
		return filialService.findLookupFilial(criteria);
	}

	public List findComboMoedaPais() {
		return moedaPaisService.findByPais(SessionUtils.getPaisSessao().getIdPais(),Boolean.TRUE);
	}

	public TypedFlatMap findDataSession() {
		Filial filial = SessionUtils.getFilialSessao();
		Regional regional = regionalFilialService.findRegional(filial.getIdFilial());

		TypedFlatMap result = new TypedFlatMap();

		result.put("filial.idFilial", filial.getIdFilial());
		result.put("filial.sgFilial", filial.getSgFilial());
		result.put("filial.pessoa.nmFantasia", filial.getPessoa().getNmFantasia());

		if (regional != null) {
			result.put("regional.idRegional", regional.getIdRegional());
			result.put("regional.siglaDescricao", regional.getSiglaDescricao());
		}

		return result;
	}

	public void setRegionalService(RegionalService regionalService) {
		this.regionalService = regionalService;
	}
	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}
	public void setRegionalFilialService(RegionalFilialService regionalFilialService) {
		this.regionalFilialService = regionalFilialService;
	}
	public void setMoedaPaisService(MoedaPaisService moedaPaisService) {
		this.moedaPaisService = moedaPaisService;
	}
}
