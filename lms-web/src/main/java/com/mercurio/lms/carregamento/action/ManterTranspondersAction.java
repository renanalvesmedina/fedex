package com.mercurio.lms.carregamento.action;


import java.io.Serializable;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.carregamento.model.service.TransponderService;
import com.mercurio.lms.carregamento.model.Transponder;
import com.mercurio.lms.util.session.SessionUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.carregamento.manterTranspondersAction"
 */
public class ManterTranspondersAction extends CrudAction  {


	/**
	 * Declaração serviço principal da Action.
	 * 
	 * @param transponderService
	 */
	public void setTransponderService(TransponderService transponderService) {
		super.setDefaultService(transponderService);
	}
	public TransponderService getTransponderService() {
		return (TransponderService) super.getDefaultService();
	}
	
	@Override
	public ResultSetPage findPaginated(Map criteria) {
		return getDefaultService().findPaginated(criteria);
	}
	
	public Serializable store(Transponder bean) {
		return super.store(bean);
	}
	
	public void removeById(TypedFlatMap id) {
		super.removeById(id.getLong("idTransponder"));
	}
	
	@Override
	@ParametrizedAttribute(type = java.lang.Long.class)
	public void removeByIds(List ids) {
		super.removeByIds(ids);
	}
	
	public Serializable findById(Transponder transponder) {
		return super.findById(transponder.getIdTransponder());
	}
	
	public TypedFlatMap getFilialSessao() {
		TypedFlatMap tfm = new TypedFlatMap();
		tfm.put("filial.idFilial", SessionUtils.getFilialSessao().getIdFilial());
		tfm.put("filial.sgFilial", SessionUtils.getFilialSessao().getSgFilial());
		tfm.put("filial.pessoa.nmFantasia", SessionUtils.getFilialSessao().getPessoa().getNmFantasia());
		return tfm;
	}
}