package com.mercurio.lms.carregamento.action;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.lms.carregamento.model.CartaoPedagio;
import com.mercurio.lms.carregamento.model.service.CartaoPedagioService;
import com.mercurio.lms.carregamento.model.service.OperadoraCartaoPedagioService;
import com.mercurio.lms.util.PessoaUtils;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.carregamento.manterCartoesPedagioAction"
 */

public class ManterCartoesPedagioAction extends CrudAction {
	
	private OperadoraCartaoPedagioService operadoraCartaoPedagioService;
	
	public OperadoraCartaoPedagioService getOperadoraCartaoPedagioService() {
		return operadoraCartaoPedagioService;
	}
	public void setOperadoraCartaoPedagioService(OperadoraCartaoPedagioService operadoraCartaoPedagioService) {
		this.operadoraCartaoPedagioService = operadoraCartaoPedagioService;
	}
	public void setCartaoPedagio(CartaoPedagioService cartaoPedagioService) {
		this.defaultService = cartaoPedagioService;
	}
	public CartaoPedagioService getCartaoPedagioService() {
		return (CartaoPedagioService)defaultService;
	}

	
    public void removeById(java.lang.Long id) {
    	getCartaoPedagioService().removeById(id);
    }

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	getCartaoPedagioService().removeByIds(ids);
    }

    public CartaoPedagio findById(java.lang.Long id) {
    	return getCartaoPedagioService().findById(id);
    }

    
	/**
	 * Insere, caso o id seja <code>null</code> ou atualiza uma entidade, caso contrário.
	 *
	 * @param bean entidade a ser armazenada.
	 * @return entidade que foi armazenada.
	 */
    public Serializable store(CartaoPedagio bean) {
        return getCartaoPedagioService().store(bean);
    }
    
    
    public List findLookupOperadoraCartaoPedagio(Map criteria) {
    	return getOperadoraCartaoPedagioService().findLookup(removeMaskNrIdentificacao(criteria));
    }


    /**
     * Remove a mascara do nrIdentificacao
     * 
     * @param criteria
     * @return
     */
    private Map removeMaskNrIdentificacao(Map criteria) {
		Map pessoa = (Map)criteria.get("pessoa");
		if (pessoa!=null) {
			String nrIdentificacao = (String)pessoa.get("nrIdentificacao");
			if (nrIdentificacao != null && !nrIdentificacao.equals("") && nrIdentificacao.length() > 1) {
	        	String nrSemMascara = PessoaUtils.clearIdentificacao(nrIdentificacao);
	        	pessoa.put("nrIdentificacao",nrSemMascara);
	        	criteria.put("pessoa", pessoa);
			}
		}
		return criteria;
    }

}
