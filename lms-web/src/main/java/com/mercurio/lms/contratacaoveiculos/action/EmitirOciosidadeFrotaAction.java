package com.mercurio.lms.contratacaoveiculos.action;

import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.BusinessException;
import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.contratacaoveiculos.model.service.MeioTransporteRodoviarioService;
import com.mercurio.lms.contratacaoveiculos.model.service.MeioTransporteService;
import com.mercurio.lms.contratacaoveiculos.report.EmitirOciosidadeFrotaService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.util.JTDateTimeUtils;
import com.mercurio.lms.util.session.SessionUtils;


/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.contratacaoveiculos.emitirOciosidadeFrotaAction"
 */

public class EmitirOciosidadeFrotaAction extends ReportActionSupport {
	
	private FilialService filialService;
	private MeioTransporteService meioTransporteService;
	private EmitirOciosidadeFrotaService emitirOciosidadeFrotaService;
	private MeioTransporteRodoviarioService meioTransporteRodoviarioService;
	
	public List findFilial(Map criteria){
		return getFilialService().findLookupFilial(criteria);
	}
	
	public List findMeioTransporte(Map criteria){
		return getMeioTransporteService().findLookup(criteria);
	}
	
	public List findMeioTransporteRodoviario(TypedFlatMap criteria){
		return meioTransporteRodoviarioService.findLookup(criteria);
	}
	
	
	public TypedFlatMap findFilialSessao(){
		Filial f = SessionUtils.getFilialSessao();
		
		TypedFlatMap retorno = new TypedFlatMap();
		retorno.put("idFilial", f.getIdFilial());
		retorno.put("sgFilial", f.getSgFilial());
		retorno.put("pessoa.nmFantasia", f.getPessoa().getNmFantasia());
		
		return retorno;
	}
	
	@Override
	public java.io.File execute(TypedFlatMap parameters) throws Exception {
		if (parameters.getYearMonthDay("dtPeriodoInicial") != null && parameters.getYearMonthDay("dtPeriodoFinal") != null){
			if (JTDateTimeUtils.validateIntervalDateInMonth(parameters.getYearMonthDay("dtPeriodoInicial"),parameters.getYearMonthDay("dtPeriodoFinal"),1))
				throw new BusinessException("LMS-00056");
		}
		
		return super.execute(parameters);
	}
	
	/**
	 * @return Returns the filialService.
	 */
	public FilialService getFilialService() {
		return filialService;
	}

	/**
	 * @param filialService The filialService to set.
	 */
	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}

	/**
	 * @return Returns the meioTransporteService.
	 */
	public MeioTransporteService getMeioTransporteService() {
		return meioTransporteService;
	}

	/**
	 * @param meioTransporteService The meioTransporteService to set.
	 */
	public void setMeioTransporteService(MeioTransporteService meioTransporteService) {
		this.meioTransporteService = meioTransporteService;
	}

	/**
	 * @return Returns the emitirOciosidadeFrotaService.
	 */
	public EmitirOciosidadeFrotaService getEmitirOciosidadeFrotaService() {
		return emitirOciosidadeFrotaService;
	}

	/**
	 * @param emitirOciosidadeFrotaService The emitirOciosidadeFrotaService to set.
	 */
	public void setEmitirOciosidadeFrotaService(
			EmitirOciosidadeFrotaService emitirOciosidadeFrotaService) {
		this.reportServiceSupport = emitirOciosidadeFrotaService;
	}

	/**
	 * @param meioTransporteRodoviarioService The meioTransporteRodoviarioService to set.
	 */
	public void setMeioTransporteRodoviarioService(
			MeioTransporteRodoviarioService meioTransporteRodoviarioService) {
		this.meioTransporteRodoviarioService = meioTransporteRodoviarioService;
	}
}
