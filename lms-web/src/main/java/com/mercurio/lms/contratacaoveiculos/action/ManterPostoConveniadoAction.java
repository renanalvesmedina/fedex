package com.mercurio.lms.contratacaoveiculos.action;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.contratacaoveiculos.model.PostoConveniado;
import com.mercurio.lms.contratacaoveiculos.model.service.PostoConveniadoService;
import com.mercurio.lms.util.PessoaUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.contratacaoveiculos.manterPostoConveniadoAction"
 */
 
public class ManterPostoConveniadoAction extends CrudAction {
	
	public void setPostoConveniadoService(PostoConveniadoService postoConveniadoService) {
		this.defaultService = postoConveniadoService;
	}
	
	public PostoConveniadoService getPostoConveniadoService() {
		return (PostoConveniadoService) this.defaultService;
	}
	
	
	public Serializable findById(TypedFlatMap idMap) {
		return super.findById(idMap.getLong("idPostoConveniado"));
	}
	
	/**
	 * @param bean entidade a ser armazenada.
	 * @return entidade que foi armazenada.
	 */
    public Serializable store(PostoConveniado bean) {
    	if(bean.getIdPostoConveniado() != null){
    		bean.getPessoa().setIdPessoa(bean.getIdPostoConveniado());
    	}
		return getPostoConveniadoService().store(bean);
	}
	
	/**
	 * @param id indica a entidade que deverá ser removida.
	 */
    public void removeById(TypedFlatMap mapId) {
    	getPostoConveniadoService().removeById(mapId.getLong("idPostoConveniado"));
	}
	
	/**
     * @param ids Lista de ids das Rota
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
		getPostoConveniadoService().removeByIds(ids);
    }
	
	
	@Override
	public List findLookup(Map criteria) {
		Map mpPessoa = (Map)criteria.get("pessoa"); 
		mpPessoa.put("nrIdentificacao", PessoaUtils.validateIdentificacao((String)mpPessoa.get("nrIdentificacao")));
	
		return super.findLookup(criteria);
	}
}
