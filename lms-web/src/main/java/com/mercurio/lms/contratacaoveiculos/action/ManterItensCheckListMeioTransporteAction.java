package com.mercurio.lms.contratacaoveiculos.action;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.contratacaoveiculos.model.ItemCheckList;
import com.mercurio.lms.contratacaoveiculos.model.service.ItemCheckListService;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.contratacaoveiculos.manterItensCheckListMeioTransporteAction"
 */

public class ManterItensCheckListMeioTransporteAction extends CrudAction {
	public void setService(ItemCheckListService serviceService) {
		this.defaultService = serviceService;
	}
    public void removeById(java.lang.Long id) {
        ((ItemCheckListService)defaultService).removeById(id);
    }

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	((ItemCheckListService)defaultService).removeByIds(ids);
    }

    public ItemCheckList findById(java.lang.Long id) {
    	return ((ItemCheckListService)defaultService).findById(id);
    }

	public Serializable store(TypedFlatMap flat) {
		ItemCheckList item = new ItemCheckList();
					  item.setDsItemCheckList(flat.getVarcharI18n("dsItemCheckList"));
					  item.setIdItemCheckList(flat.getLong("idItemCheckList"));
					  item.setTpMeioTransporte(flat.getDomainValue("tpMeioTransporte"));
					  item.setTpSituacao(flat.getDomainValue("tpSituacao"));
		return ((ItemCheckListService)defaultService).store(item);
	}
	
	
	public ResultSetPage findPaginated(Map criteria) {
		return ((ItemCheckListService)defaultService).findPaginated(criteria);
	}
	
	public Integer getRowCount(Map criteria) {
		return ((ItemCheckListService)defaultService).getRowCount(criteria);
	}
    
}
