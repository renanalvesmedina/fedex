package com.mercurio.lms.coleta.action;

import com.mercurio.adsm.framework.BusinessException;
import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.coleta.report.EmitirRelatorioEstatisticoColetaUsuarioService;
import com.mercurio.lms.util.JTDateTimeUtils;
import org.joda.time.YearMonthDay;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.coleta.emitirRelatorioEstatisticoColetaUsuarioAction"
 */
public class EmitirRelatorioEstatisticoColetaUsuarioAction extends ReportActionSupport {
	
	/**
	 * Declaração serviço principal da Action.
	 */
	public void setEmitirRelatorioEstatisticoColetaUsuarioService(EmitirRelatorioEstatisticoColetaUsuarioService 
																			emitirRelatorioEstatisticoColetaUsuarioService) {
		this.reportServiceSupport = emitirRelatorioEstatisticoColetaUsuarioService;
	}
	
	/**
	 * Método que executa o relátorio.
	 */
	@Override
	public java.io.File execute(TypedFlatMap parameters) throws Exception {
		final YearMonthDay dataInicial = parameters.getYearMonthDay("dataInicial");
		final YearMonthDay dataFinal = parameters.getYearMonthDay("dataFinal");

		if (dataFinal == null || dataInicial == null)
			throw new BusinessException("Deve ser informado uma data inicial e final");

		final YearMonthDay dataLimite = dataInicial.plusDays(31);
		if (dataFinal.isAfter(dataLimite))
			throw new BusinessException("LMS-10045");

		return super.execute(parameters);
	}
	
	/**
	 * Pega o usuario logado na sessão com sua respectiva filial. 
	 */
	public TypedFlatMap getDadosSessao() {
		TypedFlatMap map = new TypedFlatMap();	
		map.put("dataAtual", JTDateTimeUtils.getDataAtual());
		map.put("dataPrimeiroDiaMes", JTDateTimeUtils.getFirstDayOfYearMonthDay(JTDateTimeUtils.getDataAtual()));						
		return map;
	}
	
}
