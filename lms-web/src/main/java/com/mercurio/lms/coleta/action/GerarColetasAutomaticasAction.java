package com.mercurio.lms.coleta.action;

import java.util.HashMap;
import java.util.Map;

import org.joda.time.YearMonthDay;

import com.mercurio.adsm.framework.BusinessException;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.coleta.model.service.PedidoColetaService;
import com.mercurio.lms.configuracoes.model.service.ConteudoParametroFilialService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.util.session.SessionUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.coleta.gerarColetasAutomaticasAction"
 */

public class GerarColetasAutomaticasAction extends CrudAction {
    
    private ConteudoParametroFilialService conteudoParametroFilialService;
    private PedidoColetaService pedidoColetaService;
    private FilialService filialService;
    
    
    public ConteudoParametroFilialService getConteudoParametroFilialService() {
        return conteudoParametroFilialService;
    }

    public void setConteudoParametroFilialService(ConteudoParametroFilialService conteudoParametroFilialService) {
        this.conteudoParametroFilialService = conteudoParametroFilialService;
    }    

    public PedidoColetaService getPedidoColetaService() {
        return pedidoColetaService;
    }

    public void setPedidoColetaService(PedidoColetaService pedidoColetaService) {
        this.pedidoColetaService = pedidoColetaService;
    }

    public FilialService getFilialService() {
        return filialService;
    }

    public void setFilialService(FilialService filialService) {
        this.filialService = filialService;
    }

    //Método chamado ao entrar na tela de geração de coletas.
    public Map inicializaTela(){
        Map map = new HashMap();
        Filial filialUsuario = SessionUtils.getFilialSessao();
        YearMonthDay dataProcessoColetaFilial = null;
        
        dataProcessoColetaFilial = (YearMonthDay)getConteudoParametroFilialService().findConteudoByNomeParametro(filialUsuario.getIdFilial(), "DATA_PROCESSO_COLETA", false);
        if (dataProcessoColetaFilial==null){
        	//Parâmetro nao é válido...
        	String[] args = {filialUsuario.getSgFilial()};
        	throw new BusinessException("LMS-02006",args);
        }
        Long ultimoPedidoColeta = pedidoColetaService.findMaiorNroColetaByFilial(filialUsuario);
        map.put("idFilial", filialUsuario.getIdFilial());
        map.put("sgFilial", filialUsuario.getSgFilial());
        map.put("dsFilial", filialUsuario.getPessoa().getNmFantasia());
        map.put("dataProcessoColeta", dataProcessoColetaFilial);
        map.put("ultimoPedidoColeta", ultimoPedidoColeta);
        
        return map;
    }

    //Método que efetivamente grava a data e gera as coletas.
    public Map generateColetas(TypedFlatMap tfm){
        Map mapLog = new TypedFlatMap();
        YearMonthDay dataProcessoColeta = tfm.getYearMonthDay("dataProcessoColeta");
        
        Long idFilial = tfm.getLong("idFilial");        
        Filial filial = getFilialService().findById(idFilial);
        StringBuffer str = getPedidoColetaService().generateColetas(filial, dataProcessoColeta);
        mapLog.put("log", str.toString());
        return mapLog;
    }

}
