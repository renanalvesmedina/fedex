package com.mercurio.lms.coleta.action;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.coleta.report.EmitirJustificacaoColetasNaoRealizadasService;
import com.mercurio.lms.configuracoes.model.Servico;
import com.mercurio.lms.configuracoes.model.service.ServicoService;
import com.mercurio.lms.util.JTDateTimeUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.coleta.emitirJustificacaoColetasNaoRealizadasAction"
 */
public class EmitirJustificacaoColetasNaoRealizadasAction extends ReportActionSupport {

	private ServicoService servicoService;
	
	/**
	 * Declaração serviço principal da Action.
	 */
	public void setEmitirJustificacaoColetasNaoRealizadasService(EmitirJustificacaoColetasNaoRealizadasService 
																				emitirJustificacaoColetasNaoRealizadasService) {
		this.reportServiceSupport = emitirJustificacaoColetasNaoRealizadasService;
	}	
	
	/**
	 * Método q executa o relátorio, mas testa alguns casos antes.
	 */
	@Override
	public java.io.File execute(TypedFlatMap parameters) throws Exception {
		return super.execute(parameters);
	}
	
	/**
	 * Retorna a data atual.
	 * @return
	 */
	public TypedFlatMap getDataAtual() {
		TypedFlatMap map = new TypedFlatMap();
		
		map.put("dataAtual", JTDateTimeUtils.getDataAtual());
		map.put("dataPrimeiroDiaMes", JTDateTimeUtils.getFirstDayOfYearMonthDay(JTDateTimeUtils.getDataAtual()));
						
		return map;
	}
	
	public List findServico(Map criteria) {
		List retorno = new ArrayList();
		List list = servicoService.find(criteria);
		for (Iterator iter = list.iterator(); iter.hasNext();) {
			TypedFlatMap map = new TypedFlatMap();
			Servico servico = (Servico) iter.next();
			map.put("idServico", servico.getIdServico());
			map.put("dsServico", servico.getDsServico());
			retorno.add(map);
		}
		return retorno;
	} 
	
	public void setServicoService(ServicoService servicoService) {
		this.servicoService = servicoService;
	}

}
