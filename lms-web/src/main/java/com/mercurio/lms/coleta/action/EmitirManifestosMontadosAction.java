package com.mercurio.lms.coleta.action;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.coleta.report.EmitirManifestosMontadosService;
import com.mercurio.lms.configuracoes.model.Pessoa;
import com.mercurio.lms.configuracoes.model.service.MoedaService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.municipios.model.service.RotaColetaEntregaService;
import com.mercurio.lms.util.session.SessionUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.coleta.emitirManifestosMontadosAction"
 */

public class EmitirManifestosMontadosAction extends ReportActionSupport {
    
    private FilialService filialService;
    private RotaColetaEntregaService rotaColetaEntregaService;
    private MoedaService moedaService; 
    
    /**
     * find lookup para rota coleta entrega 
     */
    public List findLookupRotaColetaEntrega(Map map) {
        Map tmp = new HashMap();
        
        Map idFilial = new HashMap();
        idFilial.put("idFilial", ((Map) map.get("filial")).get("idFilial"));
        Map filial = new HashMap();
        filial.putAll(idFilial);
        
        tmp.put("nrRota",map.get("nrRota"));
        tmp.put("filial", filial);
        
        
        return getRotaColetaEntregaService().findLookup(tmp);        
    }    
    
    /**
     * Busca a filial do usuario logado.
     * @return Retorna apenas o id da filial, a sigla e o nome
     */
    public Filial getFilialUsuarioLogado(Map map) {
        Filial filial = new Filial();
        filial.setIdFilial(SessionUtils.getFilialSessao().getIdFilial());
        filial.setSgFilial(SessionUtils.getFilialSessao().getSgFilial());
        
        Pessoa pessoa = new Pessoa();
        pessoa.setNmFantasia(SessionUtils.getFilialSessao().getPessoa().getNmFantasia());
        
        filial.setPessoa(pessoa);
        
        return filial;
    }    
    
    /**
     * Método para verificar  se o usuario logado tem acesso a filial selecionada 
     */
    public List findLookupFiliaisPorUsuario(TypedFlatMap map) {
    	String sgFilial = map.getString("sgFilial");
    	String tpAcesso = map.getString("tpAcesso");
        return getFilialService().findLookupBySgFilial(sgFilial, tpAcesso);
    }

    /**
     * Método que busca da sessão a moeda do usuario.
     *  
     */
    public TypedFlatMap findMoedaSessao(Map map) {
    	TypedFlatMap tfm = new TypedFlatMap();
    	tfm.put("idMoeda", SessionUtils.getMoedaSessao().getIdMoeda());
    	tfm.put("dsSimbolo", SessionUtils.getMoedaSessao().getSiglaSimbolo());
        return tfm;
    }

    /**
     * popula a combo de moeda 
     * @param map
     * @return
     */
    public List findComboMoeda(Map map) {
    	return getMoedaService().find(map);
    }
    

    /**
     * Seta a service principal do relatório, ou seja, a service que contem 
     * a montagem da consulta. 
     */
    public void setEmitirManifestosMontadosService(EmitirManifestosMontadosService emitirManifestosMontadosService) {
        this.reportServiceSupport = emitirManifestosMontadosService;
    }

    public FilialService getFilialService() {
        return filialService;
    }

    public void setFilialService(FilialService filialService) {
        this.filialService = filialService;
    }

    public RotaColetaEntregaService getRotaColetaEntregaService() {
        return rotaColetaEntregaService;
    }

    public void setRotaColetaEntregaService(RotaColetaEntregaService rotaColetaEntregaService) {
        this.rotaColetaEntregaService = rotaColetaEntregaService;
    }

	public MoedaService getMoedaService() {
		return moedaService;
	}

	public void setMoedaService(MoedaService moedaService) {
		this.moedaService = moedaService;
	}

}
