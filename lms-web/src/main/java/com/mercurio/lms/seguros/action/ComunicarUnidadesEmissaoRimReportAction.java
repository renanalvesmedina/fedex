package com.mercurio.lms.seguros.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.report.ReportExecutionManager;
import com.mercurio.adsm.framework.util.TypedFlatMap;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após  ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.seguros.comunicarUnidadesEmissaoRimReportAction"
 */

public class ComunicarUnidadesEmissaoRimReportAction {

	ComunicarUnidadesEmissaoRIMAction comunicarUnidadesEmissaoRIMAction;
	ReportExecutionManager reportExecutionManager;
	
	public void setComunicarUnidadesEmissaoRIMAction(
			ComunicarUnidadesEmissaoRIMAction comunicarUnidadesEmissaoRIMAction) {
		this.comunicarUnidadesEmissaoRIMAction = comunicarUnidadesEmissaoRIMAction;
	}

	/**
	 * Gera os objetos a serem carregados na combo.
	 * 
	 * @param criteria
	 * @return
	 */
	public Map getBasicData(TypedFlatMap criteria) {
		
		Map result = new HashMap();
		
		//Tipo carta...
		List filialComunicada = new ArrayList();
		
		Map resultMap = new HashMap();
		resultMap.put("filialComunicadaLabel", "Destino");
		resultMap.put("filialComunicadaValue", "destino");
		filialComunicada.add(resultMap);
		
		resultMap = new HashMap();
		resultMap.put("filialComunicadaLabel", "Origem");
		resultMap.put("filialComunicadaValue", "origem");
		filialComunicada.add(resultMap);
		
		result.put("filialComunicada", filialComunicada);  
        
        return result;
	}

	public String execute(TypedFlatMap parameters) throws Exception {
		String locator = reportExecutionManager.generateReportLocator("lms.seguros.comunicarUnidadesEmissaoRimReportService", parameters);
		// este código foi removido da tela e passado para cá
		this.comunicarUnidadesEmissaoRIMAction.updateDataGeracaoEmissaoRIM(parameters);
		return locator;
	}

	public void setReportExecutionManager(
			ReportExecutionManager reportExecutionManager) {
		this.reportExecutionManager = reportExecutionManager;
	}
}
