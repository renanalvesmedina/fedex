package com.mercurio.lms.expedicao.action;

import java.io.File;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang.StringUtils;

import com.mercurio.adsm.framework.BusinessException;
import com.mercurio.adsm.framework.model.FindDefinition;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.model.masterdetail.MasterDetailAction;
import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.session.SessionContext;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.ConfiguracoesFacade;
import com.mercurio.lms.expedicao.model.Awb;
import com.mercurio.lms.expedicao.model.service.AwbService;
import com.mercurio.lms.expedicao.report.CargaAereaService;
import com.mercurio.lms.expedicao.util.AwbUtils;
import com.mercurio.lms.expedicao.util.ConstantesExpedicao;
import com.mercurio.lms.municipios.model.service.CiaFilialMercurioService;
import com.mercurio.lms.util.CompareUtils;
import com.mercurio.lms.util.IntegerUtils;
import com.mercurio.lms.util.LongUtils;
import com.mercurio.lms.util.session.SessionUtils;
import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;

/**
 * Generated by: ADSM ActionGenerator
 *
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.expedicao.emitirRelacaoCargaAereaAction"
 */

public class EmitirRelacaoCargaAereaAction extends ReportActionSupport {
	private AwbService awbService;
	private CiaFilialMercurioService ciaFilialMercurioService;
	private ConfiguracoesFacade configuracoesFacade;

	public TypedFlatMap findFilialUsuarioLogado(TypedFlatMap tfm){
		removeAWBs();
		TypedFlatMap result = new TypedFlatMap();
		result.put("idFilialUsuarioLogado",SessionUtils.getFilialSessao().getIdFilial());
		return result;
	}

	public List findCiaAerea(TypedFlatMap criteria){
		return ciaFilialMercurioService.findCiaAerea(criteria);
	}

	public List findNroAwb(TypedFlatMap criteria){
		Long nrAwb = criteria.getLong("nrAwb");
		Long idCiaAerea = criteria.getLong("ciaFilialMercurio.idCiaFilialMercurio");
		String tpStatusAwb = criteria.getString("tpStatusAwb");
		Long idFilialOrigem = SessionUtils.getFilialSessao().getIdFilial();		
		
		List list = awbService.findLookupByNrAwbIdCiaAereaIdFilial(nrAwb, idCiaAerea, idFilialOrigem, tpStatusAwb);
		
		if(CollectionUtils.isNotEmpty(list)){
			Map awbMap = (Map)list.get(0);
			awbMap.put("nrAwb", AwbUtils.getNrAwb(awbMap.get("dsSerie").toString(), 
								     Long.valueOf(awbMap.get("nrAwb").toString()), 
								  Integer.valueOf(awbMap.get("dvAwb").toString())));
		}
		
		return list;		
	}

	/**
	 * Remove todas as Awbs da sessão.
	 */
	public void removeAWBs(){
		SessionContext.remove(ConstantesExpedicao.AWB_IN_SESSION);
	}

	/**
	 * Retorna true se tem algum AWB na sessão, caso contrário retorna false;
	 */
	public Boolean temAWBs(){
		List awbs = (List)SessionContext.get(ConstantesExpedicao.AWB_IN_SESSION);
		return Boolean.valueOf(awbs != null && !awbs.isEmpty());
	}

	@Override
	public java.io.File execute(TypedFlatMap params) throws Exception {
		// Regras 2.3
		if (!temAWBs().booleanValue()) {
			throw(new BusinessException("LMS-04133"));
		}
		// Regra 2.4
		Long idCiaAerea = params.getLong("empresa.idEmpresa");
		Long nrRelacaoCarga = null;
		String parametroFilial = null;

		if(CompareUtils.eq(idCiaAerea, LongUtils.getLong((BigDecimal)configuracoesFacade.getValorParametro("ID_GOL")))) {
			parametroFilial = "NR_RELACAO_CARGA_GOL";
		} else if(CompareUtils.eq(idCiaAerea, LongUtils.getLong((BigDecimal)configuracoesFacade.getValorParametro("ID_TAM")))) {
			parametroFilial = "NR_RELACAO_CARGA_TAM";
		} else if(CompareUtils.eq(idCiaAerea, LongUtils.getLong((BigDecimal)configuracoesFacade.getValorParametro("ID_VARIG")))) {
			parametroFilial = "NR_RELACAO_CARGA_VAR";
		}
		if(parametroFilial == null) {
			throw new BusinessException("LMS-04183");
		}
		nrRelacaoCarga = configuracoesFacade.incrementaParametroSequencial(SessionUtils.getFilialSessao().getIdFilial(), parametroFilial, true);					

		// Coloca o numero da relacao de carga na sessao
		SessionContext.set("NR_RELACAO_CARGA_IN_SESSION", nrRelacaoCarga);

		// Regra 2.5
		File reportFile = super.execute(params);

		return reportFile;
	}

	public ResultSetPage findPaginatedAwb(TypedFlatMap criteria){
		ResultSetPage rsp = ResultSetPage.EMPTY_RESULTSET;
		List lista = (List)SessionContext.get(ConstantesExpedicao.AWB_IN_SESSION);
		if(lista != null && !lista.isEmpty()) {
			FindDefinition def = FindDefinition.createFindDefinition(criteria);
			Comparator ordenador = new Comparator() {
				public int compare(Object arg0, Object arg1) {
					return 0;
				}
			};
			rsp = MasterDetailAction.getResultSetPage(lista, def.getCurrentPage(), def.getPageSize(), ordenador);
		}

		return rsp; 
	}

	public Integer getRowCountAwb(TypedFlatMap criteria) {
		List lista = (List)SessionContext.get(ConstantesExpedicao.AWB_IN_SESSION);
		Integer size = IntegerUtils.ZERO;
		if(lista != null)
			size = Integer.valueOf(lista.size());
		return size; 
	}

	/**
	 * Retorna a lista de Awbs da sessão para ser usada na grid.
	 * 
	 * @return Lista de Awbs da sessão.
	 */
	public List getAwbsSessao(){
		return (List)SessionContext.get(ConstantesExpedicao.AWB_IN_SESSION);
	}

	/**
	 * 
	 * @param nrAwb
	 * @param dhEmissao
	 */
	public void salvaAwbSessao(TypedFlatMap awb){	
		List awbs = (List) SessionContext.get(ConstantesExpedicao.AWB_IN_SESSION);
		if(awbs == null) {
			awbs = new ArrayList();
		} else {
			for(Iterator it=awbs.iterator(); it.hasNext();) {
				TypedFlatMap a = (TypedFlatMap)it.next();
				if(awb.getString("idAwb").equals(a.getString("idAwb"))) {
					throw new BusinessException("LMS-04156");
				}
			}
		}
		awb.put("dvNrAwb", awb.getString("sgEmpresa") + " " + AwbUtils.getNrAwbFormated(AwbUtils.splitNrAwb(awb.getString("nrAwb"))));
		String dhEmissao = awb.getString("dhEmissao");
		if(StringUtils.isNotBlank(dhEmissao)){
			Awb awbAux = awbService.findById(awb.getLong("idAwb"));
			awb.put("dhEmissao", awbAux.getDhEmissao());
		}
		awbs.add(awb);
		SessionContext.set(ConstantesExpedicao.AWB_IN_SESSION, awbs);
	}

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
	public void removeByIds(List ids) {
		List awbs = (List)SessionContext.get(ConstantesExpedicao.AWB_IN_SESSION);
		List newAwbs = new ArrayList();
		for(Iterator itawbs=awbs.iterator();itawbs.hasNext();){
			TypedFlatMap awb = (TypedFlatMap) itawbs.next();
			boolean existe=false;
			for(Iterator itids=ids.iterator();itids.hasNext();){
				Long id = (Long) itids.next();
				if ( id.longValue() == awb.getLong("idAwb").longValue()){
					existe=true;
					break;
				}
			}
			if(!existe){
				newAwbs.add(awb);
			}
		}
		if(!newAwbs.isEmpty()){
			SessionContext.set(ConstantesExpedicao.AWB_IN_SESSION,newAwbs);
		} else {
			removeAWBs();
		}
	}

	public TypedFlatMap findById(Long id){
		List awbs = (List)SessionContext.get(ConstantesExpedicao.AWB_IN_SESSION);
		for(Iterator it=awbs.iterator();it.hasNext();){
			TypedFlatMap awb = (TypedFlatMap) it.next();
			if(awb.getLong("idAwb").longValue()==id.longValue()){
				TypedFlatMap r = new TypedFlatMap();
				r.put("awb.idAwb",awb.get("idAwb"));
				r.put("awb.nrAwb",awb.get("nrAwb"));
				r.put("awb.dvAwb",awb.get("dvAwb"));
				r.put("awb.dhEmissao",awb.get("dhEmissao"));
				r.put("awb.dsVooPrevisto",awb.get("dsVooPrevisto"));
				r.put("moeda.sgMoeda",awb.get("sgMoeda"));
				r.put("moeda.dsSimbolo",awb.get("dsSimbolo"));
				r.put("awb.vlFrete",awb.get("vlFrete"));
				return r;
			}
		}
		return null;
	}

	public void validadeAwb(Long nrAwb) {
		this.awbService.validateAwbVooConfirmado(nrAwb);
	}

	public void setAwbService(AwbService awbService) {
		this.awbService = awbService;
	}
	public void setCiaFilialMercurioService(CiaFilialMercurioService ciaFilialMercurioService) {
		this.ciaFilialMercurioService = ciaFilialMercurioService;
	}
	public void setConfiguracoesFacade(ConfiguracoesFacade configuracoesFacade) {
		this.configuracoesFacade = configuracoesFacade;
	}
	public void setService(CargaAereaService service) {
		this.reportServiceSupport = service;
	}
}