package com.mercurio.lms.workflow.action;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.lms.workflow.model.TipoEvento;
import com.mercurio.lms.workflow.model.service.TipoEventoService;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.workflow.manterTiposEventosAction"
 */

public class ManterTiposEventosAction extends CrudAction {

	
	public List findLookup(Map criteria) {
		List list = super.findLookup(criteria);
		
		Map map = null;
		if (list.size() == 1){
			map = new HashMap();
			TipoEvento te = (TipoEvento) list.get(0);
			map.put("idTipoEvento", te.getIdTipoEvento());
			map.put("dsTipoEvento", te.getDsTipoEvento());
			map.put("nrTipoEvento", te.getNrTipoEvento());
			StringBuffer codigoDescricao = new StringBuffer()
				.append(te.getNrTipoEvento()).append(" - ")
				.append(te.getDsTipoEvento());
			map.put("codigoDescricao", codigoDescricao.toString());
			list = new ArrayList(1);
			list.add(map);
		}
		
		return list;
	}
	
	public void setService(TipoEventoService serviceService) {
		this.defaultService = serviceService;
	}
	
    public void removeById(java.lang.Long id) {
        ((TipoEventoService)defaultService).removeById(id);
    }

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	((TipoEventoService)defaultService).removeByIds(ids);
    }

    public TipoEvento findById(java.lang.Long id) {
    	return ((TipoEventoService)defaultService).findById(id);
    }

    public Serializable store(TipoEvento bean) {
    	return ((TipoEventoService)defaultService).store(bean);
    }
    
}
