package com.mercurio.lms.workflow.action;

import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.BusinessException;
import org.apache.commons.lang.StringUtils;
import org.joda.time.YearMonthDay;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.FindDefinition;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.ConfiguracoesFacade;
import com.mercurio.lms.configuracoes.model.service.UsuarioService;
import com.mercurio.lms.workflow.model.service.AcaoService;

/**
 * Generated by: ADSM ActionGenerator
 *
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.workflow.manterAcoesAction"
 */

public class ManterAcoesAction extends CrudAction {
	
	private ConfiguracoesFacade configuracoesFacade;
	
	private UsuarioService usuarioService;
	
	public void setService(AcaoService serviceService) {
		this.defaultService = serviceService;
	}
	
	public ResultSetPage findPaginated(TypedFlatMap criteria) {
		String dsTipoEvento = criteria.getString("dsTipoEvento");	
		YearMonthDay dataInicial = criteria.getYearMonthDay("dhLiberacaoInicial");
		YearMonthDay dataFinal = criteria.getYearMonthDay("dhLiberacaoFinal");

		if(dataFinal.minusDays(60).isAfter(dataInicial)) {
			throw new BusinessException("LMS-39027");
		}

		Long idSolicitante = criteria.getLong("usuario.idUsuario");
		Long idProcesso = criteria.getLong("idProcesso");
		String dsPendencia = criteria.getString("dsPendencia");
		if(dsPendencia != null && !"".equals(dsPendencia) && !dsPendencia.startsWith("%")){
			dsPendencia = "%" + dsPendencia;
		}

		FindDefinition findDef = FindDefinition.createFindDefinition(criteria);
		return getAcaoService().findAcoesUsuarioLogado(
				dsTipoEvento, 
				dataInicial, 
				dataFinal, 
				idSolicitante,
				idProcesso,
				dsPendencia,
				findDef.getCurrentPage(),
				findDef.getPageSize());
	}

	public Integer getRowCount(TypedFlatMap criteria) {
		return 0;
	}
	
    public void removeById(java.lang.Long id) {
        getAcaoService().removeById(id);
    }

	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	getAcaoService().removeByIds(ids);
    }

	public Map findById(java.lang.Long id) {
		Map<String, Object> map = getAcaoService().findMapById(id);
    	//Se foi atribuido um título de tela, colocar ele no pojo de retorno
		if (StringUtils.isNotBlank((String)map.get("nmChaveTitulo"))) {
			String nmChaveTituloI18N = this.getConfiguracoesFacade().getMensagem((String)map.get("nmChaveTitulo"));
			map.remove("nmChaveTitulo");
			map.put("nmChaveTitulo", nmChaveTituloI18N);
    	}
    	

		return map;
    }
    
	/**
	 * @param idAcao: Ação a ser aprovada
	 */
	public String saveAprovarAcao(Map map) {
		Long idAcao = Long.valueOf((String)map.get("idAcao"));
		String obAcao = (String)map.get("obAcao");		
		return getAcaoService().saveAprovarAcao(idAcao, obAcao);

	}

	private AcaoService getAcaoService() {
		return ((AcaoService) defaultService);
	}

	/**
	 * @param idAcao: Ação a ser reprovada
	 */
	public String saveReprovarAcao(Map map) {
		Long idAcao = Long.valueOf((String)map.get("idAcao"));
		String obAcao = (String)map.get("obAcao");		
		return getAcaoService().saveReprovarAcao(idAcao, obAcao);
	}

	/**
	 * @param idAcao: Ação a ser marcada como visualizada
	 */
	public String saveVisualizarAcao(Map map) {
		Long idAcao = Long.valueOf((String)map.get("idAcao"));
		String obAcao = (String)map.get("obAcao");		
		return getAcaoService().saveVisualizarAcao(idAcao, obAcao);	
	}

	public ConfiguracoesFacade getConfiguracoesFacade() {
		return configuracoesFacade;
	}

	public void setConfiguracoesFacade(ConfiguracoesFacade configuracoesFacade) {
		this.configuracoesFacade = configuracoesFacade;
	}
	
	public UsuarioService getUsuarioService() {
		return usuarioService;
	}
	
	public void setUsuarioService(UsuarioService usuarioService) {
		this.usuarioService = usuarioService;
	}
	
	public List findLookupUsuarioFuncionario(TypedFlatMap tfm){
		return usuarioService.findLookupUsuarioFuncionario(tfm.getLong("idUsuario"), tfm.getString("nrMatricula"), null, null, null, null, true);
	}
	
}
