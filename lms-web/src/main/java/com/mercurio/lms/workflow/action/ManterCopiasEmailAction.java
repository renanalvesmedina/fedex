package com.mercurio.lms.workflow.action;


import java.io.Serializable;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.joda.time.YearMonthDay;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.DomainValue;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.model.Usuario;
import com.mercurio.lms.configuracoes.model.param.ConsultarUsuarioLMSParam;
import com.mercurio.lms.configuracoes.model.service.UsuarioLMSService;
import com.mercurio.lms.util.JTDateTimeUtils;
import com.mercurio.lms.workflow.model.EmailEventoUsuario;
import com.mercurio.lms.workflow.model.EventoWorkflow;
import com.mercurio.lms.workflow.model.FilialEmailEventoUsuario;
import com.mercurio.lms.workflow.model.service.EmailEventoUsuarioService;
import com.mercurio.lms.workflow.model.service.EventoWorkflowService;
import com.mercurio.lms.workflow.model.service.FilialEmailEventoUsuarioService;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.workflow.manterCopiasEmailAction"
 */
	
public class ManterCopiasEmailAction extends CrudAction {
	
	private com.mercurio.lms.workflow.model.service.TipoEventoService tipoEventoServ;
	
	private com.mercurio.lms.municipios.model.service.FilialService filialService;
	
	private UsuarioLMSService usuarioLMSService;
	
	private EventoWorkflowService eventoWorkflowService;
	public void setEventoWorkflowService(EventoWorkflowService eventoWorkflowService){
		this.eventoWorkflowService = eventoWorkflowService;
	}
	 
	
	private FilialEmailEventoUsuarioService filialEmaiEventoUsuarioService;
		
	public Serializable findById(Long id) {
		EmailEventoUsuario evento = ((EmailEventoUsuarioService)this.defaultService).findById(id);
		
		TypedFlatMap map = new TypedFlatMap();
		map.put("idEmailEventoUsuario", evento.getIdEmailEventoUsuario());	
		map.put("eventoWorkflow.tipoEvento.dsTipoEvento", evento.getEventoWorkflow().getTipoEvento().getDsTipoEvento());
		map.put("eventoWorkflow.tipoEvento.nrTipoEvento", evento.getEventoWorkflow().getTipoEvento().getNrTipoEvento());
		map.put("eventoWorkflow.idEventoWorkflow", evento.getEventoWorkflow().getIdEventoWorkflow());
		map.put("usuario.nrMatricula",evento.getUsuario().getNrMatricula());
		map.put("usuario.idUsuario", evento.getUsuario().getIdUsuario());
		map.put("usuario.nmUsuario", evento.getUsuario().getNmUsuario());
		map.put("tpSituacao",evento.getTpSituacao().getValue());
		List eventoUsuario = evento.getFilialEmailEventoUsuario();
		List eventoUsuarioList = new ArrayList(eventoUsuario.size());
		for (Iterator iter = eventoUsuario.iterator(); iter.hasNext();) {
			FilialEmailEventoUsuario filialEmail = (FilialEmailEventoUsuario) iter.next();
			TypedFlatMap mapFilho = new TypedFlatMap();
			mapFilho.put("idFilial", filialEmail.getFilial().getIdFilial());
			mapFilho.put("sgFilial", filialEmail.getFilial().getSgFilial());
			eventoUsuarioList.add(mapFilho);
		}
		map.put("filialEmailEventoUsuario", eventoUsuarioList);
		
		return map;
	}

	public Serializable store(TypedFlatMap bean) {
			
		String idUsuario = (String) bean.getString("usuario.idUsuario");
		String idEvento = (String) bean.getString("eventoWorkflow.idEventoWorkflow");		
		DomainValue tpSituacao = (DomainValue) bean.getDomainValue("tpSituacao");
		
		EventoWorkflow eventoWorkflow = new EventoWorkflow();
		EmailEventoUsuario emailEventoUsuario = new EmailEventoUsuario();			
		Usuario usuario = new Usuario();
		
		eventoWorkflow.setIdEventoWorkflow(Long.valueOf(idEvento));
		usuario.setIdUsuario(Long.valueOf(idUsuario));
		
		emailEventoUsuario.setTpSituacao(tpSituacao);
		emailEventoUsuario.setEventoWorkflow(eventoWorkflow);
		emailEventoUsuario.setUsuario(usuario);
		Long idEmailEventoUsuario = bean.getLong("idEmailEventoUsuario");
		emailEventoUsuario.setIdEmailEventoUsuario(idEmailEventoUsuario);
						
		getEmailEventoUsuarioService().removeByFilial(idEmailEventoUsuario);
		
		return this.getEmailEventoUsuarioService().store(emailEventoUsuario, bean);
		
	}
	
	public Integer getRowCount(TypedFlatMap criteria) {
		return getEmailEventoUsuarioService().getRowCount(criteria);
	}

	public void removeById(Long id) {
		((EmailEventoUsuarioService)this.defaultService).removeById(id);
	}
	
	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
	
	public void removeByIds(List ids) {
		((EmailEventoUsuarioService)this.defaultService).removeByIds(ids);
	}
	
	public ResultSetPage findPaginated(TypedFlatMap criteria) {
		
		
		return ((EmailEventoUsuarioService)this.defaultService).findPaginatedEventoUsuario(criteria);
	}

	public EmailEventoUsuarioService getEmailEventoUsuarioService() {
		return (EmailEventoUsuarioService) this.defaultService;
	}

	public void setEmailEventoUsuarioService(EmailEventoUsuarioService emailEventoUsuarioService) {
		this.defaultService = emailEventoUsuarioService;
	}
	
	public List findLookupUsuarioFuncionario(TypedFlatMap tfm){
		ConsultarUsuarioLMSParam cup = new ConsultarUsuarioLMSParam();
		
		cup.setNrMatricula(tfm.getString("nrMatricula"));
		cup.setNmUsuario(tfm.getString("nmUsuario"));
		cup.setTpCategoriaUsuario(tfm.getString("tpCategoriaUsuario"));

        return usuarioLMSService.findLookupSistema(cup);
	}
	
	public List findLookupEventoWorkflow (TypedFlatMap criteria) {
		return this.eventoWorkflowService.findLookupEventoWorkflow(criteria);
	}	
	
	public List findLookupBySgFilial(TypedFlatMap filialServ) {
		return this.filialService.findLookupBySgFilialVigenteEm(filialServ.getString("sgFilial"), JTDateTimeUtils.getDataAtual(),filialServ.getString("tpAcesso"));
	}
	
	/**
     * Busca a data atual
     * @param tfm Critérios de pesquisa
     * @return YearMonthDay Data atual
     */
    public YearMonthDay findDataAtual(TypedFlatMap tfm){
    	return JTDateTimeUtils.getDataAtual();
    }

	public com.mercurio.lms.municipios.model.service.FilialService getFilialService() {
		return filialService;
	}

	public void setFilialService(
			com.mercurio.lms.municipios.model.service.FilialService filialService) {
		this.filialService = filialService;
	}

	public com.mercurio.lms.workflow.model.service.TipoEventoService getTipoEventoServ() {
		return tipoEventoServ;
	}

	public void setTipoEventoServ(
			com.mercurio.lms.workflow.model.service.TipoEventoService tipoEventoServ) {
		this.tipoEventoServ = tipoEventoServ;
	}

	public FilialEmailEventoUsuarioService getFilialEmaiEventoUsuarioService() {
		return filialEmaiEventoUsuarioService;
	}

	public void setFilialEmaiEventoUsuarioService(
			FilialEmailEventoUsuarioService filialEmaiEventoUsuarioService) {
		this.filialEmaiEventoUsuarioService = filialEmaiEventoUsuarioService;
	}

	public void setUsuarioLMSService(UsuarioLMSService usuarioLMSService) {
		this.usuarioLMSService = usuarioLMSService;
	}	
}
