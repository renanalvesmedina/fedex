package com.mercurio.lms.tabelaprecos.action;

import java.io.Serializable;
import java.util.List;

import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang.StringUtils;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.model.hibernate.VarcharI18n;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.tabelaprecos.model.FaixaProgressiva;
import com.mercurio.lms.tabelaprecos.model.ProdutoEspecifico;
import com.mercurio.lms.tabelaprecos.model.RotaPreco;
import com.mercurio.lms.tabelaprecos.model.TabelaPreco;
import com.mercurio.lms.tabelaprecos.model.TabelaPrecoParcela;
import com.mercurio.lms.tabelaprecos.model.TarifaPreco;
import com.mercurio.lms.tabelaprecos.model.UnidadeMedida;
import com.mercurio.lms.tabelaprecos.model.ValorFaixaProgressiva;
import com.mercurio.lms.tabelaprecos.model.service.FaixaProgressivaService;
import com.mercurio.lms.tabelaprecos.model.service.TabelaPrecoParcelaService;
import com.mercurio.lms.tabelaprecos.model.service.TabelaPrecoService;
import com.mercurio.lms.tabelaprecos.model.service.ValorFaixaProgressivaService;
import com.mercurio.lms.util.AliasToTypedFlatMapResultTransformer;
import com.mercurio.lms.util.IntegerUtils;
import com.mercurio.lms.util.JTVigenciaUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.tabelaprecos.precificarParcelasAction"
 * 
 * @author moraes.mauricio@mercurio.com
 */
public class PrecificarParcelasAction extends CrudAction {
	private ValorFaixaProgressivaService valorFaixaProgressivaService;
	private TabelaPrecoService tabelaPrecoService;
	private TabelaPrecoParcelaService tabelaPrecoParcelaService;

	/**
	 * Armazena uma faixa progressiva.
	 * @param faixaProgressivaTela
	 * @return o identificador da faixa progressiva
	 */
	public Serializable store(TypedFlatMap parameters) {
		Long idFaixaProgressiva = parameters.getLong("idFaixaProgressiva");
		FaixaProgressiva faixaProgressiva = new FaixaProgressiva();
		faixaProgressiva.setIdFaixaProgressiva(idFaixaProgressiva);
		faixaProgressiva.setVersao(parameters.getInteger("versao"));

		faixaProgressiva.setCdMinimoProgressivo(parameters.getDomainValue("cdMinimoProgressivo"));
		Long idProdutoEspecifico = parameters.getLong("produtoEspecifico.idProdutoEspecifico");
		if(idProdutoEspecifico != null){
			ProdutoEspecifico produtoEspecifico = new ProdutoEspecifico();
			produtoEspecifico.setIdProdutoEspecifico(idProdutoEspecifico);
			faixaProgressiva.setProdutoEspecifico(produtoEspecifico);
		}
		Long idTabelaPrecoParcela = parameters.getLong("tabelaPrecoParcela.idTabelaPrecoParcela");
		if(idTabelaPrecoParcela != null){
			TabelaPrecoParcela tabelaPrecoParcela = new TabelaPrecoParcela();
			tabelaPrecoParcela.setIdTabelaPrecoParcela(idTabelaPrecoParcela);
			faixaProgressiva.setTabelaPrecoParcela(tabelaPrecoParcela);
		}
		faixaProgressiva.setTpIndicadorCalculo(parameters.getDomainValue("tpIndicadorCalculo"));	
		faixaProgressiva.setTpSituacao(parameters.getDomainValue("tpSituacao"));
		Long idUnidadeMedida = parameters.getLong("unidadeMedida.idUnidadeMedida");
		if(idUnidadeMedida != null){
			UnidadeMedida unidadeMedida = new UnidadeMedida();
			unidadeMedida.setIdUnidadeMedida(idUnidadeMedida);
			faixaProgressiva.setUnidadeMedida(unidadeMedida);
		}
		faixaProgressiva.setVlFaixaProgressiva(parameters.getBigDecimal("vlFaixaProgressiva"));
		/** Store Faixa Progressiva */
		getFaixaProgressivaService().store(faixaProgressiva);
		
		String msgAtualizacaoAutomatica = null;
		if(idTabelaPrecoParcela != null){
			TabelaPrecoParcela tabelaPrecoParcela = tabelaPrecoParcelaService.findById(idTabelaPrecoParcela);
			TabelaPreco tabelaPreco = tabelaPrecoService.findByIdTabelaPreco(tabelaPrecoParcela.getTabelaPreco().getIdTabelaPreco());
			if(CollectionUtils.isNotEmpty(tabelaPrecoService.findParcelasByTabelaPreco(tabelaPreco.getIdTabelaPreco()))
					&& tabelaPrecoService.validaAtualizacaoAutomatica(tabelaPreco)){
				msgAtualizacaoAutomatica = tabelaPrecoService.atualizaTabelaCustos(tabelaPreco.getTpServico().getValue());
			}
		}
		

		TypedFlatMap toReturn = new TypedFlatMap();
		toReturn.put("idFaixaProgressiva", faixaProgressiva.getIdFaixaProgressiva());
		toReturn.put("versao", faixaProgressiva.getVersao());
		toReturn.put("msgAtualizacaoAutomatica", msgAtualizacaoAutomatica);
		return toReturn;
	}

	/**
	 * Busca um mestre pelo seu id e armazena-o na sessão do usuário
	 * @param id
	 * @return um FaixaProgressiva, objeto mestre
	 */
	public Object findById(java.lang.Long id) {
		return getFaixaProgressivaService().findById(id);
	}

	/**
	 * Remove uma listra de registros mestres
	 * @param ids
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
	public void removeByIds(List ids) {
		getFaixaProgressivaService().removeByIds(ids);
	}

	/**
	 * Remove um registro mestre
	 * @param id
	 */
	public void removeById(Long id) {
		getFaixaProgressivaService().removeById(id);
	}

	public ResultSetPage findFaixaProgressivaPaginated(TypedFlatMap criteria) {
		return getFaixaProgressivaService().findPaginated(criteria);
	}

	/***************************
	 * Valor Faixa Progressiva 
	 ***************************/
	public Serializable storeValorFaixaProgressiva(TypedFlatMap parameters) {
		ValorFaixaProgressiva valorFaixaProgressiva = new ValorFaixaProgressiva();
		converteToBean(valorFaixaProgressiva, parameters);

		/** STORE */
		parameters.put("idValorFaixaProgressiva", valorFaixaProgressivaService.store(valorFaixaProgressiva));
		
		FaixaProgressiva faixaProgressiva = getFaixaProgressivaService().findById(valorFaixaProgressiva.getFaixaProgressiva().getIdFaixaProgressiva());
		
		Long idTabelaPrecoParcela = faixaProgressiva.getTabelaPrecoParcela().getIdTabelaPrecoParcela();
		
		String msgAtualizacaoAutomatica = null;
		if(idTabelaPrecoParcela != null){
			TabelaPrecoParcela tabelaPrecoParcela = tabelaPrecoParcelaService.findById(idTabelaPrecoParcela);
			TabelaPreco tabelaPreco = tabelaPrecoService.findByIdTabelaPreco(tabelaPrecoParcela.getTabelaPreco().getIdTabelaPreco());
			if(CollectionUtils.isNotEmpty(tabelaPrecoService.findParcelasByTabelaPreco(tabelaPreco.getIdTabelaPreco()))
					&& tabelaPrecoService.validaAtualizacaoAutomatica(tabelaPreco)){
				msgAtualizacaoAutomatica = tabelaPrecoService.atualizaTabelaCustos(tabelaPreco.getTpServico().getValue());
			}
		}
		
		if(parameters.getInteger("versao") != null) {
			parameters.put("versao", IntegerUtils.incrementValue(parameters.getInteger("versao")));
		} else parameters.put("versao", IntegerUtils.ZERO);

		/** Controle de vigencias na tela */
		if (parameters.getYearMonthDay("dtVigenciaPromocaoInicial") != null) {
			parameters.put("acaoVigenciaAtual",JTVigenciaUtils.getIntegerAcaoVigencia(parameters.getYearMonthDay("dtVigenciaPromocaoInicial"),parameters.getYearMonthDay("dtVigenciaPromocaoFinal")));
		} else {
			parameters.put("acaoVigenciaAtual", IntegerUtils.ZERO);
		}
		
		parameters.put("msgAtualizacaoAutomatica", msgAtualizacaoAutomatica);
		
		return parameters;
	}

	private void converteToBean(ValorFaixaProgressiva valorFaixaProgressiva, TypedFlatMap parameters) {
		valorFaixaProgressiva.setBlPromocional(parameters.getBoolean("blPromocional"));
		valorFaixaProgressiva.setDtVigenciaPromocaoFinal(parameters.getYearMonthDay("dtVigenciaPromocaoFinal"));
		valorFaixaProgressiva.setDtVigenciaPromocaoInicial(parameters.getYearMonthDay("dtVigenciaPromocaoInicial"));
		valorFaixaProgressiva.setNrFatorMultiplicacao(parameters.getBigDecimal("nrFatorMultiplicacao"));
		valorFaixaProgressiva.setPcDesconto(parameters.getBigDecimal("pcDesconto"));
		valorFaixaProgressiva.setPcTaxa(parameters.getBigDecimal("pcTaxa"));
		valorFaixaProgressiva.setVlTaxaFixa(parameters.getBigDecimal("vlTaxaFixa"));
		valorFaixaProgressiva.setVlKmExtra(parameters.getBigDecimal("vlKmExtra"));

		Long idTarifaPreco = parameters.getLong("tarifaPreco.idTarifaPreco");
		if(idTarifaPreco != null) {
			TarifaPreco tarifa = new TarifaPreco();
			tarifa.setIdTarifaPreco(idTarifaPreco);
			tarifa.setCdTarifaPreco("tarifaPreco.cdTarifaPreco");
			valorFaixaProgressiva.setTarifaPreco(tarifa);
		}
		Long idRotaPreco = parameters.getLong("rotaPreco.idRotaPreco");
		if(idRotaPreco != null){
			RotaPreco rotaPreco = new RotaPreco();
			rotaPreco.setIdRotaPreco(idRotaPreco);
			valorFaixaProgressiva.setRotaPreco(rotaPreco);
		}
		valorFaixaProgressiva.setVlAcrescimo(parameters.getBigDecimal("vlAcrescimo"));
		valorFaixaProgressiva.setVlFixo(parameters.getBigDecimal("vlFixo"));
		valorFaixaProgressiva.setIdValorFaixaProgressiva(parameters.getLong("idValorFaixaProgressiva"));
		valorFaixaProgressiva.setVersao(IntegerUtils.defaultInteger(parameters.getInteger("versao")));

		FaixaProgressiva faixaProgressiva = new FaixaProgressiva();
		faixaProgressiva.setIdFaixaProgressiva(parameters.getLong("idFaixaProgressiva"));
		faixaProgressiva.setVersao(parameters.getInteger("faixaProgressiva.versao"));
		valorFaixaProgressiva.setFaixaProgressiva(faixaProgressiva);
	}

	public ResultSetPage findPaginatedValorFaixaProgressiva(TypedFlatMap criteria) {
		ResultSetPage rsp = valorFaixaProgressivaService.findPaginatedCustom(criteria);
		List<TypedFlatMap> result = AliasToTypedFlatMapResultTransformer.getInstance().transformListResult(rsp.getList());
		for (int i = 0; i < result.size(); i++) {
			TypedFlatMap valorFaixaProgressiva = result.get(i);
			valorFaixaProgressiva.put("rotaPreco.origemString", getRotaPrecoString(valorFaixaProgressiva, "Origem"));
			valorFaixaProgressiva.put("rotaPreco.destinoString", getRotaPrecoString(valorFaixaProgressiva, "Destino"));
		} 
		rsp.setList(result);
		return rsp;
	}

	private String getRotaPrecoString(TypedFlatMap valorFaixaProgressiva, String from) {
    	StringBuilder rotaPreco = new StringBuilder();
    	setPropertyValue(valorFaixaProgressiva.getVarcharI18n("zonaByIdZona"+from+".dsZona"), rotaPreco);
		setPropertyValue(valorFaixaProgressiva.getVarcharI18n("paisByIdPais"+from+".nmPais"), rotaPreco);
		setPropertyValue(valorFaixaProgressiva.getString("unidadeFederativaByIdUf"+from+".sgUnidadeFederativa"), rotaPreco);
    	setPropertyValue(valorFaixaProgressiva.getString("filialByIdFilial"+from+".sgFilial"), rotaPreco);
    	setPropertyValue(valorFaixaProgressiva.getString("municipioByIdMunicipio"+from+".nmMunicipio"), rotaPreco);
    	setPropertyValue(valorFaixaProgressiva.getString("aeroportoByIdAeroporto"+from+".sgAeroporto"), rotaPreco);
    	setPropertyValue(valorFaixaProgressiva.getVarcharI18n("tipoLocalizacaoMunicipioByIdTipoLocalizacao"+from+".dsTipoLocalizacaoMunicipio"), rotaPreco);

    	if(rotaPreco.length() > 0) {
    		rotaPreco.deleteCharAt(rotaPreco.lastIndexOf("-"));
    	}
    	return rotaPreco.toString();
	}
	private void setPropertyValue(String value, StringBuilder rotaPreco){
		if(StringUtils.isNotBlank(value)) {
			rotaPreco.append(value).append("-");
    	}
	}
	private void setPropertyValue(VarcharI18n value, StringBuilder rotaPreco){
		if(value != null) {
			setPropertyValue(value.getValue(), rotaPreco);
    	}
	}

	public Integer getRowCountValorFaixaProgressiva(TypedFlatMap parameters){
		return valorFaixaProgressivaService.getRowCountCustom(parameters);
	}

	public TypedFlatMap findByIdValorFaixaProgressiva(Long id) {
		TypedFlatMap valorFaixaProgressiva = valorFaixaProgressivaService.findByIdCustom(id);
		valorFaixaProgressiva.put("rotaPreco.origemString", getRotaPrecoString(valorFaixaProgressiva, "Origem"));
		valorFaixaProgressiva.put("rotaPreco.destinoString", getRotaPrecoString(valorFaixaProgressiva, "Destino"));

		/** Controle de vigencias na tela */
		if("C".equals(valorFaixaProgressiva.getDomainValue("tpTipoTabelaPreco.value").getValue())){
			valorFaixaProgressiva.put("acaoVigenciaAtual",JTVigenciaUtils.getIntegerAcaoVigencia(valorFaixaProgressiva.getYearMonthDay("dtVigenciaPromocaoInicial"),valorFaixaProgressiva.getYearMonthDay("dtVigenciaPromocaoFinal")));
		} else {
			valorFaixaProgressiva.put("acaoVigenciaAtual",Integer.valueOf(0));
		}
		return valorFaixaProgressiva;
	}

	public void removeByIdValorFaixaProgressiva(Long idValorFaixaProgressiva) {
    	valorFaixaProgressivaService.removeById(idValorFaixaProgressiva);
	}

	/***
	 * 
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
	public void removeByIdsValorFaixaProgressiva(List ids) {
    	valorFaixaProgressivaService.removeByIds(ids);
	}

	public void setFaixaProgressivaService(FaixaProgressivaService faixaProgressivaService) {
		defaultService = faixaProgressivaService;
	}
	
	public FaixaProgressivaService getFaixaProgressivaService() {
		return (FaixaProgressivaService)defaultService;
	}
	public void setValorFaixaProgressivaService(ValorFaixaProgressivaService valorFaixaProgressivaService) {
		this.valorFaixaProgressivaService = valorFaixaProgressivaService;
	}
	public void setTabelaPrecoService(TabelaPrecoService tabelaPrecoService) {
		this.tabelaPrecoService = tabelaPrecoService;
	}
	public void setTabelaPrecoParcelaService(TabelaPrecoParcelaService tabelaPrecoParcelaService) {
		this.tabelaPrecoParcelaService = tabelaPrecoParcelaService;
	}
}
