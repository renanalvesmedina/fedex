package com.mercurio.lms.municipios.action;

import java.util.Map;

import org.joda.time.YearMonthDay;

import com.mercurio.adsm.batch.annotations.Assynchronous;
import com.mercurio.adsm.core.util.ReflectionUtils;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.municipios.model.service.McdService;
import com.mercurio.lms.municipios.model.service.PpeService;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.municipios.gerarMCDAction"
 */
@Assynchronous(name = "GerarMCDAction", description = "Geracao dos mapas de codigo de distancia (MCD)" )
public class GerarMCDAction extends CrudAction {
	
	private PpeService ppeService;
	
	public void setService(McdService mcdService) {
		this.defaultService = mcdService;
	}

	/**
	 * Executa a geracao do MCD
	 * @param parameters
	 */
	public void execute(Map parameters){
		Boolean confirmado = parameters.get("confirmado") != null ? (Boolean) ReflectionUtils.toObject((String) parameters.get("confirmado"), Boolean.class) : null;		
		YearMonthDay dtVigencia = (YearMonthDay)ReflectionUtils.toObject((String)parameters.get("dtVigenciaInicial"),YearMonthDay.class);
		
		((McdService)this.defaultService).execute(dtVigencia, confirmado);		
	}
	
	/**
	 * Rotina chamada pelo Quartz para execução de tarefas agendadas
	 * @param dtVigencia
	 */
	public void executeJobMcd(TypedFlatMap criteria) {

	}

	/**
	 * @return Returns the ppeService.
	 */
	public PpeService getPpeService() {
		return ppeService;
	}

	/**
	 * @param ppeService The ppeService to set.
	 */
	public void setPpeService(PpeService ppeService) {
		this.ppeService = ppeService;
	}
	

}
