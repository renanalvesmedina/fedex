package com.mercurio.lms.municipios.action;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.ConfiguracoesFacade;
import com.mercurio.lms.configuracoes.model.MoedaPais;
import com.mercurio.lms.configuracoes.model.service.MoedaPaisService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.Pais;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.municipios.model.service.MunicipioService;
import com.mercurio.lms.municipios.model.service.RotaColetaEntregaService;
import com.mercurio.lms.municipios.report.EmitirPostosPassagemRotaColetaEntregaService;
import com.mercurio.lms.util.session.SessionUtils;


/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.municipios.emitirPostosPassagemRotaColetaEntregaAction"
 */

public class EmitirPostosPassagemRotaColetaEntregaAction extends ReportActionSupport {
	
	private FilialService filialService;
	private RotaColetaEntregaService rotaColetaEntregaService;
	private MunicipioService municipioService;
	private ConfiguracoesFacade configuracoesFacade;
	private MoedaPaisService moedaPaisService;
	private EmitirPostosPassagemRotaColetaEntregaService emitirPostosPassagemRotaColetaEntregaService;
	
	
	public EmitirPostosPassagemRotaColetaEntregaService getEmitirPostosPassagemRotaColetaEntregaService() {
		return emitirPostosPassagemRotaColetaEntregaService;
	}

	public void setEmitirPostosPassagemRotaColetaEntregaService(EmitirPostosPassagemRotaColetaEntregaService emitirPostosPassagemRotaColetaEntregaService) {
		this.reportServiceSupport = emitirPostosPassagemRotaColetaEntregaService;
	}
	
	
	public void setMoedaPaisService(MoedaPaisService moedaPaisService) {
		this.moedaPaisService = moedaPaisService;
	}

	public void setConfiguracoesFacade(ConfiguracoesFacade configuracoesFacade) {
		this.configuracoesFacade = configuracoesFacade;
	}

	public void setMunicipioService(MunicipioService municipioService) {
		this.municipioService = municipioService;
	}

	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}
	
	public List findLookupFilial(Map criteria) {
		return filialService.findLookupFilial(criteria);
	}
	
	public TypedFlatMap findFilialUsuarioLogado(){
		TypedFlatMap typedFlatMap = new TypedFlatMap();
		Filial filial = SessionUtils.getFilialSessao();
		
		typedFlatMap.put("filial.sgFilial", filial.getSgFilial());
		typedFlatMap.put("filial.pessoa.nmFantasia", filial.getPessoa().getNmFantasia());
		typedFlatMap.put("filial.idFilial", filial.getIdFilial());
		
		return typedFlatMap;
	}
	
	 public List findLookupRotaEntrega(Map criteria){
		 return rotaColetaEntregaService.findLookup(criteria);
	 }
	 
	 public void setRotaColetaEntregaService(
			RotaColetaEntregaService rotaColetaEntregaService) {
		this.rotaColetaEntregaService = rotaColetaEntregaService;
	}

	public List findLookupMunicipio(TypedFlatMap criteria){
		 return municipioService.findLookup(criteria);
		 
	 }
	 
	 public List findMoedaPais(Map criteria){
			Pais p = SessionUtils.getPaisSessao();
		return configuracoesFacade.getMoedasPais(p.getIdPais(),Boolean.TRUE);
	}
	 
	 public Map findMoedaUsuario() {		
			Pais p = SessionUtils.getPaisSessao();
			MoedaPais mp = moedaPaisService.findMoedaPaisMaisUtilizada(p.getIdPais());	
			Map m = new HashMap();
			m.put("idMoedaPais",mp.getIdMoedaPais());
			m.put("idMoeda",mp.getMoeda().getIdMoeda());
			m.put("dsSimbolo", mp.getMoeda().getDsSimbolo());
			m.put("siglaSimbolo", mp.getMoeda().getSiglaSimbolo());
			return m;
	} 

}
