package com.mercurio.lms.municipios.action;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.joda.time.YearMonthDay;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.model.Pessoa;
import com.mercurio.lms.configuracoes.model.Servico;
import com.mercurio.lms.configuracoes.model.service.PessoaService;
import com.mercurio.lms.configuracoes.model.service.ServicoService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.FluxoFilial;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.municipios.model.service.FluxoFilialService;
import com.mercurio.lms.util.JTDateTimeUtils;
import com.mercurio.lms.util.JTVigenciaUtils;
import com.mercurio.lms.util.session.SessionUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.municipios.manterFluxoCargaFiliaisAction"
 */
public class ManterFluxoCargaFiliaisAction extends CrudAction {
	private FilialService filialService;
	private ServicoService servicoService;
	private PessoaService pessoaService;

	public Serializable store(TypedFlatMap parameters) {
		FluxoFilial fluxoFilial = new FluxoFilial();
		Long idFluxoFilial = parameters.getLong("idFluxoFilial");
		boolean blClonar = parameters.getBoolean("blClonar");
		
		fluxoFilial.setDtVigenciaInicial(parameters.getYearMonthDay("dtVigenciaInicial"));
		fluxoFilial.setDtVigenciaFinal(parameters.getYearMonthDay("dtVigenciaFinal"));
		
		fluxoFilial.setIdFluxoFilial(idFluxoFilial);
		fluxoFilial.setBlClone(blClonar);

		fluxoFilial.setDsFluxoFilial(parameters.getString("dsFluxoFilial"));
		fluxoFilial.setNrPrazoTotal(parameters.getInteger("nrPrazoTotal"));
		
		fluxoFilial.setBlPorto(parameters.getBoolean("blPorto"));

		Long idServico = parameters.getLong("servico.idServico");
		if (idServico != null) {
			Servico servico = new Servico();
			servico.setIdServico(idServico);
			fluxoFilial.setServico(servico);
		}

		Long idFilialOrigem = parameters.getLong("filialByIdFilialOrigem.idFilial");
		
		if(idFilialOrigem != null) {
			Filial filialOrigem = new Filial();
			filialOrigem.setIdFilial(idFilialOrigem);
			fluxoFilial.setFilialByIdFilialOrigem(filialOrigem);
		}

		Long idFilialDestino = parameters.getLong("filialByIdFilialDestino.idFilial");
		if(idFilialDestino != null) {
			Filial filialDestino = new Filial();
			filialDestino.setIdFilial(idFilialDestino);
			fluxoFilial.setFilialByIdFilialDestino(filialDestino);
		}

		Long idFilialReembarcadora = parameters.getLong("filialByIdFilialReembarcadora.idFilial");
		if(idFilialReembarcadora != null) {
			Filial filialReembarcadora = new Filial();
			filialReembarcadora.setIdFilial(idFilialReembarcadora);
			fluxoFilial.setFilialByIdFilialReembarcadora(filialReembarcadora);
		}

		Long idFilialParceira = parameters.getLong("filialByIdFilialParceira.idFilial");
		if(idFilialParceira != null) {
			Filial filialParceira = new Filial();
			filialParceira.setIdFilial(idFilialParceira);
			fluxoFilial.setFilialByIdFilialParceira(filialParceira);
		}

		fluxoFilial.setBlDomingo(parameters.getBoolean("blDomingo"));
		fluxoFilial.setBlSegunda(parameters.getBoolean("blSegunda"));
		fluxoFilial.setBlTerca(parameters.getBoolean("blTerca"));
		fluxoFilial.setBlQuarta(parameters.getBoolean("blQuarta"));
		fluxoFilial.setBlQuinta(parameters.getBoolean("blQuinta"));
		fluxoFilial.setBlSexta(parameters.getBoolean("blSexta"));
		fluxoFilial.setBlSabado(parameters.getBoolean("blSabado"));

		fluxoFilial.setNrPrazoView(parameters.getInteger("nrPrazoView"));
		fluxoFilial.setNrDistancia(parameters.getInteger("nrDistancia"));
		fluxoFilial.setNrGrauDificuldade(parameters.getInteger("nrGrauDificuldade"));
		
		fluxoFilial.setBlFluxoSubcontratacao(parameters.getBoolean("blFluxoSubcontratacao"));
		
		if (Boolean.TRUE.equals(fluxoFilial.getBlFluxoSubcontratacao())){
			Long idPessoa = parameters.getLong("empresaSubcontratada.idPessoa");
			if (idPessoa != null){
				fluxoFilial.setEmpresaSubcontratada(pessoaService.findById(idPessoa));
			}
		}else{
			fluxoFilial.setEmpresaSubcontratada(null);			
		}
		
		java.io.Serializable fluxo = getFluxoFilialService().store(fluxoFilial);

		if (fluxo instanceof Long) {
			idFluxoFilial = (Long )fluxo;
		} else {
			idFluxoFilial = fluxoFilial.getIdFluxoFilial();
		}

		TypedFlatMap retorno = new TypedFlatMap();
		retorno.put("idFluxoFilial", idFluxoFilial);
		retorno.put("acaoVigenciaAtual", JTVigenciaUtils.getIntegerAcaoVigencia(fluxoFilial));
		retorno.put("dsFluxoFilial", fluxoFilial.getDsFluxoFilial());
		retorno.put("nrPrazoTotal", fluxoFilial.getNrPrazoTotal());

		return retorno;
	}

	public FluxoFilial findFluxoReembarque(TypedFlatMap criteria) {
		return getFluxoFilialService().findFluxoReembarqueToMap(criteria);
	}

	public void removeById(java.lang.Long id) {
		getFluxoFilialService().removeById(id);
	}

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
	public void removeByIds(List ids) {
		getFluxoFilialService().removeByIds(ids);
	}

	public Map findById(Long id) {
		return getFluxoFilialService().findByIdDetalhamento(id);
	}

	public Map findDadosUltimoFluxo(TypedFlatMap criteria) {
		FluxoFilial fluxoFilial = getFluxoFilialService().findUltimoFluxoFilial(
				criteria.getLong("filialByIdFilialOrigem.idFilial"),
				criteria.getLong("filialByIdFilialDestino.idFilial"),
				criteria.getLong("servico.idServico")
		);
		TypedFlatMap result = new TypedFlatMap();
		if(fluxoFilial != null) {
			result.put("nrDistancia", fluxoFilial.getNrDistancia());
			result.put("nrPrazoView", fluxoFilial.getNrPrazoView());
			result.put("nrGrauDificuldade", fluxoFilial.getNrGrauDificuldade());
		}		
		
		return result;
		}
	
	public Map findDadosServico(TypedFlatMap criteria) {
		
		TypedFlatMap result = new TypedFlatMap();
		Servico servico = getServicoService().findById(criteria.getLong("servico.idServico"));
		if(servico!=null){
			if ("A".equals(servico.getTpSituacao().getValue())
					&& "R".equals(servico.getTpModal().getValue())
					&& "N".equals(servico.getTpAbrangencia().getValue())) {
				
				result.put("stsBlPorto", "S");
			}else{
				result.put("stsBlPorto", "N");
			}
			
			result.put("tpSituacao", servico.getTpSituacao().getValue());
			result.put("tpModal", servico.getTpModal().getValue());
			result.put("tpAbrangencia", servico.getTpAbrangencia().getValue());
		}
		return result;
	}
	
	/**
	 * Pega os dados da sessão. 
	 */
	public TypedFlatMap getDadosSessao() {
		TypedFlatMap map = new TypedFlatMap();
		map.put("dataHoraAtual", JTDateTimeUtils.getDataHoraAtual());
		map.put("dataAtual", JTDateTimeUtils.getDataAtual().plusDays(1));
		return map;
	}

	public List findLookupFilial(TypedFlatMap parameters) {
		return filialService.findLookupBySgFilial(parameters.getString("sgFilial"), parameters.getString("tpAcesso"));
	}

	public List findLookupFilialParceira(TypedFlatMap parameters) {
		return  filialService.findLookupBySgFilial(parameters.getString("sgFilial"), parameters.getString("tpAcesso"), "P");
			}
	
	public List findLookupFilialParceiraVigenteEm(TypedFlatMap parameters) {
		YearMonthDay dataAtual = JTDateTimeUtils.getDataAtual();		
		return filialService.findLookupBySgFilialVigenteEm(parameters.getString("sgFilial"), dataAtual, parameters.getString("tpAcesso"), "P");
		}

	private final FluxoFilialService getFluxoFilialService() {
		return (FluxoFilialService)defaultService;
	}
	public void setFluxoFilialService(FluxoFilialService fluxoFilialService) {
		this.defaultService = fluxoFilialService;
	}

	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}

	public ServicoService getServicoService() {
		return this.servicoService;
	}

	public void setServicoService(ServicoService servicoService) {
		this.servicoService = servicoService;
	}

	public void setPessoaService(PessoaService pessoaService) {
		this.pessoaService = pessoaService;
	}
}
