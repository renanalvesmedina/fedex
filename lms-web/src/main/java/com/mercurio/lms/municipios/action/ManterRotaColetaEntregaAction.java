package com.mercurio.lms.municipios.action;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.FilterResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.RotaColetaEntrega;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.municipios.model.service.HistoricoFilialService;
import com.mercurio.lms.municipios.model.service.RotaColetaEntregaService;
import com.mercurio.lms.util.session.SessionUtils;
import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.municipios.manterRotaColetaEntregaAction"
 */

public class ManterRotaColetaEntregaAction extends CrudAction {
	
	private FilialService filialService;
	private HistoricoFilialService historicoFilialService;
	
	public List findFilialLookup(Map criteria){
		return this.getFilialService().findLookup(criteria);
	}

	public void setService(RotaColetaEntregaService rotaColetaEntregaService) {
		this.defaultService = rotaColetaEntregaService; 
	}
	
	public Serializable store(RotaColetaEntrega bean) {
		return ((RotaColetaEntregaService) this.defaultService).store(bean); 
	} 
	
	public Map storeMap(TypedFlatMap map) {
		return ((RotaColetaEntregaService) this.defaultService).storeMap(map); 
	}
	
	public RotaColetaEntrega findById(Long id) { 
		return ((RotaColetaEntregaService) this.defaultService).findById(id); 
	}

	public Map findByIdDetalhamento(Long id){
		return ((RotaColetaEntregaService) this.defaultService).findByIdDetalhamento(id); 
	}
	
	public Integer getRowCountCustom(TypedFlatMap criteria) {
		return ((RotaColetaEntregaService) this.defaultService).getRowCount(criteria);
	}
	
	public ResultSetPage findPaginated(Map criteria) {
		ResultSetPage rsp = ((RotaColetaEntregaService) this.defaultService).findPaginated(criteria);
		
		FilterResultSetPage frsp = new FilterResultSetPage(rsp) {

			public Map filterItem(Object item) {
				RotaColetaEntrega rotaColetaEntrega = (RotaColetaEntrega) item;
				TypedFlatMap row = new TypedFlatMap();
				
				row.put("idRotaColetaEntrega", rotaColetaEntrega.getIdRotaColetaEntrega()); 				
				row.put("dsRota", rotaColetaEntrega.getDsRota());
				row.put("nrKm", rotaColetaEntrega.getNrKm());
				row.put("numeroDescricaoRota", rotaColetaEntrega.getNumeroDescricaoRota());
				row.put("nrRota", rotaColetaEntrega.getNrRota());
				row.put("dtVigenciaInicial", rotaColetaEntrega.getDtVigenciaInicial());
				row.put("dtVigenciaFinal", rotaColetaEntrega.getDtVigenciaFinal());
				
				Filial filial = rotaColetaEntrega.getFilial();
				row.put("filial.idFilial", filial.getIdFilial()); 
				row.put("filial.sgFilial", filial.getSgFilial());
				row.put("filial.pessoa.nmFantasia", filial.getPessoa().getNmFantasia());				
								
				return row;
			}
			
		};
		
		return (ResultSetPage)frsp.doFilter();
	}
	
	public void removeById(Long id) { 
		((RotaColetaEntregaService) this.defaultService).removeById(id); 
	}
	
	public TypedFlatMap findFilialUsuarioLogado(){
		Filial f = SessionUtils.getFilialSessao();
		TypedFlatMap retorno = new TypedFlatMap();
		retorno.put("idFilial", f.getIdFilial());
		retorno.put("sgFilial", f.getSgFilial());
		retorno.put("pessoa.nmFantasia", f.getPessoa().getNmFantasia());
		return retorno;
	}
	
	public TypedFlatMap isFilialMatriz(Long idFilial){
		Filial filialUsuario = filialService.findFilialPadraoByUsuarioEmpresa(SessionUtils.getUsuarioLogado(), SessionUtils.getEmpresaSessao());
		boolean isFilialMatriz = getHistoricoFilialService().validateFilialUsuarioMatriz(filialUsuario.getIdFilial());
		TypedFlatMap retorno = new TypedFlatMap();
		retorno.put("isFilialMatriz", isFilialMatriz);
		return retorno;
	}
	
	/**
	 * Apaga várias entidades através do Id.
	 *
	 * @param ids lista com as entidades que deverão ser removida.
	 *
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
	public void removeByIds(List ids) {
		((RotaColetaEntregaService) this.defaultService).removeByIds(ids); 
	}

	/**
	 * @return Returns the filialService.
	 */
	public FilialService getFilialService() {
		return filialService;
	}

	/**
	 * @param filialService The filialService to set.
	 */
	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}

	public HistoricoFilialService getHistoricoFilialService() {
		return historicoFilialService;
	}

	public void setHistoricoFilialService(
			HistoricoFilialService historicoFilialService) {
		this.historicoFilialService = historicoFilialService;
	}
	
}
