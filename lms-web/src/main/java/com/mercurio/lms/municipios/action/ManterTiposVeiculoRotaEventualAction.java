package com.mercurio.lms.municipios.action;

import java.io.Serializable;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.core.util.ReflectionUtils;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.model.service.MoedaPaisService;
import com.mercurio.lms.contratacaoveiculos.model.TipoMeioTransporte;
import com.mercurio.lms.contratacaoveiculos.model.service.TipoMeioTransporteService;
import com.mercurio.lms.municipios.model.TipoMeioTranspRotaEvent;
import com.mercurio.lms.municipios.model.service.RotaIdaVoltaService;
import com.mercurio.lms.municipios.model.service.RotaService;
import com.mercurio.lms.municipios.model.service.TipoMeioTranspRotaEventService;
import com.mercurio.lms.util.JTVigenciaUtils;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;


/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.municipios.manterTiposVeiculoRotaEventualAction"
 */

public class ManterTiposVeiculoRotaEventualAction extends CrudAction {
	public void setTipoMeioTranspRotaEventService(TipoMeioTranspRotaEventService tipoMeioTranspRotaEventService) {
		this.defaultService = tipoMeioTranspRotaEventService;
	}
	
	public TipoMeioTranspRotaEventService getTipoMeioTranspRotaEventService() {
		return (TipoMeioTranspRotaEventService)defaultService;
	}
	
	private TipoMeioTransporteService tipoMeioTransporteService;
	private MoedaPaisService moedaPaisService;
	private RotaService rotaService;
	private RotaIdaVoltaService rotaIdaVoltaService;
	
	
    public void removeById(java.lang.Long id) {
    	getTipoMeioTranspRotaEventService().removeById(id);
    }

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	getTipoMeioTranspRotaEventService().removeByIds(ids);
    }

    public Map findById(java.lang.Long id) {
    	TipoMeioTranspRotaEvent tipoMeioTranspRotaEvent = (TipoMeioTranspRotaEvent)getTipoMeioTranspRotaEventService().findById(id);
    	TipoMeioTransporte tipoMeioTransporte = tipoMeioTranspRotaEvent.getTipoMeioTransporte();
    	
    	TypedFlatMap retorno = new TypedFlatMap();
        retorno.put("idTipoMeioTranspRotaEvent",tipoMeioTranspRotaEvent.getIdTipoMeioTranspRotaEvent());
        retorno.put("tipoMeioTransporte.idTipoMeioTransporte",tipoMeioTransporte.getIdTipoMeioTransporte());
        retorno.put("vlFrete",tipoMeioTranspRotaEvent.getVlFrete());
        retorno.put("dtVigenciaInicial",tipoMeioTranspRotaEvent.getDtVigenciaInicial());
        retorno.put("dtVigenciaFinal",tipoMeioTranspRotaEvent.getDtVigenciaFinal());
        
        retorno.put("acaoVigenciaAtual",JTVigenciaUtils.getIntegerAcaoVigencia(tipoMeioTranspRotaEvent));
        
        return retorno;
    }
     
    public ResultSetPage findPaginated(TypedFlatMap criteria) {
    	String dsMoeda = criteria.getString("rotaIdaVolta.siglaSimbolo");
    	
    	criteria.remove("rotaIdaVolta.idMoedaPais");
    	criteria.remove("rotaIdaVolta.siglaSimbolo");
    	ResultSetPage rsp = getTipoMeioTranspRotaEventService().findPaginated(criteria);
    	
    	List newResult = new ArrayList();
    	for (Iterator i = rsp.getList().iterator() ; i.hasNext() ; ) {
    		TipoMeioTranspRotaEvent t = (TipoMeioTranspRotaEvent)i.next();
    		
    		Map mapRetorno = new HashMap();
    		Map tipoMeioTransporte = new HashMap(); 
    		mapRetorno.put("idTipoMeioTranspRotaEvent",t.getIdTipoMeioTranspRotaEvent());
    		// É necessário carregar tipo de meio de tranporte aninhado:
    		mapRetorno.put("tipoMeioTransporte",tipoMeioTransporte);
    		tipoMeioTransporte.put("dsTipoMeioTransporte",t.getTipoMeioTransporte().getDsTipoMeioTransporte());
    		    		
    		mapRetorno.put("dtVigenciaInicial",t.getDtVigenciaInicial());
    		mapRetorno.put("dtVigenciaFinal",t.getDtVigenciaFinal());
    		
    		mapRetorno.put("dsMoeda_01", dsMoeda);
    		mapRetorno.put("dsMoeda_02", dsMoeda);
    		mapRetorno.put("vlPedagio",new BigDecimal(0));
    		mapRetorno.put("vlFrete",t.getVlFrete());
    		
    		newResult.add(mapRetorno);
    	}
    	
    	rsp.setList(newResult);
    	return rsp;
    }

    /**
	 * Insere, caso o id seja <code>null</code> ou atualiza uma entidade, caso contrário.
	 *
	 * @param bean entidade a ser armazenada.
	 * @return entidade que foi armazenada.
	 */
    public Serializable store(Map bean) {
    	TipoMeioTranspRotaEvent tipoMeioTranspRotaEvent = new TipoMeioTranspRotaEvent();

        ReflectionUtils.copyNestedBean(tipoMeioTranspRotaEvent,bean);

        getTipoMeioTranspRotaEventService().store(tipoMeioTranspRotaEvent);
 
        TypedFlatMap retorno = new TypedFlatMap();
        retorno.put("idTipoMeioTranspRotaEvent",tipoMeioTranspRotaEvent.getIdTipoMeioTranspRotaEvent());
        retorno.put("acaoVigenciaAtual",JTVigenciaUtils.getIntegerAcaoVigencia(tipoMeioTranspRotaEvent));
        return retorno;
    }
    
    public Map findValorPedagio(TypedFlatMap criteria) {
    	if (criteria.getLong("idMoedaPais") == null ||
    		criteria.getLong("idRotaIdaVolta") == null ||
    		criteria.getLong("idTipoMeioTransporte") == null)
    		return new HashMap();

    	Map m = new HashMap();
    	m.put("vlPedagio",new DecimalFormat("#,##0.00").format(new BigDecimal(0)));
    	return m;
    }
    
	public List findTipoMeioTransporteCombo(Map criteria) {
		return getTipoMeioTransporteService().find(criteria);
	}
	
	public List findMoedaPaisCombo() {
		return getMoedaPaisService().findMoedaByPaisUsuarioLogado();
	}

	public MoedaPaisService getMoedaPaisService() {
		return moedaPaisService;
	}

	public void setMoedaPaisService(MoedaPaisService moedaPaisService) {
		this.moedaPaisService = moedaPaisService;
	}

	public TipoMeioTransporteService getTipoMeioTransporteService() {
		return tipoMeioTransporteService;
	}

	public void setTipoMeioTransporteService(TipoMeioTransporteService tipoMeioTransporteService) {
		this.tipoMeioTransporteService = tipoMeioTransporteService;
	}

	public RotaService getRotaService() {
		return rotaService;
	}

	public void setRotaService(RotaService rotaService) {
		this.rotaService = rotaService;
	}

	public RotaIdaVoltaService getRotaIdaVoltaService() {
		return rotaIdaVoltaService;
	}

	public void setRotaIdaVoltaService(RotaIdaVoltaService rotaIdaVoltaService) {
		this.rotaIdaVoltaService = rotaIdaVoltaService;
	}

}
