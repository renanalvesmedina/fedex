package com.mercurio.lms.municipios.action;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import org.joda.time.YearMonthDay;

import com.mercurio.adsm.core.util.ReflectionUtils;
import com.mercurio.adsm.framework.BusinessException;
import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.ConfiguracoesFacade;
import com.mercurio.lms.municipios.model.MunicipioFilial;
import com.mercurio.lms.municipios.model.service.AtualizarTrocaFiliaisService;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.municipios.model.service.HistoricoTrocaFilialService;
import com.mercurio.lms.municipios.model.service.MunicipioFilialService;
import com.mercurio.lms.municipios.model.service.MunicipioService;
import com.mercurio.lms.municipios.report.EmitirClienteAfetadoAtendimentoService;
import com.mercurio.lms.util.JTFormatUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.municipios.atualizarTrocaFiliaisAction"
 */

public class AtualizarTrocaFiliaisAction extends ReportActionSupport {
  
	private MunicipioService municipioService;
	private FilialService filialService;
	private MunicipioFilialService municipioFilialService;
	private AtualizarTrocaFiliaisService atualizarTrocaFiliaisService;
	private ConfiguracoesFacade configuracoesFacade;
	private HistoricoTrocaFilialService historicoTrocaFilialService;
	
	public List findMunicipio(Map criteria){
		return municipioService.findLookup(criteria);
	}
	
	public List findFilial(Map criteria){
		return filialService.findLookup(criteria);
	}
	
	public List findMunicipioFilialVigenteByMunicipio(Map criteria){
		Long idMunicipio = Long.valueOf((String)criteria.get("idMunicipio"));
		List retorno = municipioFilialService.findMunicipioFilialVigenteByMunicipio(idMunicipio); 
		return insereLabelAtendimentoRestrito(retorno);
	}
	
	private List insereLabelAtendimentoRestrito(List atendimentos){
		List newResult = new ArrayList();
		String label = configuracoesFacade.getMensagem("atendimentoRestrito");
		try {
			if (!atendimentos.isEmpty()) {
				
				for(Iterator it = atendimentos.iterator(); it.hasNext();){
					Map municipioFilial = (Map) it.next();	    		
					StringBuffer siglaNomeFilial = new StringBuffer();
					siglaNomeFilial.append((String) municipioFilial.get("sgFilial") + " - " + municipioFilial.get("nmFantasia"));
					
					Boolean blRestricaoAtendimento = (Boolean) municipioFilial.get("blRestricaoAtendimento");
					
					if (blRestricaoAtendimento.booleanValue()){
						siglaNomeFilial.append(" - ("+label+")");	    			
					}					
									
					if (municipioFilial.get("dtVigenciaInicial") != null){
						siglaNomeFilial.append(" - [" + (JTFormatUtils.format((YearMonthDay)municipioFilial.get("dtVigenciaInicial"), JTFormatUtils.SHORT)));
						if (municipioFilial.get("dtVigenciaFinal") != null)
							siglaNomeFilial.append(" - " + (JTFormatUtils.format((YearMonthDay)municipioFilial.get("dtVigenciaFinal"), JTFormatUtils.SHORT)));
						siglaNomeFilial.append("]");
					}
					
					municipioFilial.put("siglaNomeFilial",siglaNomeFilial.toString());	    		
					newResult.add(municipioFilial);
				}
			}
		} catch (BusinessException be) {
			throw be;
		} catch (Exception e) {
			throw new BusinessException(e.getMessage());
		}
		
		return newResult;
	}
	
	public List findMunicipioFilial(Map criteria){ 
		return municipioFilialService.find(criteria);
	}
	
	public void executeAtualizar(Map criteria){
		
				
		Long idMunicipioFilialAtual = Long.valueOf((String)((Map)criteria.get("filialAtual")).get("idMunicipioFilial") );
		Map municipioFilialMap = (Map)criteria.get("municipioFilial");
		
		
		MunicipioFilial municipioFilial = new MunicipioFilial();
		
		ReflectionUtils.copyNestedBean(municipioFilial, municipioFilialMap);
		municipioFilial.setBlDificuldadeEntrega(Boolean.FALSE);
			
		atualizarTrocaFiliaisService.execute(idMunicipioFilialAtual, municipioFilial);
	}
	
	
	public Map findDadosHistoricoTrocaFilial(TypedFlatMap parametros){
		Long idHistoricoTrocaFilial = parametros.getLong("idHistoricoTrocaFilial");
		
		return historicoTrocaFilialService.findDadosHistoricoTrocaFilial(idHistoricoTrocaFilial);
	}
	
	public List findFilialAtualHistorico(TypedFlatMap parametros){
		MunicipioFilial mf = municipioFilialService.findById(parametros.getLong("idMunicipioFilial"));
		TypedFlatMap retorno = new TypedFlatMap();
		retorno.put("idMunicipioFilial", mf.getIdMunicipioFilial());
		retorno.put("blRestricaoAtendimento", mf.getBlRestricaoAtendimento());		
		retorno.put("dtVigenciaInicial", mf.getDtVigenciaInicial());
		retorno.put("dtVigenciaFinal", mf.getDtVigenciaFinal());
		retorno.put("sgFilial", mf.getFilial().getSgFilial());
		retorno.put("nmFantasia", mf.getFilial().getPessoa().getNmFantasia());
		
		List list = new ArrayList();
		list.add(retorno);
		
		return insereLabelAtendimentoRestrito(list);
	}
	

	//##################################### SETTER ########################################//
	
	/**
	 * @param municipioService The municipioService to set.
	 */
	public void setMunicipioService(MunicipioService municipioService) {
		this.municipioService = municipioService;
	}
	
	/**
	 * @param filialService The filialService to set.
	 */
	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}

	/**
	 * @param municipioFilialService The municipioFilialService to set.
	 */
	public void setMunicipioFilialService(MunicipioFilialService municipioFilialService) {
		this.municipioFilialService = municipioFilialService;
	}
	
	/**
	 * @param atualizarTrocaFiliaisService The atualizarTrocaFiliaisService to set.
	 */
	public void setAtualizarTrocaFiliaisService(AtualizarTrocaFiliaisService atualizarTrocaFiliaisService) {
		this.atualizarTrocaFiliaisService = atualizarTrocaFiliaisService;
	}

	/**
	 * @param emitirClienteAfetadoAtendimento The emitirClienteAfetadoAtendimento to set.
	 */
	public void setEmitirClienteAfetadoAtendimento(EmitirClienteAfetadoAtendimentoService emitirClienteAfetadoAtendimento) {
		this.reportServiceSupport = emitirClienteAfetadoAtendimento;
	}

	public void setConfiguracoesFacade(ConfiguracoesFacade configuracoesFacade) {
		this.configuracoesFacade = configuracoesFacade;
	}

	/**
	 * @param historicoTrocaFilialService The historicoTrocaFilialService to set.
	 */
	public void setHistoricoTrocaFilialService(HistoricoTrocaFilialService historicoTrocaFilialService) {
		this.historicoTrocaFilialService = historicoTrocaFilialService;
	}
	



}
