package com.mercurio.lms.municipios.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.DomainValue;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.model.hibernate.VarcharI18n;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.municipios.model.service.AtendimentoClienteService;
import com.mercurio.lms.municipios.model.service.FeriadoService;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.municipios.model.service.IntervaloCepService;
import com.mercurio.lms.municipios.model.service.MunicipioFilialCliOrigemService;
import com.mercurio.lms.municipios.model.service.MunicipioFilialFilOrigemService;
import com.mercurio.lms.municipios.model.service.MunicipioFilialIntervCepService;
import com.mercurio.lms.municipios.model.service.MunicipioFilialSegmentoService;
import com.mercurio.lms.municipios.model.service.MunicipioFilialService;
import com.mercurio.lms.municipios.model.service.MunicipioFilialUFOrigemService;
import com.mercurio.lms.municipios.model.service.MunicipioService;
import com.mercurio.lms.municipios.model.service.OperacaoServicoLocalizaService;
import com.mercurio.lms.municipios.model.service.PaisService;
import com.mercurio.lms.municipios.model.service.PostoPassagemMunicipioService;
import com.mercurio.lms.municipios.model.service.PostoPassagemService;
import com.mercurio.lms.municipios.model.service.UnidadeFederativaService;
import com.mercurio.lms.util.AliasToNestedMapResultTransformer;
import com.mercurio.lms.util.FormatUtils;
import com.mercurio.lms.util.TimeUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.municipios.consultarMunicipiosAction"
 */

public class ConsultarMunicipiosAction extends CrudAction {
	
	private IntervaloCepService intervaloCepService;
	private FeriadoService feriadoService;
	private MunicipioFilialIntervCepService municipioFilialIntervCepService;
	private MunicipioFilialSegmentoService municipioFilialSegmentoService;
	private MunicipioFilialUFOrigemService municipioFilialUFOrigemService;
	private MunicipioFilialFilOrigemService municipioFilialFilOrigemService;
	private MunicipioFilialCliOrigemService municipioFilialCliOrigemService;
	private MunicipioFilialService municipioFilialService;
	private OperacaoServicoLocalizaService operacaoServicoLocalizaService;
	private PostoPassagemMunicipioService postoPassagemMunicipioService;
	private AtendimentoClienteService atendimentoClienteService;
	private PostoPassagemService postoPassagemService;
	private MunicipioService municipioService;
	private UnidadeFederativaService unidadeFederativaService;
	private PaisService paisService;
	private FilialService filialService;
	
    public void removeById(java.lang.Long id) {
        ((MunicipioService)defaultService).removeById(id);
    }

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	((MunicipioService)defaultService).removeByIds(ids);
    }

    public ResultSetPage findPaginatedMunicipios(TypedFlatMap criteria) {
    	ResultSetPage rs = ((MunicipioService)defaultService).findPaginatedConsultaMunicipios(criteria);
    	List listaNova = AliasToNestedMapResultTransformer.getInstance().transformListResult(rs.getList());
    	rs.setList(listaNova);
		return rs;
	}
    
	public Integer getRowCountMunicipios(TypedFlatMap criteria) {
		return ((MunicipioService)defaultService).getRowCountConsultaMunicipios(criteria);
	}
	
    //realiza paginação de municipios atendidos
	public List findMunicipioFilialVigenteAtualByMunicipio(Long idMunicipio) {
		List lista = getMunicipioFilialService().findMunicipioFilialVigenteAtualByMunicipio(idMunicipio);
		List listaNova = new ArrayList();
		for(int i=0; i<lista.size();i++){
			Map map = (Map)lista.get(i);
			map.put("nmEmpresa",map.get("nmEmpresa"));
			listaNova.add(map);
		}
		return listaNova;
	}
	
	public Map findById(Long id) {
		List listaMunicipio = ((MunicipioService)defaultService).findByIdCustom(id);
		Map mapMunicipios = (Map)listaMunicipio.get(0);
		DomainValue dv = (DomainValue)mapMunicipios.get("tpSituacao");
		mapMunicipios.put("tpSituacao", dv.getValue());
		
		List listaIntervalosCep = getIntervaloCepService().findIntervaloCepByMunicipio(id);
		if(!listaIntervalosCep.isEmpty()){
			List lista = AliasToNestedMapResultTransformer.getInstance().transformListResult(listaIntervalosCep);
			for (int i=0; i<lista.size();i++){
				Map map =(Map) lista.get(i);
				String cepInicialFinal =(String)map.get("nrCepInicial")+ " - " + map.get("nrCepFinal");
				map.put("cepInicialFinal",cepInicialFinal);
			}
			
			mapMunicipios.put("intervaloCeps",lista);
			
		}
		return mapMunicipios;
	}
	
	public Map findByIdPostoPassagemMunicipio(Long idPostoPassagemMunicipio) {
		List lista = getPostoPassagemMunicipioService().findByIdPostoPassagemMunicipio(idPostoPassagemMunicipio);
		List listaNova = AliasToNestedMapResultTransformer.getInstance().transformListResult(lista);
		Map mapPesquisa = new HashMap();
		Map map = (Map)listaNova.get(0);
		Long idPostoPassagem = (Long)map.get("idPostoPassagem");
	    mapPesquisa.put("idPostoPassagem",idPostoPassagem.toString());
		List listaValores = getPostoPassagemService().findValoresPostosPassagemList(mapPesquisa);
		map.put("listaValores",listaValores);
		
		return map;
	}
	
	public Map findByIdMunicipioFilial(Long idMunicipioFilial) {
		List municipioFilial = getMunicipioFilialService().findByIdCustomizado(idMunicipioFilial);
		Map mapMunicipioFilial = (Map)municipioFilial.get(0);
		//intervalos cep
		List listaIntervalosCepAtend = getMunicipioFilialIntervCepService().findCepAtendidoByMunicipioFilial(idMunicipioFilial);
		if(!listaIntervalosCepAtend.isEmpty()){
			List listaCeps = AliasToNestedMapResultTransformer.getInstance().transformListResult(listaIntervalosCepAtend);
			for (int i=0; i<listaCeps.size();i++){
				Map map =(Map) listaCeps.get(i);
				String cepInicialFinal =(String)map.get("nrCepInicial")+ " - " + map.get("nrCepFinal");
				map.put("cepInicialFinal",cepInicialFinal);
			}
			mapMunicipioFilial.put("municipioFilialIntervCeps",listaCeps);
		}
		
		//segmentos
		List listaSegmentosAtend = getMunicipioFilialSegmentoService().findSegmentoAtendidoByMunicipioFilial(idMunicipioFilial);
		if(!listaSegmentosAtend.isEmpty())
			mapMunicipioFilial.put("municipioFilialSegmentos",listaSegmentosAtend);
		
		//uf 
		List listaUFAtend = getMunicipioFilialUFOrigemService().findUFsAtendidasByMunicipioFilial(idMunicipioFilial);
		if(!listaUFAtend.isEmpty()){
			for (int i=0; i<listaUFAtend.size();i++){
				Map map =(Map) listaUFAtend.get(i);
				String siglaDescricaoUF =(String)map.get("sgUnidadeFederativa")+ " - " + map.get("nmUnidadeFederativa");
				map.put("siglaDescricaoUF",siglaDescricaoUF);
			}
			mapMunicipioFilial.put("municipioFilialUfOrigems",listaUFAtend);
		}
		
		//filial
		List listaFilAtend = getMunicipioFilialFilOrigemService().findFilAtendidasByMunicipioFilial(idMunicipioFilial);
		if(!listaFilAtend.isEmpty()){
			for (int i=0; i<listaFilAtend.size();i++){
				Map map =(Map) listaFilAtend.get(i);
				String siglaDescricaoFil =(String)map.get("sgFilial")+ " - " + map.get("nmFilial");
				map.put("siglaDescricaoFil",siglaDescricaoFil);
			}
			mapMunicipioFilial.put("municipioFilialFilOrigems",listaFilAtend);
		}
		
       //remententes
		List listaCliAtend = getMunicipioFilialCliOrigemService().findCliAtendidosByMunicipioFilial(idMunicipioFilial);
		if(!listaCliAtend.isEmpty()){
			for (int i=0; i<listaCliAtend.size();i++){
				Map map =(Map) listaCliAtend.get(i);
				DomainValue tpIdentificacao = (DomainValue)map.get("tpIdentificacao");
				String tpIdentificacaoValue = tpIdentificacao.getValue();
				String conteudo = (String)map.get("nrIdentificacao");
				String nrIdentificacaoFormatado = FormatUtils.formatIdentificacao(tpIdentificacaoValue,conteudo);
				String identificacaoNome =nrIdentificacaoFormatado+ " - " + map.get("nmPessoa");
				map.put("identificacaoNome",identificacaoNome);
			}
			mapMunicipioFilial.put("municipioFilialCliOrigems",listaCliAtend);
		}
		
        return mapMunicipioFilial;
	}
	
	
	
	//retorna um map se existirem registros "municipioFilial" vigentes para aquele municipio
	public Map findMunicipioFilialVigenteByMunicipio(Long idMunicipio){
		List listaMunicipioFilial =  getMunicipioFilialService().findMunicipioFilialVigenteAtualByMunicipio(idMunicipio);
		List listaFeriados = getFeriadoService().findFeriadosVigentesByIdMunicipio(idMunicipio);
		Map map = new HashMap();
		if(!listaMunicipioFilial.isEmpty())
			map.put("existeMunicipioFilialVigente",Boolean.TRUE);
		else 
			map.put("existeMunicipioFilialVigente",Boolean.FALSE);
		
		if(!listaFeriados.isEmpty())
			map.put("existeFeriadoVigente",Boolean.TRUE);
		else
			map.put("existeFeriadoVigente",Boolean.FALSE);
		
		return map;
	} 
	
	//faz o paginated de operacoes servico localizacao
	public List findOperacaoServicoLocalVigenteByMunFilial(TypedFlatMap municipioFilial){
		Long idMunicipioFilial = municipioFilial.getLong("idMunicipioFilial");
		List lista = getOperacaoServicoLocalizaService().findOperacaoServicoLocalVigenteByMunFilial(idMunicipioFilial); 
		List listaNova = AliasToNestedMapResultTransformer.getInstance().transformListResult(lista);
		Long nrTempoColeta;
		Long nrTempoEntrega;
		for(int i = 0; i< listaNova.size();i++){
			Map map = (Map)listaNova.get(0);
			if(map.get("nrTempoColeta")!= null){
				nrTempoColeta = (Long)map.get("nrTempoColeta");
				map.put("nrTempoColetaEmHoras",TimeUtils.minutesToHoursInteger(Integer.valueOf((nrTempoColeta).intValue())));
			}
			if(map.get("nrTempoEntrega")!= null){
				nrTempoEntrega = (Long)map.get("nrTempoEntrega");
				map.put("nrTempoEntregaEmHoras",TimeUtils.minutesToHoursInteger(Integer.valueOf((nrTempoEntrega).intValue())));
			}
		}
		return listaNova;
	}
	
	//faz o paginated de postos de passagem Municipio
	public List findPostosPassagemVigentesByMunFil(TypedFlatMap municipioFilial){
		Long idMunicipioFilial = municipioFilial.getLong("idMunicipioFilial");
		List lista = getPostoPassagemMunicipioService().findPostosPassagemVigentesByMunFil(idMunicipioFilial);
		List listaNova = AliasToNestedMapResultTransformer.getInstance().transformListResult(lista);
		return listaNova;
	}
	
	public List findFeriadosVigentesByIdMunicipio(Long idMunicipio){
		List lista =  getFeriadoService().findFeriadosVigentesByIdMunicipio(idMunicipio);
		String abrangencia = "";
		List listaNova = new ArrayList();
		for(int i=0;i<lista.size();i++){
			Map map = (Map)lista.get(i);
			if (org.apache.commons.lang.StringUtils.isNotBlank((String)map.get("municipio"))){ 
				abrangencia = "Municipal";
				map.put("local",(String)map.get("municipio")+ " - " +(String)map.get("sgUnidadeFederativa") + " - " +(VarcharI18n)map.get("pais") );
			}else if (org.apache.commons.lang.StringUtils.isNotBlank((String)map.get("unidadeFederativa"))){ 
				abrangencia = "Estadual";
				map.put("local",(String)map.get("sgUnidadeFederativa") + " - " +(VarcharI18n)map.get("pais"));
			}else if (org.apache.commons.lang.StringUtils.isNotBlank((String)map.get("pais").toString())){ 
				abrangencia = "Nacional";
				map.put("local",(VarcharI18n)map.get("pais"));
			}else 
				abrangencia = "Mundial";
			
			map.put("abrangencia",abrangencia);
			listaNova.add(map);
		}
		return listaNova;
	}
	
	public List findAtendimentosVigentesByIdServicoLocalizacao(TypedFlatMap servicoLocalizacao){
		Long idServicoLocalizacao = servicoLocalizacao.getLong("idOperacaoServicoLocaliza");
		List lista =  getAtendimentoClienteService().findAtendimentosVigentesByIdServicoLocalizacao(idServicoLocalizacao);
		for (int i = 0; i<lista.size();i++){
			Map map = (Map)lista.get(i);
			DomainValue tpIdentificacao = (DomainValue)map.get("tpIdentificacao");
			String tpIdentificacaoValue = tpIdentificacao.getValue();
			String conteudo = (String)map.get("nrIdentificacao");
			String nrIdentificacaoFormatado = FormatUtils.formatIdentificacao(tpIdentificacaoValue,conteudo);
			map.put("nrIdentificacaoFormatado",nrIdentificacaoFormatado);
		}
		return lista;
	}
	
	//*******************LOOKUP****************************//
	public List findLookupMunicipio(Map criteria) {
		return municipioService.findLookup(criteria);
	}
	
	public List findLookupUnidadeFederativa(Map criteria) {
		return unidadeFederativaService.findLookup(criteria);
	}
	
	public List findLookupPais(Map criteria) {
		return paisService.findLookup(criteria);
	}
	
	public List findLookupFilial(Map criteria) {
		return filialService.findLookup(criteria);
	} 
	
	//*********************GETTER AND SETTER*****************************************//
	public void setMunicipioService(MunicipioService municipioService) {
		this.municipioService = municipioService;
	}
	public void setUnidadeFederativaService(UnidadeFederativaService unidadeFederativaService) {
		this.unidadeFederativaService = unidadeFederativaService;
	}
	public void setPaisService(PaisService paisService) {
		this.paisService = paisService;
	}
	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}
	public PostoPassagemService getPostoPassagemService() {
		return postoPassagemService;
	}
	public void setPostoPassagemService(PostoPassagemService postoPassagemService) {
		this.postoPassagemService = postoPassagemService;
	}
	public AtendimentoClienteService getAtendimentoClienteService() {
		return atendimentoClienteService;
	}
	public void setAtendimentoClienteService(AtendimentoClienteService atendimentoClienteService) {
		this.atendimentoClienteService = atendimentoClienteService;
	}
	public FeriadoService getFeriadoService() {
		return feriadoService;
	}
	public void setFeriadoService(FeriadoService feriadoService) {
		this.feriadoService = feriadoService;
	}
	public PostoPassagemMunicipioService getPostoPassagemMunicipioService() {
		return postoPassagemMunicipioService;
	}
	public void setPostoPassagemMunicipioService(PostoPassagemMunicipioService postoPassagemMunicipioService) {
		this.postoPassagemMunicipioService = postoPassagemMunicipioService;
	}
	public OperacaoServicoLocalizaService getOperacaoServicoLocalizaService() {
		return operacaoServicoLocalizaService;
	}
	public void setOperacaoServicoLocalizaService(OperacaoServicoLocalizaService operacaoServicoLocalizaService) {
		this.operacaoServicoLocalizaService = operacaoServicoLocalizaService;
	}
	public MunicipioFilialCliOrigemService getMunicipioFilialCliOrigemService() {
		return municipioFilialCliOrigemService;
	}
	public void setMunicipioFilialCliOrigemService(MunicipioFilialCliOrigemService municipioFilialCliOrigemService) {
		this.municipioFilialCliOrigemService = municipioFilialCliOrigemService;
	}
	public MunicipioFilialFilOrigemService getMunicipioFilialFilOrigemService() {
		return municipioFilialFilOrigemService;
	}
	public void setMunicipioFilialFilOrigemService(MunicipioFilialFilOrigemService municipioFilialFilOrigemService) {
		this.municipioFilialFilOrigemService = municipioFilialFilOrigemService;
	}
	public MunicipioFilialUFOrigemService getMunicipioFilialUFOrigemService() {
		return municipioFilialUFOrigemService;
	}
	public void setMunicipioFilialUFOrigemService(MunicipioFilialUFOrigemService municipioFilialUFOrigemService) {
		this.municipioFilialUFOrigemService = municipioFilialUFOrigemService;
	}
	public MunicipioFilialService getMunicipioFilialService() {
		return municipioFilialService;
	}
	public void setMunicipioFilialService(MunicipioFilialService municipioFilialService) {
		this.municipioFilialService = municipioFilialService;
	}
	public IntervaloCepService getIntervaloCepService() {
		return intervaloCepService;
	}
	public void setIntervaloCepService(IntervaloCepService intervaloCepService) {
		this.intervaloCepService = intervaloCepService;
	}
	public void setMunicipio(MunicipioService municipioService) {
		this.defaultService = municipioService;
	}
	public MunicipioFilialIntervCepService getMunicipioFilialIntervCepService() {
		return municipioFilialIntervCepService;
	}
	public void setMunicipioFilialIntervCepService(MunicipioFilialIntervCepService municipioFilialIntervCepService) {
		this.municipioFilialIntervCepService = municipioFilialIntervCepService;
	}
	public MunicipioFilialSegmentoService getMunicipioFilialSegmentoService() {
		return municipioFilialSegmentoService;
	}
	public void setMunicipioFilialSegmentoService(MunicipioFilialSegmentoService municipioFilialSegmentoService) {
		this.municipioFilialSegmentoService = municipioFilialSegmentoService;
	}

}
