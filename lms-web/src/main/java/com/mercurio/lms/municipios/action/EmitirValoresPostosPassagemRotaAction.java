package com.mercurio.lms.municipios.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.ConfiguracoesFacade;
import com.mercurio.lms.configuracoes.model.MoedaPais;
import com.mercurio.lms.configuracoes.model.service.MoedaPaisService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.Pais;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.municipios.report.EmitirValoresPostosPassagemRotaService;
import com.mercurio.lms.util.session.SessionUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.municipios.emitirValoresPostosPassagemRotaAction"
 */

public class EmitirValoresPostosPassagemRotaAction extends ReportActionSupport {
	private EmitirValoresPostosPassagemRotaService emitirValoresPostosPassagemRotaService;
	private FilialService filialService;
	private ConfiguracoesFacade configuracoesFacade;
	private MoedaPaisService moedaPaisService;

	public void setMoedaPaisService(MoedaPaisService moedaPaisService) {
		this.moedaPaisService = moedaPaisService;
	}

	public void setConfiguracoesFacade(ConfiguracoesFacade configuracoesFacade) {
		this.configuracoesFacade = configuracoesFacade;
	}

	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}
	
	public EmitirValoresPostosPassagemRotaService getEmitirValoresPostosPassagemRotaService() {
		return emitirValoresPostosPassagemRotaService;
	}

	public void setEmitirValoresPostosPassagemRotaService(
			EmitirValoresPostosPassagemRotaService emitirValoresPostosPassagemRotaService) {
		this.reportServiceSupport = emitirValoresPostosPassagemRotaService;
	}
	
	public List findFilialLookup(Map criteria){
	    	return filialService.findLookup(criteria);
	}
	
	
       
    public List findMoedaPais(Map criteria){
		Pais p = SessionUtils.getPaisSessao();
		return configuracoesFacade.getMoedasPais(p.getIdPais(),Boolean.TRUE);
	}
    
    public Map findMoedaUsuario() {		
		Pais p = SessionUtils.getPaisSessao();
		MoedaPais mp = moedaPaisService.findMoedaPaisMaisUtilizada(p.getIdPais());	
		Map m = new HashMap();
		m.put("idMoedaPais",mp.getIdMoedaPais());
		m.put("idMoeda",mp.getMoeda().getIdMoeda());
		m.put("dsSimbolo", mp.getMoeda().getDsSimbolo());
		m.put("siglaSimbolo", mp.getMoeda().getSiglaSimbolo());
		return m;
    } 
    
    public List findFilialUsuarioLogado(){
		TypedFlatMap typedFlatMap = new TypedFlatMap();
		Filial filial = SessionUtils.getFilialSessao();
		List filialRotas = null;
		if(!SessionUtils.isFilialSessaoMatriz()){
			filialRotas = new ArrayList();
			typedFlatMap.put("filial.sgFilial", filial.getSgFilial());
			typedFlatMap.put("filial.nmFilial", filial.getPessoa().getNmFantasia());
			typedFlatMap.put("filial.idFilial", filial.getIdFilial());
			filialRotas.add(typedFlatMap);
		}
		return filialRotas;
	}

}
