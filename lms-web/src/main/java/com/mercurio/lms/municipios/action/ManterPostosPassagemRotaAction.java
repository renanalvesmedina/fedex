package com.mercurio.lms.municipios.action;

import java.util.List;
import java.util.Map;

import org.joda.time.YearMonthDay;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.FindDefinition;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.municipios.model.Concessionaria;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.PostoPassagem;
import com.mercurio.lms.municipios.model.PostoPassagemRotaColEnt;
import com.mercurio.lms.municipios.model.RotaColetaEntrega;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.municipios.model.service.PostoPassagemRotaColEntService;
import com.mercurio.lms.municipios.model.service.PostoPassagemService;
import com.mercurio.lms.municipios.model.service.RotaColetaEntregaService;
import com.mercurio.lms.util.FormatUtils;
import com.mercurio.lms.util.JTVigenciaUtils;
import com.mercurio.lms.util.session.SessionUtils;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.municipios.manterPostosPassagemRotaAction"
 */

public class ManterPostosPassagemRotaAction extends CrudAction {
	private FilialService filialService;
	private RotaColetaEntregaService rotaColetaEntregaService;
	private PostoPassagemService postoPassagemService;
	
	public void setPostoPassagemRotaColetaEntregaService(
			PostoPassagemRotaColEntService postoPassagemRotaColetaEntregaService) {
		this.defaultService = postoPassagemRotaColetaEntregaService;
	}

	// ####################################################################################

    public TypedFlatMap findByIdDetalhamento(java.lang.Long id) {
    	PostoPassagemRotaColEnt ppr = (PostoPassagemRotaColEnt)findById(id);
    	Integer acaoVigencia = JTVigenciaUtils.getIntegerAcaoVigencia(ppr);
    	TypedFlatMap mapPpr = new TypedFlatMap();
    	mapPpr.put("acaoVigenciaAtual", acaoVigencia);
    	
    	final RotaColetaEntrega rotaColetaEntrega = ppr.getRotaColetaEntrega();
    	mapPpr.put("rotaColetaEntrega.dsRota", rotaColetaEntrega.getDsRota());
    	final Filial filial = rotaColetaEntrega.getFilial();
		mapPpr.put("rotaColetaEntrega.filial.idFilial", filial.getIdFilial());
    	mapPpr.put("rotaColetaEntrega.filial.sgFilial", filial.getSgFilial());
    	mapPpr.put("rotaColetaEntrega.filial.pessoa.nmFantasia", filial.getPessoa().getNmFantasia());
    	mapPpr.put("rotaColetaEntrega.idRotaColetaEntrega", rotaColetaEntrega.getIdRotaColetaEntrega());
    	mapPpr.put("rotaColetaEntrega.nrRota", rotaColetaEntrega.getNrRota());
    	final PostoPassagem postoPassagem = ppr.getPostoPassagem();
		mapPpr.put("postoPassagem.idPostoPassagem", postoPassagem.getIdPostoPassagem());
    	mapPpr.put("postoPassagem.tpPostoPassagem.description", postoPassagem.getTpPostoPassagem().getDescription().getValue());
    	mapPpr.put("postoPassagem.municipio.nmMunicipio", postoPassagem.getMunicipio().getNmMunicipio());
    	mapPpr.put("postoPassagem.tpSentidoCobranca.description", postoPassagem.getTpSentidoCobranca().getDescription().getValue());

    	if (postoPassagem.getRodovia() != null) {
        	mapPpr.put("postoPassagem.rodovia.sgRodovia", postoPassagem.getRodovia().getSgRodovia());
    	}
    	
    	mapPpr.put("postoPassagem.nrKm", postoPassagem.getNrKm());
    	final Concessionaria concessionaria = postoPassagem.getConcessionaria();
		mapPpr.put("postoPassagem.concessionaria.pessoa.nrIdentificacaoFormatado",FormatUtils.formatIdentificacao(concessionaria.getPessoa().getTpIdentificacao(), concessionaria.getPessoa().getNrIdentificacao()));
    	mapPpr.put("postoPassagem.concessionaria.pessoa.nmPessoa", concessionaria.getPessoa().getNmPessoa());
    	mapPpr.put("dtVigenciaInicial", ppr.getDtVigenciaInicial());
    	mapPpr.put("dtVigenciaFinal", ppr.getDtVigenciaFinal());
    	mapPpr.put("idPostoPassagemRotaColEnt", ppr.getIdPostoPassagemRotaColEnt());
    	
    	    	
    	return mapPpr;
    }

    public Map storeMap(Map bean) {
    	return ((PostoPassagemRotaColEntService)defaultService).storeMap(bean);
    }
	
	// ####################################################################################
	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	((PostoPassagemRotaColEntService)defaultService ).removeByIds(ids);
    }

    public void removeById(java.lang.Long id) {
    	((PostoPassagemRotaColEntService)defaultService).removeById(id);
    }
    
    public PostoPassagemRotaColEnt findById(java.lang.Long id) {
    	return ((PostoPassagemRotaColEntService)defaultService).findById(id);
    }

    /**
     * Andresa Vargas
     * 
     * FindPaginated customizado
     * 
     * @param criteria
     * @see lms.com.mercurio.lms.municipios.model.service.PostoPassagemRotaColEntService.findPaginatedCustom
     */
	public ResultSetPage findPaginatedCustom(TypedFlatMap criteria) {
		
		Long idFilial = criteria.getLong("rotaColetaEntrega.filial.idFilial");
		Long idPostoPassagem = criteria.getLong("postoPassagem.idPostoPassagem");
		Long idRotaColetaEntrega  = criteria.getLong("rotaColetaEntrega.idRotaColetaEntrega");
		YearMonthDay dtVigenciaInicial = criteria.getYearMonthDay("dtVigenciaInicial");
		YearMonthDay dtVigenciaFinal = criteria.getYearMonthDay("dtVigenciaFinal");

		return ((PostoPassagemRotaColEntService)defaultService).findPaginatedCustom(idFilial, idPostoPassagem, idRotaColetaEntrega, dtVigenciaInicial, dtVigenciaFinal, FindDefinition.createFindDefinition(criteria));
	} 
		
	/**
	 * Andresa Vargas
	 * 
	 * RowCount customizado
	 * 
	 * @param criteria
	 * @see lms.com.mercurio.lms.municipios.model.service.PostoPassagemRotaColEntService.getRowCountCustom
	 */
	public Integer getRowCountCustom(TypedFlatMap criteria) {
		Long idFilial = criteria.getLong("rotaColetaEntrega.filial.idFilial");
		Long idPostoPassagem = criteria.getLong("postoPassagem.idPostoPassagem");
		Long idRotaColetaEntrega  = criteria.getLong("rotaColetaEntrega.idRotaColetaEntrega");
		YearMonthDay dtVigenciaInicial = criteria.getYearMonthDay("dtVigenciaInicial");
		YearMonthDay dtVigenciaFinal = criteria.getYearMonthDay("dtVigenciaFinal");

		return ((PostoPassagemRotaColEntService)defaultService).getRowCountCustom(idFilial, idPostoPassagem, idRotaColetaEntrega, dtVigenciaInicial, dtVigenciaFinal);
	}
 
	/**
     * Retorna para a tela a filial do usuário logado.
     * @return
     */
    public TypedFlatMap findFilialUsuarioLogado() {
    	TypedFlatMap retorno = new TypedFlatMap();
    	
    	Filial f = SessionUtils.getFilialSessao();
    	retorno.put("idFilial",f.getIdFilial());
    	retorno.put("sgFilial",f.getSgFilial());
    	retorno.put("pessoa.nmFantasia",f.getPessoa().getNmFantasia());
    	
    	return retorno;
    }
	
	public List findLookupFilial(TypedFlatMap criteria) {
		return filialService.findLookupAsPaginated(criteria);
	}
	
	public List findLookupRotaColetaEntrega(Map criteria) {
		return rotaColetaEntregaService.findLookup(criteria);
	}

	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}

	public void setRotaColetaEntregaService(
			RotaColetaEntregaService rotaColetaEntregaService) {
		this.rotaColetaEntregaService = rotaColetaEntregaService;
	}
	
	public List findLookupByFormaCobranca(Map criteria) {
    	return postoPassagemService.findLookupByFormaCobranca(criteria);
    }

	public void setPostoPassagemService(PostoPassagemService postoPassagemService) {
		this.postoPassagemService = postoPassagemService;
	}
	
	public List findValoresPostosPassagemList(Map map) {
		return postoPassagemService.findValoresPostosPassagemList(map);
	}
}
