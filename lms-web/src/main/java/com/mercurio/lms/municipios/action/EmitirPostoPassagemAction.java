package com.mercurio.lms.municipios.action;


import java.io.File;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.springframework.jdbc.UncategorizedSQLException;

import com.mercurio.adsm.core.InfrastructureException;
import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.ConfiguracoesFacade;
import com.mercurio.lms.configuracoes.model.MoedaPais;
import com.mercurio.lms.configuracoes.model.service.MoedaPaisService;
import com.mercurio.lms.configuracoes.model.service.ParametroGeralService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.Pais;
import com.mercurio.lms.municipios.model.service.ConcessionariaService;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.municipios.model.service.MunicipioService;
import com.mercurio.lms.municipios.model.service.PaisService;
import com.mercurio.lms.municipios.model.service.RodoviaService;
import com.mercurio.lms.municipios.model.service.UnidadeFederativaService;
import com.mercurio.lms.municipios.report.EmitirPostoPassagemService;
import com.mercurio.lms.util.FormatUtils;
import com.mercurio.lms.util.session.SessionUtils;


/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.municipios.emitirPostoPassagemAction"
 */

public class EmitirPostoPassagemAction extends ReportActionSupport {

	private EmitirPostoPassagemService emitirPostoPassagemService;
	private MunicipioService municipioService;
	private UnidadeFederativaService unidadeFederativaService;
	private PaisService paisService;
	private ConcessionariaService concessionariaService;
	private RodoviaService rodoviaService;
	private MoedaPaisService moedaPaisService;
	private ParametroGeralService parametroGeralService;
	private ConfiguracoesFacade configuracoesFacade;
	private FilialService filialService;
	
	public EmitirPostoPassagemService getEmitirPostoPassagemService() {
		return emitirPostoPassagemService;
	}

	@Override
	public File execute(TypedFlatMap parameters) throws Exception {
		File retorno;
		try {
			retorno = super.execute(parameters);
		} catch (UncategorizedSQLException e) {
			throw new InfrastructureException(e.getCause());
		} 
		return retorno;
	}

	public void setEmitirPostoPassagemService(EmitirPostoPassagemService emitirPostoPassagemService) {
		this.reportServiceSupport = emitirPostoPassagemService;
	}
 
	public List findComboMoeda(TypedFlatMap criteria) {
		return configuracoesFacade.getMoedasPais(criteria.getLong("pais.idPais"), Boolean.TRUE);
	} 

	public List findLookupMunicipio(TypedFlatMap flat) {
		return municipioService.findByNmMunicipioTpSituacaoPaisUf(flat.getString("nmMunicipio"),flat.getLong("unidadeFederativa.pais.idPais"),flat.getLong("unidadeFederativa.idUnidadeFederativa"),null);
	}

	public List findLookupUnidadeFederativa(TypedFlatMap flat) {
		return unidadeFederativaService.findUfBySgAndPais(flat.getString("sgUnidadeFederativa"),flat.getLong("pais.idPais"));
	}

	public TypedFlatMap findInfoUsuarioLogado() {
		TypedFlatMap retorno = new TypedFlatMap();
		
		Pais pais = SessionUtils.getPaisSessao();
		retorno.put("idPais",pais.getIdPais());
		retorno.put("nmPais",pais.getNmPais().getValue());
		
		Filial filial = SessionUtils.getFilialSessao();
		MoedaPais moedaPais = filialService.findMoedaPaisByIdFilial(filial.getIdFilial());
    	if (moedaPais != null) {
    		retorno.put("idMoeda",moedaPais.getMoeda().getIdMoeda());    		
    	}
		
		return retorno;
	}
	
	public List findLookupConcessionaria(TypedFlatMap flat) {
	    if (!StringUtils.isBlank(flat.getString("pessoa.nrIdentificacao"))) {
	    	List rs = concessionariaService.findLookupConcessionaria(flat.getString("pessoa.nrIdentificacao"));
	    	if (rs.size() == 1) {
	    		Map result = (Map)rs.get(0);
	    		if (result.get("pessoa") != null && 
	    			((Map)result.get("pessoa")).get("nrIdentificacao") != null &&
	    			((Map)result.get("pessoa")).get("tpIdentificacao") != null) {

	    			((Map)result.get("pessoa")).put("nrIdentificacaoFormatado",FormatUtils.formatIdentificacao(
	    					((String)((Map)((Map)result.get("pessoa")).get("tpIdentificacao")).get("value")),
	    					((String)((Map)result.get("pessoa")).get("nrIdentificacao"))
	    					));
	    		}
	    	}
	    	return rs;
	    }
		return null;
	}
	
	public List findLookupPais(TypedFlatMap flat) {
		return paisService.findByNomeUfMunicipio(flat.getString("nmPais"),flat.getLong("unidadeFederativas.idUnidadeFederativa"),
				flat.getLong("unidadeFederativas.municipios.idMunicipio"));
	}
	
	public List findLookupRodovia(TypedFlatMap flat) {
		return rodoviaService.findRodoviaBySgAndPais(flat.getString("sgRodovia"),flat.getLong("pais.idPais"));
	}
	
	public ConcessionariaService getConcessionariaService() {
		return concessionariaService;
	}

	public void setConcessionariaService(ConcessionariaService concessionariaService) {
		this.concessionariaService = concessionariaService;
	}

	public MoedaPaisService getMoedaPaisService() {
		return moedaPaisService;
	}

	public void setMoedaPaisService(MoedaPaisService moedaPaisService) {
		this.moedaPaisService = moedaPaisService;
	}

	public MunicipioService getMunicipioService() {
		return municipioService;
	}

	public void setMunicipioService(MunicipioService municipioService) {
		this.municipioService = municipioService;
	}

	public PaisService getPaisService() {
		return paisService;
	}

	public void setPaisService(PaisService paisService) {
		this.paisService = paisService;
	}

	public RodoviaService getRodoviaService() {
		return rodoviaService;
	}

	public void setRodoviaService(RodoviaService rodoviaService) {
		this.rodoviaService = rodoviaService;
	}

	public UnidadeFederativaService getUnidadeFederativaService() {
		return unidadeFederativaService;
	}

	public void setUnidadeFederativaService(
			UnidadeFederativaService unidadeFederativaService) {
		this.unidadeFederativaService = unidadeFederativaService;
	}

	public ParametroGeralService getParametroGeralService() {
		return parametroGeralService;
	}

	public void setParametroGeralService(ParametroGeralService parametroGeralService) {
		this.parametroGeralService = parametroGeralService;
	}
	public void setConfiguracoesFacade(ConfiguracoesFacade configuracoesFacade) {
		this.configuracoesFacade = configuracoesFacade;
	}

	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}
}
