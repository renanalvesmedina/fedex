package com.mercurio.lms.municipios.action;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.FilterResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.contratacaoveiculos.model.service.TipoMeioTransporteService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.RotaColetaEntrega;
import com.mercurio.lms.municipios.model.RotaTipoMeioTransporte;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.municipios.model.service.RotaColetaEntregaService;
import com.mercurio.lms.municipios.model.service.RotaTipoMeioTransporteService;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.municipios.manterTiposVeiculoRotaAction"
 */

public class ManterTiposVeiculoRotaAction extends CrudAction {
	private RotaColetaEntregaService rotaColetaEntregaService;
	private TipoMeioTransporteService tipoMeioTransporteService;
	private FilialService filialService;
	
	
	public void setRotaTipoMeioTransporteService(RotaTipoMeioTransporteService rotaTipoMeioTransporteService) {
		this.defaultService = rotaTipoMeioTransporteService;
	}
    public void removeById(java.lang.Long id) {
        ((RotaTipoMeioTransporteService)defaultService).removeById(id);
    }

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	((RotaTipoMeioTransporteService)defaultService).removeByIds(ids);
    }

    public RotaTipoMeioTransporte findById(java.lang.Long id) {
    	return ((RotaTipoMeioTransporteService)defaultService).findById(id);
    }
    
    public Serializable store(RotaTipoMeioTransporte bean) {
        return ((RotaTipoMeioTransporteService)defaultService).store(bean);
    }
    
    public Map storeMap(Map bean){
    	return ((RotaTipoMeioTransporteService)defaultService).storeMap(bean);
    }
    
    public TypedFlatMap findByIdDetalhamento(java.lang.Long id) { 
		 return ((RotaTipoMeioTransporteService)defaultService).findByIdDetalhamento(id);
	 }
    
    public ResultSetPage findPaginated(Map criteria) {
    	ResultSetPage rsp = super.findPaginated(criteria);
    	
    	FilterResultSetPage frsp = new FilterResultSetPage(rsp) {

			public Map filterItem(Object item) {
				RotaTipoMeioTransporte rotaTipoMeioTransporte = (RotaTipoMeioTransporte) item;
				TypedFlatMap row = new TypedFlatMap();
				
				row.put("idRotaTipoMeioTransporte", rotaTipoMeioTransporte.getIdRotaTipoMeioTransporte()); 
				
				RotaColetaEntrega rotaColetaEntrega = rotaTipoMeioTransporte.getRotaColetaEntrega();
				Filial filial = rotaColetaEntrega.getFilial();
				
				row.put("rotaColetaEntrega.filial.sgFilial", filial.getSgFilial());
				row.put("rotaColetaEntrega.filial.pessoa.nmFantasia", filial.getPessoa().getNmFantasia());
				row.put("rotaColetaEntrega.nrRota", rotaColetaEntrega.getNrRota());
				row.put("rotaColetaEntrega.dsRota", rotaColetaEntrega.getDsRota());
				row.put("tipoMeioTransporte.dsTipoMeioTransporte",  rotaTipoMeioTransporte.getTipoMeioTransporte().getDsTipoMeioTransporte());
				row.put("dtVigenciaInicial",rotaTipoMeioTransporte.getDtVigenciaInicial());  
				row.put("dtVigenciaFinal", rotaTipoMeioTransporte.getDtVigenciaFinal());
																		
				return row;
			}
			
		};
		
		return (ResultSetPage)frsp.doFilter();
    }
    
    
    public RotaColetaEntregaService getRotaColetaEntregaService() {
		return rotaColetaEntregaService;
	}
    
	public void setRotaColetaEntregaService(RotaColetaEntregaService rotaColetaEntregaService) {
		this.rotaColetaEntregaService = rotaColetaEntregaService;
	}
	
	public List findLookupRotaColetaEntrega(Map criteria){
		 return getRotaColetaEntregaService().findLookup(criteria);
	}
	
	public TipoMeioTransporteService getTipoMeioTransporteService() {
		return tipoMeioTransporteService;
	}
	public void setTipoMeioTransporteService(
			TipoMeioTransporteService tipoMeioTransporteService) {
		this.tipoMeioTransporteService = tipoMeioTransporteService;
	}
	
	 public List findTipoMeioTransporte(Map criteria) {
		 if (criteria == null)
			 criteria = new HashMap();
		 criteria.put("tpMeioTransporte","R");
		 return getTipoMeioTransporteService().findCombo(criteria);
	 }
	 
	public List findLookupFilial(Map criteria) {
		return filialService.findLookup(criteria);
	}
	public FilialService getFilialService() {
		return filialService;
	}
	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}


}
