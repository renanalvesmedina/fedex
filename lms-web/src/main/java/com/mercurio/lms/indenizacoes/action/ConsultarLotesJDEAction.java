package com.mercurio.lms.indenizacoes.action;

import java.util.Map;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.report.ReportExecutionManager;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.indenizacoes.model.service.LoteJDERimService;
import com.mercurio.lms.indenizacoes.report.EmitirRelatorioIndenizacoesService;

/**
 * Generated by: ADSM ActionGenerator
 * 
 * Não inserir documentação após ou remover a tag do XDoclet a seguir. O valor
 * do <code>id</code> informado abaixo deve ser utilizado para referenciar este
 * serviço.
 * 
 * @spring.bean id="lms.indenizacoes.consultarLotesJDEAction"
 */

public class ConsultarLotesJDEAction extends CrudAction {

	private EmitirRelatorioIndenizacoesService emitirRelatorioIndenizacoesService;
	private ReportExecutionManager reportExecutionManager;
	private LoteJDERimService loteJDERimService;
	
	public String execute(TypedFlatMap parameters) throws Exception {
		parameters.put("tpFormatoRelatorio", "xls");
		emitirRelatorioIndenizacoesService.setReportName("com/mercurio/lms/indenizacoes/report/emitirRelatorioIndenizacoesExcel.jasper");
		String generateReport = this.reportExecutionManager.generateReportLocator(this.emitirRelatorioIndenizacoesService, parameters);
		emitirRelatorioIndenizacoesService.setReportName("com/mercurio/lms/indenizacoes/report/emitirRelatorioIndenizacoes.jasper");
		return generateReport;
	}
	
	@Override
	public ResultSetPage findPaginated(Map criteria) {
		return loteJDERimService.findPaginated(criteria);
	}
	
	@Override
	public Integer getRowCount(Map criteria) {
		return loteJDERimService.getRowCount(criteria);
	}

	public EmitirRelatorioIndenizacoesService getEmitirRelatorioIndenizacoesService() {
		return emitirRelatorioIndenizacoesService;
	}

	public void setEmitirRelatorioIndenizacoesService(
			EmitirRelatorioIndenizacoesService emitirRelatorioIndenizacoesService) {
		this.emitirRelatorioIndenizacoesService = emitirRelatorioIndenizacoesService;
	}

	public ReportExecutionManager getReportExecutionManager() {
		return reportExecutionManager;
	}

	public void setReportExecutionManager(
			ReportExecutionManager reportExecutionManager) {
		this.reportExecutionManager = reportExecutionManager;
	}

	public LoteJDERimService getLoteJDERimService() {
		return loteJDERimService;
	}

	public void setLoteJDERimService(LoteJDERimService loteJDERimService) {
		this.loteJDERimService = loteJDERimService;
	}

}
