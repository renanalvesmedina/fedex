package com.mercurio.lms.recepcaodescarga.action;

import java.io.File;
import java.util.Map;

import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.recepcaodescarga.report.RelatorioDocumentosDivergenciaDescargaService;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.recepcaodescarga.descarregarVeiculoDivergenciaReportAction"
 */
public class DescarregarVeiculoDivergenciaReportAction extends ReportActionSupport{

	private RelatorioDocumentosDivergenciaDescargaService relatorioDocumentosDivergenciaDescargaService; 
	
	public File executeReport(Map parameters) throws Exception{
		this.reportServiceSupport = relatorioDocumentosDivergenciaDescargaService;
	
		return reportServiceSupport.executeReport(parameters); 
	}
	
	public void setRelatorioDocumentosDivergenciaDescargaService(
            RelatorioDocumentosDivergenciaDescargaService relatorioDocumentosDivergenciaDescargaService) {
    	this.relatorioDocumentosDivergenciaDescargaService = relatorioDocumentosDivergenciaDescargaService;
	}
	
	public TypedFlatMap getRowCountByTpRelatorio(TypedFlatMap criteria){
		Long idControleCarga = criteria.getLong("idControleCarga");
		String tpControleCarga = criteria.getString("tpControleCarga");
		Long idCarregamentoDescarga = criteria.getLong("idCarregamentoDescarga");
	
		TypedFlatMap result = new TypedFlatMap();
	
		result.put("totDocDescarregadoNaoConferido", relatorioDocumentosDivergenciaDescargaService.getRowCountByTpRelatorio(idControleCarga, "docsDescarregadosNaoConferidos", tpControleCarga, null));
		result.put("totDocNaoDescarregadoConferido", relatorioDocumentosDivergenciaDescargaService.getRowCountByTpRelatorio(idControleCarga, "docsNaoDescarregadosConferidos", tpControleCarga, null));
		result.put("totDocDescarregadoSemDoc", relatorioDocumentosDivergenciaDescargaService.getRowCountByTpRelatorio(idControleCarga, "docsDescarregadosSemDoc", tpControleCarga, null));
		result.put("totDocDescarregadoIncompleto", relatorioDocumentosDivergenciaDescargaService.getRowCountByTpRelatorio(idControleCarga, "docsDescarregadosIncompletos", tpControleCarga, null));
		result.put("totVolumeSobra", relatorioDocumentosDivergenciaDescargaService.getRowCountByTpRelatorio(idControleCarga, "volumeSobra", null, idCarregamentoDescarga));
		result.put("totVolumesColetadosNaoDescarregados", relatorioDocumentosDivergenciaDescargaService.getTotalVolumesNaoDescarregados(idControleCarga));

		return result;
	}




	}
