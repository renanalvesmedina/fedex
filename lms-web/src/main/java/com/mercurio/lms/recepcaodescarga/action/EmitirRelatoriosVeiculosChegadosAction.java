package com.mercurio.lms.recepcaodescarga.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.joda.time.DateTime;
import org.joda.time.YearMonthDay;

import com.mercurio.adsm.framework.BusinessException;
import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.recepcaodescarga.report.RelatorioVeiculosChegadosService;
import com.mercurio.lms.util.JTDateTimeUtils;
import com.mercurio.lms.util.session.SessionUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.recepcaodescarga.emitirRelatoriosVeiculosChegadosAction"
 */

public class EmitirRelatoriosVeiculosChegadosAction extends ReportActionSupport {

	FilialService filialService;
	
	@Override
	public java.io.File execute(TypedFlatMap parameters) throws Exception {
		verificaSelecoes(parameters);
		return super.execute(parameters);
	}

	public Map getOnLoadData() {
		DateTime dataHoraAtual = JTDateTimeUtils.getDataHoraAtual();
		YearMonthDay dataAtual = JTDateTimeUtils.getDataAtual();
		Map map = new HashMap();
		Filial filial = SessionUtils.getFilialSessao();
		map.put("idFilial", filial.getIdFilial());
		map.put("nmFilial", filial.getPessoa().getNmFantasia());
		map.put("sgFilial", filial.getSgFilial());
		map.put("hojeHoraZero", JTDateTimeUtils.yearMonthDayToDateTime(dataAtual));
		map.put("hoje", dataHoraAtual);
		
		return map;
	}
	
	private void verificaSelecoes(TypedFlatMap tfm) {
		if (Boolean.FALSE.equals(tfm.getBoolean("aguardandoDescarga")) &&
				Boolean.FALSE.equals(tfm.getBoolean("emDescarga")) &&
					Boolean.FALSE.equals(tfm.getBoolean("descarregados"))
				) {
			throw new BusinessException("LMS-03003");
		}
	}
	
	public List findLookupFilial(Map map) {
        List listFilialLookup = this.filialService.findLookup(map);
        List result = new ArrayList();
        if (listFilialLookup.size() == 1) {
            Filial filial = (Filial)listFilialLookup.get(0); 
            if (SessionUtils.isFilialAllowedByUsuario(filial)) {
                result.add(filial);
            } else {
                throw new BusinessException("LMS-00050");
            }
        }else {
            result = listFilialLookup; 
        }
        return result;

	}
	
	public void setDefaultService(RelatorioVeiculosChegadosService relatorioVeiculosChegadosService) {
		this.reportServiceSupport = relatorioVeiculosChegadosService;
	}
	
	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}
	
}
