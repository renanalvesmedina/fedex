package com.mercurio.lms.tributos.action;

import java.io.Serializable;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.model.service.ServicoAdicionalService;
import com.mercurio.lms.municipios.model.service.MunicipioService;
import com.mercurio.lms.tributos.model.IssMunicipioServico;
import com.mercurio.lms.tributos.model.ServicoMunicipio;
import com.mercurio.lms.tributos.model.service.IssMunicipioServicoService;
import com.mercurio.lms.tributos.model.service.ServicoMunicipioService;
import com.mercurio.lms.tributos.model.service.ServicoTributoService;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.tributos.manterServicosISSMunicipioAction"
 */

public class ManterServicosISSMunicipioAction extends CrudAction {
    
    private MunicipioService municipioService;
    private ServicoMunicipioService servicoMunicipioService;
    private ServicoAdicionalService servicoAdicionalService;
    private ServicoTributoService servicoTributoService;
    
    /**
     * Seta o service para o manter Serviços de ISS do município
     * @param issMunicipioServicoService Service do manter Serviços de ISS do município
     */    
    public void setIssMunicipioServico(IssMunicipioServicoService issMunicipioServicoService) {
        this.defaultService = issMunicipioServicoService;
    }
    
    public IssMunicipioServicoService getIssMunicipioServicoService(){
    	return (IssMunicipioServicoService)defaultService;
    }
    
    /**
     * 
     * @param criteria
     * @return
     */
	public ResultSetPage findPaginated(TypedFlatMap criteria) {
		return getIssMunicipioServicoService().findPaginated(criteria);
	}


	/**
     * Remove um Serviço de ISS do Município pelo id passado por parâmetro
     * @param id Identificador do Serviço de ISS do Município
     */
    public void removeById(java.lang.Long id) {
        ((IssMunicipioServicoService)defaultService).removeById(id);
    }

    /**
     * Método que remove todos os CodigoFiscalOperacao informados através dos
     * seus ids.
     * @param ids Lista de ids dos CodigoFiscalOperacao
     *
     */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
        ((IssMunicipioServicoService)defaultService).removeByIds(ids);
    }

    /**
     * Busca um Serviço de ISS do Município pelo id
     * @param id Identificador do Serviço de ISS do Município a ser detalhado
     * @return IssMunicipioServico encontrado na busca
     */
    public IssMunicipioServico findById(java.lang.Long id) {
        return ((IssMunicipioServicoService)defaultService).findById(id);
    }

    public MunicipioService getMunicipioService() {
        return municipioService;
    }

    public void setMunicipioService(MunicipioService municipioService) {
        this.municipioService = municipioService;
    }
    
    public ServicoMunicipioService getServicoMunicipioService() {
        return servicoMunicipioService;
    }

    public void setServicoMunicipioService(ServicoMunicipioService servicoMunicipioService) {
        this.servicoMunicipioService = servicoMunicipioService;
    }
    
    public ServicoAdicionalService getServicoAdicionalService() {
        return servicoAdicionalService;
    }

    public void setServicoAdicionalService(ServicoAdicionalService servicoAdicionalService) {
        this.servicoAdicionalService = servicoAdicionalService;
    }  
    
    public ServicoTributoService getServicoTributoService() {
        return servicoTributoService;
    }

    public void setServicoTributoService(ServicoTributoService servicoTributoService) {
        this.servicoTributoService = servicoTributoService;
    }
    
    public Serializable store(IssMunicipioServico bean){         
        return ((IssMunicipioServicoService)defaultService).store(bean);
    }
    
    /**
     * Busca uma lista de Municípios de acordo com os critérios passados por parâmetro
     * @param criterios Critérios para pesquisa
     * @return Lista contendo os municípios retornados da pesquisa
     */
    public List findMunicipiosLookup(Map criterios){
        return this.getMunicipioService().findLookup(criterios); 
    }
    
    /**
     * Busca os Serviços Municipais de acordo com os critérios passados por parâmetro
     * @param criterios Critérios de pesquisa
     * @return Lista contendo os serviços municipais retornados da pesquisa
     */
    public List findServicosMunicipioCombo(Map criterios){
        
       List retorno = this.getServicoMunicipioService().find(criterios);
       
       for (Iterator iter = retorno.iterator(); iter.hasNext();) {
           
           ServicoMunicipio sm = (ServicoMunicipio) iter.next();           
           sm.setNrServicoDsServicoMunicipio(sm.getNrServicoMunicipio() + " - " + sm.getDsServicoMunicipio());
        
       }       
       
       return retorno;
    }    
    
    /**
     * Busca os Serviços adicionais de acordo com os critérios
     * @param criterios Critérios de pesquisa
     * @return Lista contendo os Serviços Adicionais
     */
    public List findServicosAdicionaisListCombo(Map criterios){
        return this.getServicoAdicionalService().find(criterios);
    }
    
    /**
     * Busca os Serviços adicionais ativos e de acordo com os critérios
     * @param criterios Critérios de pesquisa
     * @return Lista contendo os Serviços Adicionais
     */
    public List findServicosAdicionaisCadCombo(Map criterios){
        return this.getServicoAdicionalService().findServicosAdicionaisAtivos(criterios);
    }
    
    /**
     * Busca os Serviços Tributos de acordo com os critérios
     * @param criterios Critérios de pesquisa
     * @return Lista contendo os Serviços Tributos
     */
    public List findServicosTributosCombo(Map criterios){
        return this.getServicoTributoService().find(criterios);
    }   
    
    /**
     * Busca os Serviços Tributos Ativos, ou seja, com a vigência ativa
     * @param criterios Critérios de pesquisa
     * @return Lista contendo os Serviços Tributos retornados da pesquisa
     */
    public List findServicosTributosAtivosCombo(TypedFlatMap criterios){
        return this.getServicoTributoService().findServicosTributosAtivos(criterios);
    }

}
