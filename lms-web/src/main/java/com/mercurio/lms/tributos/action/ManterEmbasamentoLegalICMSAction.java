package com.mercurio.lms.tributos.action;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.model.service.ParametroGeralService;
import com.mercurio.lms.municipios.model.service.PaisService;
import com.mercurio.lms.municipios.model.service.UnidadeFederativaService;
import com.mercurio.lms.tributos.model.EmbasamentoLegalIcms;
import com.mercurio.lms.tributos.model.service.EmbasamentoLegalIcmsService;
import com.mercurio.lms.tributos.model.service.TipoTributacaoIcmsService;
import com.mercurio.lms.util.LongUtils;


/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.tributos.manterEmbasamentoLegalICMSAction"
 */
public class ManterEmbasamentoLegalICMSAction extends CrudAction {
	
	private static final String CD_EMB_LEGAL_MASTERSAF = "CD_EMB_LEGAL_MASTERSAF";
	private TipoTributacaoIcmsService 	tipoTributacaoIcmsService;
	private UnidadeFederativaService  	unidadeFederativaService;
	private ParametroGeralService 		parametroGeralService;
	private PaisService 				paisService;
	

	public List findUnidadeFederativa(TypedFlatMap criteria){	
		criteria.put("pais.sgPais","BRA");
		return getUnidadeFederativaService().findByPais(criteria);		
	}
	
	public List findTipoTributacaoIcms(Map criteria){
		return getTipoTributacaoIcmsService().find(criteria);
	}	

	public ResultSetPage findPaginated(TypedFlatMap criteria) {
		return getEmbasamentoLegalIcmsService().findPaginated(criteria);
	}	
		
	public TypedFlatMap findById(java.lang.Long id) {
		
		EmbasamentoLegalIcms emb = getEmbasamentoLegalIcmsService().findById(id);
		TypedFlatMap map = new TypedFlatMap();
		
		map.put("idEmbasamento", emb.getIdEmbasamento());
		map.put("unidadeFederativaOrigem.idUnidadeFederativa", emb.getUnidadeFederativaOrigem().getIdUnidadeFederativa());
		map.put("tipoTributacaoIcms.idTipoTributacaoIcms", emb.getTipoTributacaoIcms().getIdTipoTributacaoIcms());
		map.put("dsEmbLegalCompleto", emb.getDsEmbLegalCompleto());
		map.put("dsEmbLegalResumido", emb.getDsEmbLegalResumido());
		map.put("cdEmbLegalMasterSaf", emb.getCdEmbLegalMasterSaf());
		map.put("obEmbLegalIcms", emb.getObEmbLegalIcms());
		
		return map;
	}	
			
	public TypedFlatMap store(EmbasamentoLegalIcms bean) {
		
		Long cdEmbasamento = null;
		if(StringUtils.isBlank(bean.getCdEmbLegalMasterSaf())){
			cdEmbasamento = getParametroGeralService().generateValorParametroSequencial(CD_EMB_LEGAL_MASTERSAF, false, 1);
		}else{
			cdEmbasamento = Long.valueOf(bean.getCdEmbLegalMasterSaf());
		}
		
		bean.setCdEmbLegalMasterSaf(String.valueOf(cdEmbasamento));
				
		Serializable idEmbasamento = getEmbasamentoLegalIcmsService().store(bean);
		bean.setIdEmbasamento(LongUtils.getLong(idEmbasamento));
		
		TypedFlatMap map = new TypedFlatMap();
		map.put("cdEmbasamento", bean.getCdEmbLegalMasterSaf());
		map.put("idEmbasamento", bean.getIdEmbasamento());		
		
		return map;	
	}
	
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {										
		getEmbasamentoLegalIcmsService().removeByIds(ids);
    }	
	
    public void removeById(java.lang.Long id) {
    	getEmbasamentoLegalIcmsService().removeById(id);
    }	
	
	public TypedFlatMap findParameterSizeEmb(TypedFlatMap param){
		
		TypedFlatMap map  = new TypedFlatMap();
		String  paramSize = getEmbasamentoLegalIcmsService().findParameterSizeEmb(); 
		map.put("paramSize", paramSize);
		
		return map; 
	}
	
	public List findEmbasamentoLookup(TypedFlatMap criteria){
		return getEmbasamentoLegalIcmsService().findEmbasamentoLookup(criteria);		
	}
	
	public void setUnidadeFederativaService(
			UnidadeFederativaService unidadeFederativaService) {
		this.unidadeFederativaService = unidadeFederativaService;
	}

	public UnidadeFederativaService getUnidadeFederativaService() {
		return unidadeFederativaService;
	}

	public PaisService getPaisService() {
		return paisService;
	}

	public void setPaisService(PaisService paisService) {
		this.paisService = paisService;
	}

	public TipoTributacaoIcmsService getTipoTributacaoIcmsService() {
		return tipoTributacaoIcmsService;
	}

	public void setTipoTributacaoIcmsService(
			TipoTributacaoIcmsService tipoTributacaoIcmsService) {
		this.tipoTributacaoIcmsService = tipoTributacaoIcmsService;
	}
	
	
	public void setEmbasamentoLegalIcmsService(EmbasamentoLegalIcmsService embasamentoLegalIcmsService) {
		this.defaultService = embasamentoLegalIcmsService;
	}	
	
    public EmbasamentoLegalIcmsService getEmbasamentoLegalIcmsService() {
		return (EmbasamentoLegalIcmsService)this.defaultService;
	}

	public ParametroGeralService getParametroGeralService() {
		return parametroGeralService;
	}

	public void setParametroGeralService(ParametroGeralService parametroGeralService) {
		this.parametroGeralService = parametroGeralService;
	}		
	

}
