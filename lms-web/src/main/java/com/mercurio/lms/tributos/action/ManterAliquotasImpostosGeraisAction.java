package com.mercurio.lms.tributos.action;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.DomainValue;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.model.Pessoa;
import com.mercurio.lms.configuracoes.model.ServicoAdicional;
import com.mercurio.lms.configuracoes.model.service.PessoaService;
import com.mercurio.lms.configuracoes.model.service.ServicoAdicionalService;
import com.mercurio.lms.municipios.model.Municipio;
import com.mercurio.lms.municipios.model.service.MunicipioService;
import com.mercurio.lms.tributos.model.AliquotaContribuicaoServ;
import com.mercurio.lms.tributos.model.AliquotaContribuicaoServMunic;
import com.mercurio.lms.tributos.model.ServicoTributo;
import com.mercurio.lms.tributos.model.service.AliquotaContribuicaoServService;
import com.mercurio.lms.tributos.model.service.ServicoTributoService;
import com.mercurio.lms.vendas.model.service.ClienteService;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.tributos.manterAliquotasImpostosGeraisAction"
 */

public class ManterAliquotasImpostosGeraisAction extends CrudAction {
	private ServicoAdicionalService servicoAdicionalService;
	private ServicoTributoService servicoTributoService;
	private ClienteService clienteService;
	private PessoaService pessoaService;
	private MunicipioService municipioService;

	/** Realiza a busca da pessoa para a lookup
	 * 
	 * @author Diego Umpierre
	 * 23/06/2006
	 * 
	 * @param criteria
	 * @return
	 */
	public List findLookupPessoa(TypedFlatMap criteria){
		return getPessoaService().findLookup(criteria);
	}

	/**
     * Utiliza a mesma query da listagem para contar quantos registros serão exibidos
     * @param tfm Critérios de pesquisa
     * @return Inteiro que representa o número de registros a serem exibidos
     */
	public Integer getRowCount(TypedFlatMap tfm) {
		return ((AliquotaContribuicaoServService)this.defaultService).getRowCount(tfm);
	}
	
	/**
     * Busca as aliquotas contribuicao Servico de acordo com os critérios de pesquisa
     */
	public ResultSetPage findPaginated(TypedFlatMap tfm) {
		return ((AliquotaContribuicaoServService)this.defaultService).findPaginated(tfm);
	}

	/**
	 * 
	 * @param criteria
	 * @return
	 */
	public List findLookupCliente(Map criteria){
		return getClienteService().findLookup(criteria);
	}

    /**
     * Busca uma lista de Municípios de acordo com os critérios passados por parâmetro
     * @param criterios Critérios para pesquisa
     * @return Lista contendo os municípios retornados da pesquisa
     */
    public List findMunicipiosLookup(Map criterios){
        return this.getMunicipioService().findLookup(criterios); 
    }
	
	/**
	 * 
	 * @param criteria
	 * @return
	 */
	public List findServicoAdicional(Map criteria){
		return getServicoAdicionalService().findCombo(null);
	}
	
	/**
	 * 
	 * @param criteria
	 * @return
	 */
	public List findServicoAdicionalVigente(Map criteria){
		return getServicoAdicionalService().findServicosAdicionaisAtivos(criteria);
	}	
	
	/**
	 * 
	 * @param criteria
	 * @return
	 */
	public List findServicoTributo(Map criteria){
		return getServicoTributoService().findCombo(null);
	}
	
	/**
	 * 
	 * @param criteria
	 * @return
	 */
	public List findServicoTributoVigente(TypedFlatMap tfm){
		return getServicoTributoService().findServicosTributosAtivos(tfm);
	}	
	
	public void setService(AliquotaContribuicaoServService serviceService) {
		this.defaultService = serviceService;
	}
	
	public TypedFlatMap store(TypedFlatMap parameters) {
		
		AliquotaContribuicaoServ aliquotaContribuicaoServ = new AliquotaContribuicaoServ();
		aliquotaContribuicaoServ.setIdAliquotaContribuico(parameters.getLong("idAliquotaContribuico"));
		aliquotaContribuicaoServ.setVlPiso(parameters.getBigDecimal("vlPiso"));
		aliquotaContribuicaoServ.setPcAliquota(parameters.getBigDecimal("pcAliquota"));
		aliquotaContribuicaoServ.setPcBaseCalcReduzida(parameters.getBigDecimal("pcBaseCalcReduzida"));
		aliquotaContribuicaoServ.setDtVigenciaInicial(parameters.getYearMonthDay("dtVigenciaInicial"));
		aliquotaContribuicaoServ.setDtVigenciaFinal(parameters.getYearMonthDay("dtVigenciaFinal"));

		if(parameters.getString("obAliquotaContribuicaoServ") != null && !"".equals(parameters.getString("obAliquotaContribuicaoServ"))){
			aliquotaContribuicaoServ.setObAliquotaContribuicaoServ(parameters.getString("obAliquotaContribuicaoServ"));
		}
		
		if(parameters.getString("tpImposto") != null && !"".equals(parameters.getString("tpImposto"))){
			aliquotaContribuicaoServ.setTpImposto(new DomainValue(parameters.getString("tpImposto")));
		}
		
		if(parameters.getLong("pessoa.idPessoa") != null){
			Pessoa pessoa = new Pessoa();
			pessoa.setIdPessoa(parameters.getLong("pessoa.idPessoa"));
			aliquotaContribuicaoServ.setPessoa(pessoa);
		}
		
		if(parameters.getLong("servicoTributo.idServicoTributo") != null){
			ServicoTributo servicoTributo = new ServicoTributo();
			servicoTributo.setIdServicoTributo(parameters.getLong("servicoTributo.idServicoTributo"));
			aliquotaContribuicaoServ.setServicoTributo(servicoTributo);
		}
		
		if(parameters.getLong("servicoAdicional.idServicoAdicional") != null){
			ServicoAdicional servicoAdicional = new ServicoAdicional();
			servicoAdicional.setIdServicoAdicional(parameters.getLong("servicoAdicional.idServicoAdicional"));
			aliquotaContribuicaoServ.setServicoAdicional(servicoAdicional);
		}
		
		aliquotaContribuicaoServ.setAliquotasContribuicaoServMunic(getAliquotasContribuicaoServMunic(parameters, aliquotaContribuicaoServ));
		
		((AliquotaContribuicaoServService)defaultService).store(aliquotaContribuicaoServ);
		
		return findById(aliquotaContribuicaoServ.getIdAliquotaContribuico());
	}

	/**
	 * 
	 * @param parameters
	 * @param aliquotaContribuicaoServ
	 * @return
	 */
	private List<AliquotaContribuicaoServMunic> getAliquotasContribuicaoServMunic(TypedFlatMap parameters, AliquotaContribuicaoServ aliquotaContribuicaoServ) {
		List aliquotasContribuicaoServMunic = parameters.getList("aliquotasContribuicaoServMunic");
		
		if(aliquotasContribuicaoServMunic == null || aliquotasContribuicaoServMunic.isEmpty()){
			return null;
    }

		List<AliquotaContribuicaoServMunic> result = new ArrayList<AliquotaContribuicaoServMunic>();
	
		for (Iterator i = aliquotasContribuicaoServMunic.iterator(); i.hasNext();) {
			AliquotaContribuicaoServMunic aliquotaContribuicaoServMunic = new AliquotaContribuicaoServMunic();
			aliquotaContribuicaoServMunic.setAliquotaContribuicaoServ(aliquotaContribuicaoServ);
			
			TypedFlatMap flat = (TypedFlatMap) i.next();
			Municipio municipio = new Municipio();
			municipio.setIdMunicipio(flat.getLong("idMunicipio"));
			aliquotaContribuicaoServMunic.setMunicipio(municipio);
			
			result.add(aliquotaContribuicaoServMunic);
		}

		return result;
	}
	
	
	public void removeById(java.lang.Long id) {
        ((AliquotaContribuicaoServService)defaultService).removeById(id);
    }

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	((AliquotaContribuicaoServService)defaultService).removeByIds(ids);
    }

	@SuppressWarnings("unchecked")
	private TypedFlatMap convertToMap(AliquotaContribuicaoServ aliquotaContribuicaoServ){
		TypedFlatMap retorno = new TypedFlatMap();
		
		retorno.put("idAliquotaContribuico", aliquotaContribuicaoServ.getIdAliquotaContribuico());
		retorno.put("vlPiso", aliquotaContribuicaoServ.getVlPiso());
		retorno.put("pcAliquota", aliquotaContribuicaoServ.getPcAliquota());
		retorno.put("pcBaseCalcReduzida", aliquotaContribuicaoServ.getPcBaseCalcReduzida());
		retorno.put("dtVigenciaInicial", aliquotaContribuicaoServ.getDtVigenciaInicial());
		retorno.put("dtVigenciaFinal", aliquotaContribuicaoServ.getDtVigenciaFinal());
		retorno.put("obAliquotaContribuicaoServ", aliquotaContribuicaoServ.getObAliquotaContribuicaoServ());
		retorno.put("tpImposto", aliquotaContribuicaoServ.getTpImposto().getValue());

		if (aliquotaContribuicaoServ.getPessoa() != null) {
			retorno.put("pessoa.idPessoa", aliquotaContribuicaoServ.getPessoa().getIdPessoa());
			retorno.put("pessoa.nmPessoa", aliquotaContribuicaoServ.getPessoa().getNmPessoa());
			retorno.put("pessoa.nrIdentificacao", aliquotaContribuicaoServ.getPessoa().getNrIdentificacao());
			retorno.put("pessoa.nrIdentificacaoFormatado", aliquotaContribuicaoServ.getPessoa().getNrIdentificacaoFormatado());
    }

		if (aliquotaContribuicaoServ.getServicoTributo() != null) {
			retorno.put("servicoTributo.idServicoTributo", aliquotaContribuicaoServ.getServicoTributo().getIdServicoTributo());
			retorno.put("servicoTributo.dsServicoTributo", aliquotaContribuicaoServ.getServicoTributo().getDsServicoTributo());
		}

		if (aliquotaContribuicaoServ.getServicoAdicional() != null) {
			retorno.put("servicoAdicional.idServicoAdicional", aliquotaContribuicaoServ.getServicoAdicional().getIdServicoAdicional());
			retorno.put("servicoAdicional.dsServicoAdicional", aliquotaContribuicaoServ.getServicoAdicional().getDsServicoAdicional());
		}

		if (aliquotaContribuicaoServ.getAliquotasContribuicaoServMunic() != null) {
			List<TypedFlatMap> aliquotasMunicipio = new ArrayList<TypedFlatMap>();
			
			for (Iterator<AliquotaContribuicaoServMunic> iterator = aliquotaContribuicaoServ.getAliquotasContribuicaoServMunic().iterator(); iterator.hasNext();) {
				AliquotaContribuicaoServMunic aliquotaContribuicaoServMunic = iterator.next();

				TypedFlatMap aliquotasMunicipioMap = new TypedFlatMap();
				aliquotasMunicipioMap.put("idAliquotaContribuicaoServMunic", aliquotaContribuicaoServMunic.getIdAliquotaContribuicaoServMunic());
				aliquotasMunicipioMap.put("idMunicipio", aliquotaContribuicaoServMunic.getMunicipio().getIdMunicipio());
				aliquotasMunicipioMap.put("nmMunicipio", aliquotaContribuicaoServMunic.getMunicipio().getNmMunicipio());
				aliquotasMunicipio.add(aliquotasMunicipioMap);
			}
			retorno.put("aliquotasContribuicaoServMunic", aliquotasMunicipio);
		}
		
		return retorno;
	}
	
	public TypedFlatMap findById(java.lang.Long id) {
		AliquotaContribuicaoServ aliquotaContribuicaoServ = ((AliquotaContribuicaoServService) defaultService).findById(id);
		return convertToMap(aliquotaContribuicaoServ);
	}

	public ServicoAdicionalService getServicoAdicionalService() {
		return servicoAdicionalService;
	}

	public ServicoTributoService getServicoTributoService() {
		return servicoTributoService;
	}

	public void setServicoAdicionalService(
			ServicoAdicionalService servicoAdicionalService) {
		this.servicoAdicionalService = servicoAdicionalService;
	}

	public void setServicoTributoService(ServicoTributoService servicoTributoService) {
		this.servicoTributoService = servicoTributoService;
	}


	public ClienteService getClienteService() {
		return clienteService;
	}


	public void setClienteService(ClienteService clienteService) {
		this.clienteService = clienteService;
	}

	
	public PessoaService getPessoaService() {
		return pessoaService;
	}



	public void setPessoaService(PessoaService pessoaService) {
		this.pessoaService = pessoaService;
	}

	public MunicipioService getMunicipioService() {
		return municipioService;
}

	public void setMunicipioService(MunicipioService municipioService) {
		this.municipioService = municipioService;
	}
}
