package com.mercurio.lms.tributos.action;

import java.io.Serializable;
import java.util.List;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.lms.tributos.model.ParametroSubstituicaoTrib;
import com.mercurio.lms.tributos.model.service.ParametroSubstituicaoTribService;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.tributos.manterParametrosSubstituicaoTributariaAction"
 */
public class ManterParametrosSubstituicaoTributariaAction extends CrudAction {

 	public void setParametroSubstituicaoTribService(ParametroSubstituicaoTribService parametroSubstituicaoTribService){
		this.defaultService = parametroSubstituicaoTribService;
	}

    /**
	 * Insere, caso o id seja <code>null</code> ou atualiza uma entidade, caso contrário.
	 * @param bean entidade a ser armazenada.
	 * @return entidade que foi armazenada.
	 */
    public Serializable store(ParametroSubstituicaoTrib bean) {
        return ((ParametroSubstituicaoTribService)this.defaultService).store(bean);
    }
    
    /**
     * Remove uma ParametroSubstituicaoTrib pelo id passado mpor parametro
     * @param id
     */
    public void removeById(Long id) {
		((ParametroSubstituicaoTribService)this.defaultService).removeById(id);
	}
	
	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
	public void removeByIds(List ids) {
		((ParametroSubstituicaoTribService)this.defaultService).removeByIds(ids);
	}
    
	/**
	 * Busca uma ParametroSubstituicaoTrib de acordo com o id passado por parametro
	 * @param id
	 * @return
	 */
	public Serializable findById(Long id) {
		return ((ParametroSubstituicaoTribService)this.defaultService).findById(id);
	}
		
}
