package com.mercurio.lms.vol.action;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.ConfiguracoesFacade;
import com.mercurio.lms.configuracoes.model.Pessoa;
import com.mercurio.lms.util.FormatUtils;
import com.mercurio.lms.vol.model.VolOperadorasTelefonia;
import com.mercurio.lms.vol.model.service.VolOperadorasTelefoniaService;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;
/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.vol.manterOperadorasAction"
 * 					
 */

public class ManterOperadorasAction extends CrudAction {
	private ConfiguracoesFacade configuracoesFacade;
	public void setService(VolOperadorasTelefoniaService service){
		this.defaultService = service;
	}
	private VolOperadorasTelefoniaService getVolOperadorasTelefoniaService(){
		return (VolOperadorasTelefoniaService)this.defaultService;
	}
	public Serializable store(TypedFlatMap tela) {
		VolOperadorasTelefonia bean = parse(tela);
		return getVolOperadorasTelefoniaService().store(bean);
	}
	/**
	 * Converte um TypedFlatMap para um VolOperadorasTelefonia 
	 * @param TypedFlatMap
	 * @return VolOperadorasTelefonia
	 */
	private VolOperadorasTelefonia parse (TypedFlatMap tela){
		//DADOS DA OPERADORA
		VolOperadorasTelefonia bean = new VolOperadorasTelefonia();
		bean.setIdOperadora(tela.getLong("idOperadora"));
		bean.setDsUrlSms(tela.getString("dsUrlSms"));
		bean.setTpSituacao(tela.getDomainValue("tpSituacao"));
		bean.setDsUrlSms(tela.getString("dsUrlSms"));
		bean.setDsCorpoSms(tela.getString("dsCorpoSms"));
		bean.setDsUsuario(tela.getString("dsUsuario"));
		bean.setDsSenha(tela.getString("dsSenha"));
		//DADOS DA PESSOA
		Pessoa pessoa = new Pessoa();
		pessoa.setTpIdentificacao(tela.getDomainValue("pessoa.tpIdentificacao"));
		pessoa.setIdPessoa(tela.getLong("pessoa.idPessoa"));
		pessoa.setNrIdentificacao(tela.getString("pessoa.nrIdentificacao"));
		pessoa.setTpPessoa(tela.getDomainValue("pessoa.tpPessoa"));
		pessoa.setNmPessoa(tela.getString("pessoa.nmPessoa"));
		pessoa.setDsEmail(tela.getString("pessoa.dsEmail"));
		
		//FAZ AS ASSOCIAÇÕES
		bean.setPessoa(pessoa);
		return bean;
	}
	public VolOperadorasTelefonia findById(java.lang.Long id) {		
		VolOperadorasTelefonia bean = getVolOperadorasTelefoniaService().findById(id);
		return bean;
	}

	public void removeById(Long id) {
		getVolOperadorasTelefoniaService().removeById(id);
	}
	
	public ResultSetPage findPaginatedOperadoras(TypedFlatMap criteria) {
		ResultSetPage rsp = getVolOperadorasTelefoniaService().findPaginatedOperadoras(criteria);
        List tela = com.mercurio.lms.util.AliasToNestedMapResultTransformer
        	.getInstance().transformListResult(rsp.getList());
        
        for (int i = 0; i < tela.size(); i++){
        	Map linha = ((Map) tela.get(i));
        	Map pessoa = (Map)linha.get("pessoa");        	
        	Map tpIdentificacao = (Map)pessoa.get("tpIdentificacao");
        	String tpIdentificacaoValue = (String)tpIdentificacao.get("value"); 
        	String nrIdentificacao =(String)pessoa.get("nrIdentificacao"); 
        	
        	pessoa.put("nrIdentificacao",
        			FormatUtils.formatIdentificacao(
        					tpIdentificacaoValue, 
        					nrIdentificacao
        			)
        	);        	

        }
        rsp.getList().clear();
        rsp.setList(tela);
        return rsp;
	}
	public Integer getRowCountOperadoras(TypedFlatMap criteria){
		return getVolOperadorasTelefoniaService().getRowCountOperadoras(criteria);
	}
	public List findPessoa(TypedFlatMap map){
    	List lstRetorno = new ArrayList();
    	Pessoa pessoa = configuracoesFacade.getPessoa(map.getString("nrIdentificacao"), map.getString("tpIdentificacao"));
    	    	
    	TypedFlatMap mapRetorno = new TypedFlatMap();
    	
    	if (pessoa != null) {   		
    		mapRetorno.put("idPessoa", pessoa.getIdPessoa());
    		mapRetorno.put("nmPessoa", pessoa.getNmPessoa());
    		mapRetorno.put("nrIdentificacao", pessoa.getNrIdentificacaoFormatado());
    		mapRetorno.put("tpIdentificacao", pessoa.getTpIdentificacao());
    		mapRetorno.put("tpPessoa", pessoa.getTpPessoa());
    		mapRetorno.put("dsEmail", pessoa.getDsEmail());
    		lstRetorno.add(mapRetorno);
    	}    	
    	return lstRetorno;
    }
    
	public void setConfiguracoesFacade(ConfiguracoesFacade configuracoesFacade) {
		this.configuracoesFacade = configuracoesFacade;
	}
	/**
	*
	*/
	@ParametrizedAttribute(type = java.lang.Long.class)
	public void removeByIds(List ids) {
		getVolOperadorasTelefoniaService().removeByIds(ids);
	}
}
