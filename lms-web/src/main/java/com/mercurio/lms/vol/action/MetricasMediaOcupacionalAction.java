package com.mercurio.lms.vol.action;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.util.JTDateTimeUtils;
import com.mercurio.lms.util.session.SessionUtils;
import com.mercurio.lms.vol.report.MetricasMediaOcupacionalService;


/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.vol.metricasMediaOcupacionalAction"
 * 					
 */

public class MetricasMediaOcupacionalAction extends ReportActionSupport {
	
	private MetricasMediaOcupacionalService metricasMediaOcupacionalService;
	private FilialService filialService;
	
	public MetricasMediaOcupacionalService getMetricasMediaOcupacionalService() {
		return metricasMediaOcupacionalService;
	}

	public void setMetricasMediaOcupacionalService(
			MetricasMediaOcupacionalService metricasMediaOcupacionalService) {
		this.metricasMediaOcupacionalService = metricasMediaOcupacionalService;
	}

	/**
	 * Executa o método <code>execute</code> da instancia atribuida via getter . 
	 * 
	 * @param parameters
	 * @return
	 * @throws Exception
	 */
	@Override
	public java.io.File execute(TypedFlatMap parameters) throws Exception {
		reportServiceSupport = metricasMediaOcupacionalService; 						
		return super.execute(parameters);
	}
	
	public List findLookupFilialByUsuarioLogado(TypedFlatMap map) {
		List listFilial = this.filialService.findLookupByUsuarioLogado(map);
		
		if ( listFilial.isEmpty() ) {
			return listFilial;
		}
		
		List resultList = new ArrayList();
		
		Iterator iterator = listFilial.iterator();
		Map filial = (Map)iterator.next();
		TypedFlatMap typedFlatMap = new TypedFlatMap();
		typedFlatMap.put("idFilial", filial.get("idFilial") );
		typedFlatMap.put("pessoa.nmFantasia", filial.get("pessoa.nmFantasia") );
		typedFlatMap.put("sgFilial", filial.get("sgFilial") );
		resultList.add(typedFlatMap);
		
		return resultList;
	}
	
	                    
	public TypedFlatMap findDadosDefault(){
		
		Filial bean = SessionUtils.getFilialSessao();
		TypedFlatMap result = new TypedFlatMap();
		
		result.put("filial.idFilial",bean.getIdFilial());
		result.put("filial.sgFilial",bean.getSgFilial());
		result.put("filial.pessoa.nmFantasia",bean.getPessoa().getNmFantasia());
		result.put("dataAtual", JTDateTimeUtils.getDataAtual());
		result.put("dataPrimeiroDiaMes", JTDateTimeUtils.getFirstDayOfYearMonthDay(JTDateTimeUtils.getDataAtual()));
		return result;
	}

	public FilialService getFilialService() {
		return filialService;
	}

	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}




	
}
