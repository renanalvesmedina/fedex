package com.mercurio.lms.vol.action;



import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.BusinessException;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.DomainValue;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.model.service.DomainValueService;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.util.JTDateTimeUtils;
import com.mercurio.lms.util.session.SessionUtils;
import com.mercurio.lms.vol.model.VolRecusas;
import com.mercurio.lms.vol.model.service.VolEmailsRecusaService;
import com.mercurio.lms.vol.model.service.VolRecusaTratativasService;
import com.mercurio.lms.vol.model.service.VolRecusasService;


/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.vol.recusaTratativasAction"
 * 					
 */

public class RecusaTratativasAction extends CrudAction {
	private VolRecusaTratativasService volRecusaTratativasService;
	private VolRecusasService volRecusasService;
	private VolEmailsRecusaService volEmailsRecusaService;
	private DomainValueService domainValueService;
	
	/**
	 * retorna uma list com os contatos do cliente para popular a combobox da tela de tratativas  
	 * @param criteria
	 * @return list com os contatos
	 */
	public List findContato(TypedFlatMap criteria) {
		List result = getVolRecusaTratativasService().findContato(criteria);
		List listRetorno = new ArrayList();
		
		for(Iterator it = result.iterator(); it.hasNext();){
			TypedFlatMap mapContato = new TypedFlatMap();
			
			Map linha = (Map)it.next();
			
			mapContato.put("idContato", linha.get("idEmailRecusa"));
			mapContato.put("nmContato", linha.get("nmContato"));
			
			listRetorno.add(mapContato);
		}
	
		return listRetorno;
		
	}
	
	public List findComboAcao(){
		List listRetorno = new ArrayList();
		List statusRecusa = domainValueService.findDomainValues("DM_STATUS_RECUSA");
		
		for(Iterator it = statusRecusa.iterator(); it.hasNext();){		
			DomainValue domainValue = (DomainValue)it.next();
			if((domainValue.getValue().equalsIgnoreCase("D")) ||(domainValue.getValue().equalsIgnoreCase("R"))){
				TypedFlatMap mapAcao = new TypedFlatMap();
				mapAcao.put("valueAcao", domainValue.getValue());				
				mapAcao.put("dsAcao", domainValue.getDescription());
				listRetorno.add(mapAcao);
			}
		}
		return listRetorno;
	}
	
	/**
	 * atualiza VolRecusa com os dados da tratativa Mercúrio ou resolução Mercúrio
	 * @param tela
	 */
	public void store(TypedFlatMap tela){
		VolRecusas volRecusas = null;
		volRecusas = getVolRecusasService().findById(tela.getLong("idRecusa"));
		
		//verifica se é uma tratativa ou um resolução
		if(tela.getString("status").equalsIgnoreCase("C")){
			volRecusas.setUsuarioByIdUsuario(SessionUtils.getUsuarioLogado());
			volRecusas.setDhTratativa(JTDateTimeUtils.getDataHoraAtual());
			volRecusas.setTpRecusa(domainValueService.findDomainValueByValue("DM_STATUS_RECUSA", tela.getString("acao")));
			volRecusas.setObTratativa(tela.getString("observacoes"));
			//verifica se os campos contatoDestinatário e emailContato estão preenchidos
			if((tela.getString("contatoDestinatario").equalsIgnoreCase("")) &&
					(tela.getString("emailContato").equalsIgnoreCase(""))){
				throw new BusinessException("LMS-41024");
			}
			
			volRecusas.setContato(tela.getString("contatoDestinatario"));
			
			if(!tela.getString("emailContato").equalsIgnoreCase("")){
				volRecusas.setVolEmailsRecusa(getVolEmailsRecusaService().findById(tela.getLong("emailContato")));
			}
			
		}else{
			volRecusas.setUsuarioByIdResolucao(SessionUtils.getUsuarioLogado());
			volRecusas.setDhResolucao(JTDateTimeUtils.getDataHoraAtual());
			volRecusas.setObResolucao(tela.getString("observacoes"));
		}
		
		getVolRecusasService().store(volRecusas);	
		
	}

	public ResultSetPage findPaginated(TypedFlatMap criteria) {			
		return null;
	}

	public Integer getRowCount(TypedFlatMap criteria) {
		return null;
	}
	
	public TypedFlatMap findById(java.lang.Long id) {
		return null;
	}

	public VolRecusaTratativasService getVolRecusaTratativasService() {
		return volRecusaTratativasService;
	}

	public void setVolRecusaTratativasService(
			VolRecusaTratativasService volRecusaTratativasService) {
		this.volRecusaTratativasService = volRecusaTratativasService;
	}


	public VolRecusasService getVolRecusasService() {
		return volRecusasService;
	}


	public void setVolRecusasService(VolRecusasService volRecusasService) {
		this.volRecusasService = volRecusasService;
	}


	public DomainValueService getDomainValueService() {
		return domainValueService;
	}


	public void setDomainValueService(DomainValueService domainValueService) {
		this.domainValueService = domainValueService;
	}


	public VolEmailsRecusaService getVolEmailsRecusaService() {
		return volEmailsRecusaService;
	}


	public void setVolEmailsRecusaService(
			VolEmailsRecusaService volEmailsRecusaService) {
		this.volEmailsRecusaService = volEmailsRecusaService;
	}

				
	
}
