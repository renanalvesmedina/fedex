package com.mercurio.lms.vol.action;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.DomainValue;
import com.mercurio.adsm.framework.model.ResultSetPage; 
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.contratacaoveiculos.model.MeioTransporte;
import com.mercurio.lms.contratacaoveiculos.model.service.MeioTransporteService;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.util.session.SessionUtils;
import com.mercurio.lms.vol.model.VolEquipamentos;
import com.mercurio.lms.vol.model.VolModeloseqps;
import com.mercurio.lms.vol.model.VolOperadorasTelefonia;
import com.mercurio.lms.vol.model.VolTiposUso;
import com.mercurio.lms.vol.model.service.VolEquipamentosService;
import com.mercurio.lms.vol.model.service.VolModeloseqpsService;
import com.mercurio.lms.vol.model.service.VolOperadorasTelefoniaService;
import com.mercurio.lms.vol.model.service.VolTiposUsoService;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.vol.manterEquipamentosAction"
 */

public class ManterEquipamentosAction extends CrudAction {
	private VolOperadorasTelefoniaService volOperadorasTelefoniaService;
	private VolTiposUsoService volTiposUsoService;
	private VolModeloseqpsService volModeloseqpsService;
	private FilialService filialService;
	private MeioTransporteService meioTransporteService;
	public void removeById(Long id) {
		getVolEquipamentosService().removeById(id);
	}
	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
	public void removeByIds(List ids) {
		getVolEquipamentosService().removeByIds(ids);
	}
	public TypedFlatMap findDataSession() {
		Filial bean = SessionUtils.getFilialSessao();
		TypedFlatMap result = new TypedFlatMap();
		
		result.put("filial.idFilial",bean.getIdFilial());
		result.put("filial.sgFilial",bean.getSgFilial());
		result.put("filial.pessoa.nmFantasia",bean.getPessoa().getNmFantasia());
		
		return result;
	}
	public void setVolEquipamentosService(VolEquipamentosService volEquipamentosService){
		this.defaultService = volEquipamentosService;
	}
	private VolEquipamentosService getVolEquipamentosService(){
		return (VolEquipamentosService)this.defaultService;
	}
	public Serializable store(TypedFlatMap tela) {
		VolEquipamentos bean = parse(tela);
		return getVolEquipamentosService().store(bean);
	}
	private VolEquipamentos parse (TypedFlatMap tela){
		VolEquipamentos equi = new VolEquipamentos();
		equi.setIdEquipamento(tela.getLong("idEquipamento"));
		equi.setDsNumero(tela.getString("dsNumero"));
		equi.setDsIccid(tela.getString("dsIccid"));
		equi.setDsImei(tela.getString("dsImei"));
		equi.setNmPin(tela.getShort("nmPin"));
		equi.setNmPin2(tela.getShort("nmPin2"));
		equi.setBlHabilitado(tela.getBoolean("blHabilitado"));
		
		equi.setTpTarifa(tela.getDomainValue("tpTarifa"));
		equi.setObObservacao(tela.getString("obObservacao"));
		
		//filial
		Filial filial = new Filial();
		filial.setIdFilial(tela.getLong("filial.idFilial"));
		equi.setFilial(filial);
		
		//frota
		if (tela.getLong("meioTransporte.idMeioTransporte")!=null){
			MeioTransporte meioTransporte = new MeioTransporte();
			meioTransporte.setIdMeioTransporte(tela.getLong("meioTransporte.idMeioTransporte"));
			equi.setMeioTransporte(meioTransporte);
		}
		
		//modelo
		VolModeloseqps volModeloseqps = new VolModeloseqps();
		volModeloseqps.setIdModeloeqp(tela.getLong("volModeloseqp.idModeloeqp"));
		equi.setVolModeloseqp(volModeloseqps);
		
		//operadora
		VolOperadorasTelefonia volOperadorasTelefonia = new VolOperadorasTelefonia();
		volOperadorasTelefonia.setIdOperadora(tela.getLong("volOperadorasTelefonia.idOperadora"));
		equi.setVolOperadorasTelefonia(volOperadorasTelefonia);
				
		//TIPO DE USO
		VolTiposUso volTiposUso = new VolTiposUso();
		volTiposUso.setIdTiposUso(tela.getLong("volTiposUso.idTiposUso"));
		equi.setVolTiposUso(volTiposUso);
		
		return equi;
	}

	public TypedFlatMap findById(java.lang.Long id) {
		VolEquipamentos bean = getVolEquipamentosService().findById(id);
		return parse(bean);
	}
	/**
	 * Transforma de bean para TypedFlatMap
	 * @param bean VolEquipamentos
	 * @return TypedFlatMap
	 */
	private TypedFlatMap parse(VolEquipamentos bean){
		TypedFlatMap tfm = new TypedFlatMap();
		tfm.put("dsIccid",bean.getDsIccid());
		tfm.put("blHabilitado",bean.getBlHabilitado());
		tfm.put("dsNumero",bean.getDsNumero());
		tfm.put("dsImei",bean.getDsImei());
		tfm.put("nmPin",bean.getNmPin());
		tfm.put("nmPin2",bean.getNmPin2());
		tfm.put("obObservacao",bean.getObObservacao());
		tfm.put("idEquipamento",bean.getIdEquipamento());
		//FILIAL
		Filial filial = bean.getFilial();
		tfm.put("filial.idFilial",filial.getIdFilial());
		tfm.put("filial.sgFilial",filial.getSgFilial());
		tfm.put("filial.pessoa.nmFantasia",filial.getPessoa().getNmFantasia());
		//volModeloseqp
		VolModeloseqps volModeloseqp = bean.getVolModeloseqp();
		tfm.put("volModeloseqp.idModeloeqp",volModeloseqp.getIdModeloeqp());
		tfm.put("volModeloseqp.dsNome",volModeloseqp.getDsNome());
		//tpTarifa
		DomainValue tpTarifa = bean.getTpTarifa();
		tfm.put("tpTarifa.description",tpTarifa.getDescription());
		tfm.put("tpTarifa.value",tpTarifa.getValue());
		tfm.put("tpTarifa.status",tpTarifa.getStatus());
		//volTiposUso
		VolTiposUso volTiposUso = bean.getVolTiposUso();
		tfm.put("volTiposUso.idTiposUso",volTiposUso.getIdTiposUso());
		tfm.put("volTiposUso.dsNome",volTiposUso.getDsNome());
		//volOperadorasTelefonia
		VolOperadorasTelefonia volOperadorasTelefonia = bean.getVolOperadorasTelefonia();
		tfm.put("volOperadorasTelefonia.idOperadora",volOperadorasTelefonia.getIdOperadora());
		tfm.put("volOperadorasTelefonia.pessoa.nmPessoa",volOperadorasTelefonia.getPessoa().getNmPessoa());
		//meioTransporte
		
		MeioTransporte meioTransporte = bean.getMeioTransporte();
		if(meioTransporte != null){
			tfm.put("meioTransporte.idMeioTransporte",meioTransporte.getIdMeioTransporte());
			tfm.put("meioTransporte.nrFrota",meioTransporte.getNrFrota());
			tfm.put("meioTransporte2.nrIdentificador",meioTransporte.getNrIdentificador());
		}
		
		return tfm;
	}
	
	public List findLookupOperadora(Map criteria) {
		return volOperadorasTelefoniaService.findLookup(criteria);
	}
	public ResultSetPage findPaginatedEquipamentos(TypedFlatMap criteria) {
		ResultSetPage rsp = getVolEquipamentosService().findPaginatedEquipamentos(criteria);
        List tela = com.mercurio.lms.util.AliasToNestedMapResultTransformer
        	.getInstance().transformListResult(rsp.getList());
        rsp.getList().clear();
        rsp.setList(tela);
        return rsp;
	}
	public Integer getRowCountEquipamentos(TypedFlatMap criteria){
		return getVolEquipamentosService().getRowCountEquipamentos(criteria);
	}
	public List findLookupUso(TypedFlatMap criteria) {
		return volTiposUsoService.findLookup(criteria);
	}	
	public List findLookupModelo(TypedFlatMap criteria) {
		return volModeloseqpsService.findLookup(criteria);
	}
	public void setVolOperadorasTelefoniaService(
			VolOperadorasTelefoniaService volOperadorasTelefoniaService) {
		this.volOperadorasTelefoniaService = volOperadorasTelefoniaService;
	}
	public void setVolModeloseqpsService(VolModeloseqpsService volModeloseqpsService) {
		this.volModeloseqpsService = volModeloseqpsService;
	}
	public void setVolTiposUsoService(VolTiposUsoService volTiposUsoService) {
		this.volTiposUsoService = volTiposUsoService;
	}
	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}
	public void setMeioTransporteService(MeioTransporteService meioTransporteService) {
		this.meioTransporteService = meioTransporteService;
	}
	
	
	public List findLookupFilialByUsuarioLogado(TypedFlatMap map) {
		List listFilial = this.filialService.findLookupByUsuarioLogado(map);
		
		if ( listFilial.isEmpty() ) {
			return listFilial;
		}
		
		List resultList = new ArrayList();
		
		Iterator iterator = listFilial.iterator();
		Map filial = (Map)iterator.next();
		TypedFlatMap typedFlatMap = new TypedFlatMap();
		typedFlatMap.put("idFilial", filial.get("idFilial") );
		typedFlatMap.put("pessoa.nmFantasia", filial.get("pessoa.nmFantasia") );
		typedFlatMap.put("sgFilial", filial.get("sgFilial") );
		resultList.add(typedFlatMap);
		
		return resultList;

	}
	
	public List findLookupMeioTransporte(Map criteria) {
		return meioTransporteService.findLookup(criteria);
	}
	public FilialService getFilialService() {
		return filialService;
	}	
}
