package com.mercurio.lms.vol.action;




import java.io.Serializable;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.DomainValue;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.ConfiguracoesFacade;
import com.mercurio.lms.configuracoes.model.Pessoa;
import com.mercurio.lms.util.FormatUtils;
import com.mercurio.lms.vol.model.VolFabricante;
import com.mercurio.lms.vol.model.service.VolFabricanteService;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;


/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.vol.manterFabricantesAction"
 * 					
 */

public class ManterFabricantesAction extends CrudAction {
	private VolFabricanteService volFabricanteService;
	private ConfiguracoesFacade configuracoesFacade;
	
	public ResultSetPage findPaginatedFabricante(TypedFlatMap criteria) {
		ResultSetPage rsp = this.getVolFabricanteService().findPaginatedFabricante(criteria);
		
		List result = rsp.getList();
		List newResult = new ArrayList();
		
		for(Iterator it = result.iterator(); it.hasNext();){
			TypedFlatMap map = new TypedFlatMap();
			Map linha = (Map)it.next();
			map.put("idPessoa", linha.get("idPessoa"));
			map.put("idFabricante", linha.get("idFabricante"));
			map.put("tpIdentificacao", linha.get("tpIdentificacao"));
			map.put("nrIdentificacao", FormatUtils.formatIdentificacao(((DomainValue)linha.get("tpIdentificacao")).getValue(), 
					((String)linha.get("nrIdentificacao").toString().trim())));
			map.put("nmPessoa", linha.get("nmPessoa"));
			map.put("tpSituacao", linha.get("tpSituacao"));
			map.put("nmContato", linha.get("nmContato"));
			map.put("dsEmail", linha.get("dsEmail"));
			newResult.add(map);
		}
		
		rsp.setList(newResult);
		return rsp;
	}
	
	 public void removeById(Long id) {
		 this.getVolFabricanteService().removeById(id);
	 }
	
	/**
	*
	*/
	@ParametrizedAttribute(type = java.lang.Long.class)
	public void removeByIds(List ids) {
		this.getVolFabricanteService().removeByIds(ids);
	}
	
	public VolFabricante findById(Long id){	
    	return this.getVolFabricanteService().findById(id);
	}
	
	
	/**
	 * verifica se a pessoa já existe quando é digitado o nrIdentificacao na tela CAD
	 * 
	 */
	public List findPessoa(TypedFlatMap map){
    	List lstRetorno = new ArrayList();
    	Pessoa pessoa = configuracoesFacade.getPessoa(map.getString("nrIdentificacao"), map.getString("tpIdentificacao"));
    	    	
    	TypedFlatMap mapRetorno = new TypedFlatMap();
    	
    	if (pessoa != null) {
    		
    		getVolFabricanteService().validateNovoFabricante(pessoa.getIdPessoa());
    		
    		mapRetorno.put("idPessoa", pessoa.getIdPessoa());
    		mapRetorno.put("nmPessoa", pessoa.getNmPessoa());
    		mapRetorno.put("nrIdentificacao", pessoa.getNrIdentificacaoFormatado());
    		mapRetorno.put("tpIdentificacao", pessoa.getTpIdentificacao());
    		mapRetorno.put("dsEmail", pessoa.getDsEmail());
    		
    		lstRetorno.add(mapRetorno);
    	}
    	
    	return lstRetorno;
    }
    
	public Serializable store(TypedFlatMap tela) {
		
		Pessoa pessoa = new Pessoa();

		pessoa.setIdPessoa(tela.getLong("pessoa.idPessoa"));
		pessoa.setNrIdentificacao(tela.getString("pessoa.nrIdentificacao"));
		pessoa.setDsEmail(tela.getString("pessoa.dsEmail"));
        pessoa.setTpIdentificacao(tela.getDomainValue("pessoa.tpIdentificacao"));
        pessoa.setNmPessoa(tela.getString("pessoa.nmPessoa"));
        pessoa.setTpPessoa(tela.getDomainValue("pessoa.tpPessoa"));
        
		VolFabricante volFabricante = new VolFabricante();
		volFabricante.setIdFabricante(tela.getLong("idFabricante"));
		volFabricante.setTpSituacao(tela.getDomainValue("tpSituacao"));
		volFabricante.setPessoa(pessoa);
		
		return getVolFabricanteService().store(volFabricante);
	}

	public Integer getRowCountFabricante(TypedFlatMap criteria) {
		return this.getVolFabricanteService().getRowCountFabricante(criteria);
	}
	


	
	
	
	
	/* ---------------- GETTERS AND SETTERS --------------- */  
	
	public VolFabricanteService getVolFabricanteService() {
		return volFabricanteService;
	}

	public void setVolFabricanteService(VolFabricanteService volFabricanteService) {
		this.volFabricanteService = volFabricanteService;
	}

	public ConfiguracoesFacade getConfiguracoesFacade() {
		return configuracoesFacade;
	}

	public void setConfiguracoesFacade(ConfiguracoesFacade configuracoesFacade) {
		this.configuracoesFacade = configuracoesFacade;
	}
	
	
}
