package com.mercurio.lms.vol.action;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.BusinessException;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.DomainValue;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.FilterList;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.coleta.model.PedidoColeta;
import com.mercurio.lms.coleta.model.service.PedidoColetaService;
import com.mercurio.lms.configuracoes.ConfiguracoesFacade;
import com.mercurio.lms.configuracoes.model.Usuario;
import com.mercurio.lms.contratacaoveiculos.model.MeioTransporte;
import com.mercurio.lms.contratacaoveiculos.model.service.MeioTransporteService;
import com.mercurio.lms.expedicao.model.Conhecimento;
import com.mercurio.lms.expedicao.model.service.ConhecimentoService;
import com.mercurio.lms.municipios.model.Empresa;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.util.FormatUtils;
import com.mercurio.lms.util.JTDateTimeUtils;
import com.mercurio.lms.util.session.SessionUtils;
import com.mercurio.lms.vol.model.VolEventosCelular;
import com.mercurio.lms.vol.model.VolTiposEventos;
import com.mercurio.lms.vol.model.service.GerencialService;
import com.mercurio.lms.vol.model.service.VolEventosCelularService;
import com.mercurio.lms.vol.model.service.VolInformarOcorrenciasService;


/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.vol.gerencialTratativasAction"
 * 					
 */

public class GerencialTratativasAction extends CrudAction {
	
    private GerencialService gerencialService;
    private VolEventosCelularService volEventosCelularService;
    private FilialService filialService;
    private MeioTransporteService meioTransporteService ;
    private VolInformarOcorrenciasService volInformarOcorrenciasService;
	private ConfiguracoesFacade configuracoesFacade;
	private PedidoColetaService pedidoColetaService;
	private ConhecimentoService conhecimentoService;
	
	public final void setGerencialService(GerencialService serviceService) {
       this.gerencialService = serviceService;
    }
	
	public ResultSetPage findPaginatedTratativas(TypedFlatMap criteria) {		
		return getGerencialService().findPaginatedTratativas(criteria);
	}

	public Integer getRowCountTratativas(TypedFlatMap criteria) {
		return getGerencialService().getRowCountTratativas(criteria);
	}
	
	public VolEventosCelular findById(java.lang.Long id) {
		return getVolEventosCelularService().findById(id);
	}
	
	public List findLookupFilial(TypedFlatMap map) {
    	Empresa empresa = (Empresa)SessionUtils.getEmpresasUsuarioLogado().get(0);
    	List result = getFilialService().findFilialBySgEmpresaLookup(map.getString("sgFilial"),empresa.getIdEmpresa());
    	List resultList = new ArrayList();
    	for (Iterator iter = result.iterator();iter.hasNext();) {
    		Map mapResult = (Map)iter.next();

    		TypedFlatMap tfm = new TypedFlatMap();
    		
    		tfm.put("idFilial", mapResult.get("idFilial"));
   		    tfm.put("sgFilial", mapResult.get("sgFilial"));
   		    tfm.put("pessoa.nmFantasia",mapResult.get("nmFantasia"));
    		
   		    resultList.add(tfm);
    	}
    	
    	return resultList;
    }
	
	public List findLookupMeioTransporte(Map criteria) {
    	FilterList filter = new FilterList(getMeioTransporteService().findLookup(criteria)) {
			public Map filterItem(Object item) {
				MeioTransporte meioTransporte = (MeioTransporte)item;
    			TypedFlatMap typedFlatMap = new TypedFlatMap();
	    		typedFlatMap.put("idMeioTransporte", meioTransporte.getIdMeioTransporte());
		    	typedFlatMap.put("nrFrota",  meioTransporte.getNrFrota());
		    	typedFlatMap.put("nrIdentificador",  meioTransporte.getNrIdentificador());
				return typedFlatMap;
			}
    	};
    	return (List)filter.doFilter();
    }
	public List findComboDocumentos(TypedFlatMap criteria) {
		Long idMeioTransporte = criteria.getLong("meioTransporte.idMeioTransporte");
		
		List l = getGerencialService().findComboDocumentos(idMeioTransporte);

		List lista = new ArrayList();
	    
		for (Iterator iter = l.iterator();iter.hasNext();) {
			Object[] r = (Object[])iter.next();
			String idDocumento = (String)r[0];
			String dsDocumento = (String)r[1];
			
			Map map = new TypedFlatMap();
			map.put("idDocumento",idDocumento );
		    map.put("dsDocumento",FormatUtils.fillNumberWithZero(dsDocumento,8));
				
		    lista.add(map);
		}    
		return lista;
	}


	public Serializable store(TypedFlatMap tela) {
		VolEventosCelular volEventosCelular;
		VolTiposEventos volTiposEventos;
		
		if (tela.getLong("idEventoCelular") != null){
			volEventosCelular = getVolEventosCelularService().findById(tela.getLong("idEventoCelular"));
		} else {
			volEventosCelular = new VolEventosCelular();
			volEventosCelular.setDhSolicitacao(JTDateTimeUtils.getDataHoraAtual());
			volEventosCelular.setTpOrigem(new DomainValue("O"));
			volTiposEventos = getVolInformarOcorrenciasService().findTipoEvento(Long.valueOf(15));
			if (volTiposEventos == null) {
				throw new BusinessException("LMS-41046");
		}
			volEventosCelular.setVolTiposEvento(volTiposEventos);
		}
		
		volEventosCelular.setDhAtendimento(JTDateTimeUtils.getDataHoraAtual());
		String documento = tela.getString("documento");
		
		if ((documento != null) && (documento.trim().length()>0)) {
			String tpOrigem = documento.substring(0, 1);
			Long idDocumento = Long.valueOf(documento.substring(documento.indexOf("-") + 1));
			if (tpOrigem.equals("E")) {
				Conhecimento conhecimento = getConhecimentoService().findByIdInitLazyProperties(idDocumento, false); 
				volEventosCelular.setConhecimento(conhecimento);
			} else if (tpOrigem.equals("C")) {
				PedidoColeta pedidoColeta = getPedidoColetaService().findByIdInitLazyProperties(idDocumento, false);
				volEventosCelular.setPedidoColeta(pedidoColeta);
			}
		}
			
		Usuario usuarioLogado = SessionUtils.getUsuarioLogado();
		MeioTransporte meioTransporte = new MeioTransporte();
		meioTransporte.setIdMeioTransporte(tela.getLong("meioTransporte.idMeioTransporte"));
		
		volEventosCelular.setMeioTransporte(meioTransporte);
		volEventosCelular.setUsuario(usuarioLogado);
		
		volEventosCelular.setObAtendente(tela.getString("obAtendente"));
		
		return getVolEventosCelularService().store(volEventosCelular);
	}
	
	public VolEventosCelularService getVolEventosCelularService() {
		return volEventosCelularService;
	}


	public void setVolEventosCelularService(
			VolEventosCelularService volEventosCelularService) {
		this.volEventosCelularService = volEventosCelularService;
	}


	public GerencialService getGerencialService() {
		return gerencialService;
	}

	public FilialService getFilialService() {
		return filialService;
	}

	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}

	public MeioTransporteService getMeioTransporteService() {
		return meioTransporteService;
	}

	public void setMeioTransporteService(MeioTransporteService meioTransporteService) {
		this.meioTransporteService = meioTransporteService;
	}

	public VolInformarOcorrenciasService getVolInformarOcorrenciasService() {
		return volInformarOcorrenciasService;
	}

	public void setVolInformarOcorrenciasService(
			VolInformarOcorrenciasService volInformarOcorrenciasService) {
		this.volInformarOcorrenciasService = volInformarOcorrenciasService;
	}

	public ConfiguracoesFacade getConfiguracoesFacade() {
		return configuracoesFacade;
	}

	public void setConfiguracoesFacade(ConfiguracoesFacade configuracoesFacade) {
		this.configuracoesFacade = configuracoesFacade;
	}
	
	public PedidoColetaService getPedidoColetaService() {
		return pedidoColetaService;
}

	public void setPedidoColetaService(PedidoColetaService pedidoColetaService) {
		this.pedidoColetaService = pedidoColetaService;
	}

	public ConhecimentoService getConhecimentoService() {
		return conhecimentoService;
	}

	public void setConhecimentoService(ConhecimentoService conhecimentoService) {
		this.conhecimentoService = conhecimentoService;
	}
	
}
