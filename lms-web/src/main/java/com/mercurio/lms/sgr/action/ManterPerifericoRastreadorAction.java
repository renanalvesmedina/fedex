package com.mercurio.lms.sgr.action;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.contratacaoveiculos.model.PerifericoRastreador;
import com.mercurio.lms.contratacaoveiculos.model.service.PerifericoRastreadorService;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.sgr.manterPerifericosRastreadorAction"
 */

public class ManterPerifericoRastreadorAction extends CrudAction {
	
	private PerifericoRastreadorService perifericoRastreadorService;
	
    public TypedFlatMap findByIdCustom(java.lang.Long id) {
    	PerifericoRastreador perifericoRastreador = perifericoRastreadorService.findById(id);
    	TypedFlatMap tfm = new TypedFlatMap();
    	tfm.put("idPerifericoRastreador", perifericoRastreador.getIdPerifericoRastreador());    	
    	tfm.put("dsPerifericoRastreador", perifericoRastreador.getDsPerifericoRastreador().getValue());
    	tfm.put("tpSituacao", perifericoRastreador.getTpSituacao().getValue());
    	return tfm;
    }

    public Serializable storeCustom(TypedFlatMap tfm) {
    	PerifericoRastreador perifericoRastreador = new PerifericoRastreador();
    	perifericoRastreador.setIdPerifericoRastreador(tfm.getLong("idPerifericoRastreador"));    	
    	perifericoRastreador.setDsPerifericoRastreador(tfm.getVarcharI18n("dsPerifericoRastreador"));
    	perifericoRastreador.setTpSituacao(tfm.getDomainValue("tpSituacao"));
        return perifericoRastreadorService.store(perifericoRastreador);
    }
    
	public Integer getRowCountCustom(Map criteria) {		
		return perifericoRastreadorService.getRowCount(criteria);
	}

	public ResultSetPage findPaginatedCustom(Map criteria) {		
		List list = new ArrayList();
		criteria.put("_order", "dsPerifericoRastreador");
		ResultSetPage rsp = perifericoRastreadorService.findPaginated(criteria);
		for (Iterator it = rsp.getList().iterator(); it.hasNext(); ) {
			PerifericoRastreador perifericoRastreador = (PerifericoRastreador)it.next();
			Map map = new HashMap(4);
			map.put("idPerifericoRastreador", perifericoRastreador.getIdPerifericoRastreador());			
			map.put("dsPerifericoRastreador", perifericoRastreador.getDsPerifericoRastreador().getValue());
			map.put("tpSituacao", perifericoRastreador.getTpSituacao().getDescription().getValue());
			list.add(map);	
		}
		rsp.setList(list);
		return rsp;
	}
	
	public void removeById(java.lang.Long id) {
		perifericoRastreadorService.removeById(id);
    }

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	perifericoRastreadorService.removeByIds(ids);
    }

	public void setPerifericoRastreadorService(
			PerifericoRastreadorService perifericoRastreadorService) {
		this.perifericoRastreadorService = perifericoRastreadorService;
	}
}
