package com.mercurio.lms.sgr.action;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;

import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.sgr.model.EnquadramentoRegra;
import com.mercurio.lms.sgr.model.service.EnquadramentoRegraService;
import com.mercurio.lms.sgr.report.EmitirRelatorioEnquadramentoRegrasService;
import com.mercurio.lms.util.JTVigenciaUtils;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.sgr.emitirRelatorioEnquadramentoRegrasAction"
 */

public class EmitirRelatorioEnquadramentoRegrasAction extends ReportActionSupport {
	private EnquadramentoRegraService enquadramentoRegraService;
	
	/**
	 * Declaração serviço principal da Action.
	 */
	public void setEmitirRelatorioEnquadramentoRegrasService(EmitirRelatorioEnquadramentoRegrasService 
																	emitirRelatorioEnquadramentoRegrasService) {
		this.reportServiceSupport = emitirRelatorioEnquadramentoRegrasService;
	}
	
	/**
	 * Busca os enquadramentos vigentes ordenados pela descrição.
	 * @param criteria
	 * @return
	 */
	public List findEnquadramentoRegra(TypedFlatMap criteria) {
		List listEnquadramentos = this.getEnquadramentoRegraService().find(criteria);
		List retorno = new ArrayList();
		for (Iterator iter = listEnquadramentos.iterator(); iter.hasNext();) {
			EnquadramentoRegra enquadramentoRegra = (EnquadramentoRegra) iter.next();
			Integer resultVigencia = JTVigenciaUtils.getIntegerAcaoVigencia(enquadramentoRegra.getDtVigenciaInicial(), enquadramentoRegra.getDtVigenciaFinal());
			if (resultVigencia.intValue()==1){
				retorno.add(enquadramentoRegra);
			}
		}
		Comparator descComparator = new Comparator() {
			public int compare(Object obj1, Object obj2) {
				EnquadramentoRegra enquadramentoRegra1 = (EnquadramentoRegra) obj1;
				EnquadramentoRegra enquadramentoRegra2 = (EnquadramentoRegra) obj2;
        		return enquadramentoRegra1.getDsEnquadramentoRegra().toString().compareTo(enquadramentoRegra2.getDsEnquadramentoRegra().toString());  		
			}    		
    	};
    	
    	Collections.sort(retorno, descComparator);
		return retorno; 
	}


	public EnquadramentoRegraService getEnquadramentoRegraService() {
		return enquadramentoRegraService;
	}
	public void setEnquadramentoRegraService(
			EnquadramentoRegraService enquadramentoRegraService) {
		this.enquadramentoRegraService = enquadramentoRegraService;
	}
	
}
