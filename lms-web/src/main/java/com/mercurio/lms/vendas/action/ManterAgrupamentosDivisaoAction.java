package com.mercurio.lms.vendas.action;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.lms.configuracoes.model.service.UsuarioService;
import com.mercurio.lms.vendas.model.AgrupamentoCliente;
import com.mercurio.lms.vendas.model.service.AgrupamentoClienteService;
import com.mercurio.lms.vendas.model.service.FormaAgrupamentoService;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.vendas.manterAgrupamentosDivisaoAction"
 */

public class ManterAgrupamentosDivisaoAction extends CrudAction {
	private FormaAgrupamentoService formaAgrupamentoService;
	private UsuarioService usuarioService;
	
	public void setAgrupamentoCliente(AgrupamentoClienteService agrupamentoClienteService) {
		this.defaultService = agrupamentoClienteService;
	}
    public void removeById(java.lang.Long id) {
        ((AgrupamentoClienteService)defaultService).removeById(id);
    }
    /** 
     * Método que busca as informações pelo cliente
     * @param criteria
     * @return
     */
    public List findByCliente(Map criteria){
    	return getFormaAgrupamentoService().findByCliente(criteria);
    }

    public Serializable store(AgrupamentoCliente bean) {
    	 return ((AgrupamentoClienteService)defaultService).store(bean);	 
	}
    
    /*
	 * Chama verificação de permissões do usuário sobre uma filial / regional
	 * */
	public Boolean validatePermissao(Long idFilial) {
    	return getUsuarioService().validateAcessoFilialRegionalUsuario(idFilial);
    }
    
    
	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	((AgrupamentoClienteService)defaultService).removeByIds(ids);
    }

    public AgrupamentoCliente findById(java.lang.Long id) {
    	return ((AgrupamentoClienteService)defaultService).findById(id);
    }
    
    public FormaAgrupamentoService getFormaAgrupamentoService(){
    	return this.formaAgrupamentoService;
    }
    
    public void setFormaAgrupamentoService(FormaAgrupamentoService formaAgrupamentoService){
    	this.formaAgrupamentoService = formaAgrupamentoService;
    }
    
    public UsuarioService getUsuarioService(){
    	return this.usuarioService;
    }
    public void setUsuarioService(UsuarioService usuarioService){
    	this.usuarioService = usuarioService;
    }

}
