package com.mercurio.lms.vendas.action;

import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.model.Usuario;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.municipios.model.service.RegionalFilialService;
import com.mercurio.lms.municipios.model.service.RegionalService;
import com.mercurio.lms.util.session.SessionUtils;
import com.mercurio.lms.vendas.report.ClienteFretePercentualService;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.vendas.relacaoClientesFretePercentualAction"
 */

public class RelacaoClientesFretePercentualAction extends ReportActionSupport {
	private RegionalService regionalService;
	private FilialService filialService;
	private ClienteFretePercentualService clienteFretePercentual;
	private RegionalFilialService regionalFilialService;
	
	
	@Override
	public java.io.File execute(TypedFlatMap parameters) throws Exception {
		reportServiceSupport = clienteFretePercentual;
		return super.execute(parameters);
	
	}
 
	
	public List findRegional(Map criterios){
        return SessionUtils.getRegionaisFiliaisUsuarioLogado();
    }

	public List findLookupFilial(Map criteria){
        return filialService.findLookupFilial(criteria);
    }
	
	public TypedFlatMap findDadosSessao() {
		TypedFlatMap map = new TypedFlatMap(); 
		
		Usuario usuario = SessionUtils.getUsuarioLogado();
		Filial filial = SessionUtils.getFilialSessao();
		
		map.put("idUsuarioSessao", usuario.getIdUsuario());
		map.put("idFilialSessao", filial.getIdFilial());
		map.put("nmFantasiaSessao", filial.getPessoa().getNmFantasia());
		map.put("sgFilialSessao", filial.getSgFilial());
		Map mapRegional = regionalFilialService.findRegionalByIdFilial(filial.getIdFilial());
		map.put("idRegionalFilial", mapRegional.get("idRegional"));
		
		return map;
	}
	
	
	public FilialService getFilialService() {
		return filialService;
	}
	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}
	public RegionalService getRegionalService() {
		return regionalService;
	}
	public void setRegionalService(RegionalService regionalService) {
		this.regionalService = regionalService;
	}

	public ClienteFretePercentualService getClienteFretePercentual() {
		return clienteFretePercentual;
	}

	public void setClienteFretePercentual(
			ClienteFretePercentualService clienteFretePercentual) {
		this.clienteFretePercentual = clienteFretePercentual;
	}


	public void setRegionalFilialService(RegionalFilialService regionalFilialService) {
		this.regionalFilialService = regionalFilialService;
	}

}
