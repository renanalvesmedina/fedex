package com.mercurio.lms.vendas.action;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.vendas.model.LiberacaoEmbarque;
import com.mercurio.lms.vendas.model.service.LiberacaoEmbarqueService;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.vendas.manterLiberacoesEmbaqueMunicipiosClienteAction"
 */

public class ManterLiberacoesEmbaqueMunicipiosClienteAction extends CrudAction {
	public void setLiberacaoEmbarque(LiberacaoEmbarqueService liberacaoEmbarqueService) {
		this.defaultService = liberacaoEmbarqueService;
	}
    public void removeById(java.lang.Long id) {
        ((LiberacaoEmbarqueService)defaultService).removeById(id);
    }

    public void validateAtendimentoMunicipio(TypedFlatMap criteria){
    	((LiberacaoEmbarqueService)defaultService).validateAtendimentoMunicipio(criteria);
    }
    
    public LiberacaoEmbarque executeSolicitarEfetivacao(LiberacaoEmbarque liberacaoEmbarque){
    	((LiberacaoEmbarqueService)defaultService).executeSolicitarEfetivacao(liberacaoEmbarque);
    	return this.findById(liberacaoEmbarque.getIdLiberacaoEmbarque());
    }
    
    public LiberacaoEmbarque executeSolicitarDesefetivacao(LiberacaoEmbarque liberacaoEmbarque){
    	((LiberacaoEmbarqueService)defaultService).executeSolicitarDesefetivacao(liberacaoEmbarque);
    	return this.findById(liberacaoEmbarque.getIdLiberacaoEmbarque());
    }
    
    
	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	((LiberacaoEmbarqueService)defaultService).removeByIds(ids);
    }

    public LiberacaoEmbarque findById(java.lang.Long id) {
    	return ((LiberacaoEmbarqueService)defaultService).findById(id);
    }

    public LiberacaoEmbarque findByIdProcessoWorkflow(Map map){
    	Long idProcesso = Long.valueOf((String)map.get("idProcessoWorkflow"));
    	return this.findById(idProcesso);
    }
    
    public Map validateCapital(Map criteria){
    	criteria.put("isCapital",((LiberacaoEmbarqueService)defaultService).validateCapital(criteria));
    	return criteria;
    }
    
    @Override
    protected Serializable store(Serializable bean) {
    	return super.store(bean);
    }
}
