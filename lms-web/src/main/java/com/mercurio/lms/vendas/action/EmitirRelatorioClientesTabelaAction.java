package com.mercurio.lms.vendas.action;

import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.municipios.model.Filial;
import com.mercurio.lms.municipios.model.Pais;
import com.mercurio.lms.municipios.model.service.FilialService;
import com.mercurio.lms.municipios.model.service.PaisService;
import com.mercurio.lms.municipios.model.service.RegionalFilialService;
import com.mercurio.lms.municipios.model.service.UnidadeFederativaService;
import com.mercurio.lms.tabelaprecos.model.service.TabelaPrecoService;
import com.mercurio.lms.util.session.SessionUtils;
import com.mercurio.lms.vendas.report.ClienteTabelaService;


/**
 * Generated by: ADSM ActionGenerator
 * 
 * Não inserir documentação após ou remover a tag do XDoclet a seguir. O valor
 * do <code>id</code> informado abaixo deve ser utilizado para referenciar
 * este serviço.
 * 
 * @spring.bean id="lms.vendas.emitirRelatorioClientesTabelaAction"
 */

public class EmitirRelatorioClientesTabelaAction extends ReportActionSupport {
	private FilialService filialService;
	private PaisService paisService;
	private UnidadeFederativaService unidadeFederativaService;
	private TabelaPrecoService tabelaPrecoService;
	private RegionalFilialService regionalFilialService;
	
	public List findRegional(){
		return SessionUtils.getRegionaisFiliaisUsuarioLogado();
	}
	
	public List findLookupFilial(Map criteria){
		return filialService.findLookupFilial(criteria);
	}

	public List findLookupPais(Map criteria) {
		return paisService.findLookup(criteria);
	}

	public List findUnidadeFederativaByPais(Map criteria) {
		return unidadeFederativaService.findByPais(criteria);
	}
	
	public List findLookupTabelaPreco(Map criteria) {
		return tabelaPrecoService.findLookup(criteria);
	}
	
	public TypedFlatMap findDadosDefault() {
		TypedFlatMap result = new TypedFlatMap();

		Filial filial = SessionUtils.getFilialSessao();
		result.put("idFilial", filial.getIdFilial());
		result.put("sgFilial", filial.getSgFilial());
		result.put("nmFilial", filial.getPessoa().getNmFantasia());

		Map regionalMap = regionalFilialService.findRegionalByIdFilial(filial.getIdFilial());
		if(regionalMap != null) {
			result.put("idRegional", regionalMap.get("idRegional"));
			result.put("siglaDescricaoRegional", regionalMap.get("sgRegional") + " - " + regionalMap.get("dsRegional"));
		}
		
		Pais pais = SessionUtils.getPaisSessao();
		result.put("idPais", pais.getIdPais());
		result.put("nmPais", pais.getNmPais());
		
		return result;
	}
	
	/*
	 * GETTERS E SETTERS
	 */

	/**
	 * @param paisService
	 *            The paisService to set.
	 */
	public void setPaisService(PaisService paisService) {
		this.paisService = paisService;
	}

	/**
	 * @param unidadeFederativaService
	 *            The unidadeFederativaService to set.
	 */
	public void setUnidadeFederativaService(
			UnidadeFederativaService unidadeFederativaService) {
		this.unidadeFederativaService = unidadeFederativaService;
	}

	/**
	 * @param tabelaPrecoService The tabelaPrecoService to set.
	 */
	public void setTabelaPrecoService(TabelaPrecoService tabelaPrecoService) {
		this.tabelaPrecoService = tabelaPrecoService;
	}
	
	public void setService(ClienteTabelaService serviceService) {
		this.reportServiceSupport = serviceService;
	}

	public void setFilialService(FilialService filialService) {
		this.filialService = filialService;
	}

	public void setRegionalFilialService(RegionalFilialService regionalFilialService) {
		this.regionalFilialService = regionalFilialService;
	}

}
