package com.mercurio.lms.vendas.action;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.tabelaprecos.model.service.ParcelaPrecoService;
import com.mercurio.lms.vendas.model.TaxaCliente;
import com.mercurio.lms.vendas.model.service.TaxaClienteService;

/**
 * Generated by: ADSM ActionGenerator
 *
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.vendas.manterParametrosClienteTaxasAction"
 */

public class ManterParametrosClienteTaxasAction extends CrudAction {

	private ParcelaPrecoService parcelaPrecoService;

	public ParcelaPrecoService getParcelaPrecoService() {
		return parcelaPrecoService;
	}

	public void setParcelaPrecoService(ParcelaPrecoService parcelaPrecoService) {
		this.parcelaPrecoService = parcelaPrecoService;
	}

	public void setTaxaClienteService(TaxaClienteService taxaClienteService) {
		this.defaultService = taxaClienteService;
	}

	public void removeById(java.lang.Long id) {
		((TaxaClienteService)defaultService).removeById(id);
	}

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
	public void removeByIds(List ids) {
		((TaxaClienteService)defaultService).removeByIds(ids);
	}

	public Map findById(java.lang.Long id) {
		return ((TaxaClienteService)defaultService).findByIdMap(id);
	}

	public Serializable store(TaxaCliente bean) {
		return ((TaxaClienteService)defaultService).store(bean);
	}

	public List findParcelaPrecoTaxa(TypedFlatMap criteria){
		Long idTabelaPreco = criteria.getLong("idTabelaPreco");
		return getParcelaPrecoService().findParcelaByTpParcelaPreco(idTabelaPreco, "T");
	}

	public ResultSetPage findPaginated(TypedFlatMap criteria) {
		return ((TaxaClienteService)defaultService).findPaginated(criteria);
	}
	
	public Integer getRowCount(TypedFlatMap criteria) {
		return ((TaxaClienteService)defaultService).getRowCount(criteria);
	}
}
