package com.mercurio.lms.vendas.action;

import java.io.Serializable;
import java.util.List;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.vendas.model.ObservacaoConhecimento;
import com.mercurio.lms.vendas.model.service.ObservacaoConhecimentoService;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.vendas.manterObservacoesConhecimentoAction"
 */
public class ManterObservacoesConhecimentoAction extends CrudAction {
	
	
	public void setService(ObservacaoConhecimentoService observacaoConhecimentoService) {
		this.defaultService = observacaoConhecimentoService; 
	}
	
	public ObservacaoConhecimentoService getService() {
		return (ObservacaoConhecimentoService)this.defaultService; 
	}

	
	public ResultSetPage findPaginated(TypedFlatMap map) {
		return getService().findPaginated(map); 
	}

	public Integer getRowCount(TypedFlatMap map) {
		return getService().getRowCount(map); 
	}

	public Serializable findById(java.lang.Long id) {
		return getService().findById(id);
	}

	public Serializable store(TypedFlatMap map) {
		ObservacaoConhecimento obs = new ObservacaoConhecimento();
		obs.setIdObservacaoConhecimento(map.getLong("idObservacaoConhecimento"));
		obs.setDsObservacaoConhecimento(map.getString("dsObservacaoConhecimento"));
		obs.setTpSituacao(map.getDomainValue("tpSituacao"));
		return getService().store(obs);
	}

	public void removeById(java.lang.Long id) {
		getService().removeById(id);
	}

	/**
	*
	**/
	@ParametrizedAttribute(type = java.lang.Long.class)
	public void removeByIds(List ids) {
		getService().removeByIds(ids);
	}
}