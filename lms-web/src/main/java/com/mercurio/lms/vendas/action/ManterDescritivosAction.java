package com.mercurio.lms.vendas.action;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.core.util.ReflectionUtils;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.lms.municipios.model.Empresa;
import com.mercurio.lms.util.session.SessionUtils;
import com.mercurio.lms.vendas.model.DescritivoPce;
import com.mercurio.lms.vendas.model.service.DescritivoPceService;
import com.mercurio.lms.vendas.model.service.EventoPceService;
import com.mercurio.lms.vendas.model.service.OcorrenciaPceService;
import com.mercurio.lms.vendas.model.service.ProcessoPceService;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;


/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.vendas.manterDescritivosAction"
 */

public class ManterDescritivosAction extends CrudAction {
	
	ProcessoPceService processoPceService;
	EventoPceService eventoPceService;
	OcorrenciaPceService ocorrenciaPceService;

	public OcorrenciaPceService getOcorrenciaPceService() {
		return ocorrenciaPceService;
	}
	public void setOcorrenciaPceService(OcorrenciaPceService ocorrenciaPceService) {
		this.ocorrenciaPceService = ocorrenciaPceService;
	}
	public EventoPceService getEventoPceService() {
		return eventoPceService;
	}
	public void setEventoPceService(EventoPceService eventoPceService) {
		this.eventoPceService = eventoPceService;
	}
	public ProcessoPceService getProcessoPceService() {
		return processoPceService;
	}
	public void setProcessoPceService(ProcessoPceService processoPceService) {
		this.processoPceService = processoPceService;
	}
	public void setService(DescritivoPceService descritivoPceService) {
		this.defaultService = descritivoPceService;
	}
	
    public void removeById(java.lang.Long id) {
        ((DescritivoPceService)defaultService).removeById(id);
    }
    
    public Serializable store(DescritivoPce bean) {
        return ((DescritivoPceService)defaultService).store(bean);
    }

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	((DescritivoPceService)defaultService).removeByIds(ids);
    }

    public DescritivoPce findById(java.lang.Long id) {
    	return ((DescritivoPceService)defaultService).findById(id);
    }
    
    //busca os processosPce da empresa do usuario logado
    public List findProcessoPceByUsuarioLogado(Map criteria){
    	criteria = (criteria == null) ? new HashMap() : criteria;
    	return getProcessoPceService().find(criteria);
    }
    
    //busca os processosPce da empresa do usuario logado
    public List findProcessoPceAtivoByUsuarioLogado(Map criteria){
    	criteria = (criteria == null) ? new HashMap() : criteria;
    	criteria.put("tpSituacao","A");
    	return getProcessoPceService().find(criteria);
    }
    
	public List find(Map criteria) {
		List lista = new ArrayList();
		lista = getEventoPceService().find(criteria);
		return lista;
	}
	
	public List findComboOcorrencia(Map criteria){
		List lista = new ArrayList();
		lista = getOcorrenciaPceService().find(criteria);
		return lista;
	}
	
	public ResultSetPage findPaginated(Map criteria) {
		Empresa empresa = SessionUtils.getEmpresaSessao();
		ReflectionUtils.setNestedBeanPropertyValue(criteria,"empresa.idEmpresa",empresa.getIdEmpresa());
		// TODO Auto-generated method stub
		return ((DescritivoPceService)defaultService).findPaginated(criteria);
	}
	public Integer getRowCount(Map criteria) {
		Empresa empresa = SessionUtils.getEmpresaSessao();
		ReflectionUtils.setNestedBeanPropertyValue(criteria,"empresa.idEmpresa",empresa.getIdEmpresa());
		return ((DescritivoPceService)defaultService).getRowCount(criteria);
	}


}
