package com.mercurio.lms.vendas.action;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.ConfiguracoesFacade;
import com.mercurio.lms.util.MoedaUtils;
import com.mercurio.lms.vendas.model.PotencialComercialCliente;
import com.mercurio.lms.vendas.model.service.PotencialComercialClienteService;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.vendas.manterPotencialComercializacaoClienteAction"
 */

public class ManterPotencialComercializacaoClienteAction extends CrudAction {
	private ConfiguracoesFacade configuracoesFacade;
	public void setConfiguracoesFacade(ConfiguracoesFacade configuracoesFacade) {
		this.configuracoesFacade = configuracoesFacade;

	}

	public Serializable store(PotencialComercialCliente bean) {
		return getPotencialComercialClienteService().store(bean);
	}
	
    public void removeById(java.lang.Long id) {
    	getPotencialComercialClienteService().removeById(id);
    }

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	getPotencialComercialClienteService().removeByIds(ids);
    }

    public PotencialComercialCliente findById(java.lang.Long id) {
    	return getPotencialComercialClienteService().findById(id);
    }

    public ResultSetPage findPaginated(TypedFlatMap criteria) {
    	return getPotencialComercialClienteService().findPaginated(criteria);
    }

    public Integer getRowCount(Map criteria) {
    	return super.getRowCount(criteria);
    }
    /**
     * Método responsável por retornar uma lista com as moedas de todos países
     * @return List
     */
    public List findMoeda(){
    	return MoedaUtils.moedaToMap(this.configuracoesFacade.getMoeda(null, Boolean.TRUE));
    }

	public void setPotencialComercialClienteService(PotencialComercialClienteService potencialComercialClienteService) {
		this.defaultService = potencialComercialClienteService;
	}

	public PotencialComercialClienteService getPotencialComercialClienteService() {
		return (PotencialComercialClienteService) defaultService;
	}
}
