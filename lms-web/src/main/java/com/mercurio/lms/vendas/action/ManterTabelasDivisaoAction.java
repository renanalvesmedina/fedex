package com.mercurio.lms.vendas.action;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import org.hibernate.Hibernate;

import com.mercurio.adsm.framework.BusinessException;
import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;
import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.configuracoes.ConfiguracoesFacade;
import com.mercurio.lms.configuracoes.model.service.ServicoService;
import com.mercurio.lms.configuracoes.model.service.UsuarioService;
import com.mercurio.lms.tabelaprecos.model.service.TabelaPrecoService;
import com.mercurio.lms.tabelaprecos.util.TabelaPrecoUtils;
import com.mercurio.lms.vendas.model.DiaFaturamento;
import com.mercurio.lms.vendas.model.TabelaDivisaoCliente;
import com.mercurio.lms.vendas.model.service.DiaFaturamentoService;
import com.mercurio.lms.vendas.model.service.TabelaDivisaoClienteService;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.vendas.manterTabelasDivisaoAction"
 */
public class ManterTabelasDivisaoAction extends CrudAction {
	private TabelaPrecoService tabelaPrecoService;
	private ServicoService servicoService;
	private UsuarioService usuarioService;
	private ConfiguracoesFacade configuracoesFacade;
	private DiaFaturamentoService diaFaturamentoService;

	/**
	 * Valida as permissoes do usuário
	 * @param idFilial
	 * @return
	 */
	public Boolean validatePermissao(Long idFilial) {
    	return getUsuarioService().validateAcessoFilialRegionalUsuario(idFilial);
    }

	public List findTabelaPreco(){
		return getTabelaPrecoService().find(null);
	}

	public List findLookupTabelaPreco(Map criteria){
		return getTabelaPrecoService().findLookup(criteria);
	}

	public DiaFaturamento findIdServicoDiaVencimento(Long idDivisaoCliente){
		return getDiaFaturamentoService().findDiaFaturamentoByDivisao(idDivisaoCliente).get(0);
	}

	public TypedFlatMap findTabelaByIdServico(Long idServico){
		TypedFlatMap tfm =getDiaFaturamentoService().findTabelaByIdServico(idServico);
		if(tfm.size()>0){
			tfm.put("tabelaPrecoString", TabelaPrecoUtils.formatTabelaPrecoString(tfm.getString("TP_TIPO_TABELA_PRECO"), tfm.getInteger("NR_VERSAO"), tfm.getString("TP_SUBTIPO_TABELA_PRECO")));
		}
		return tfm;
	}
	
	public List findServico(Map criteria){
		criteria.remove("idTabelaPreco");
		return getServicoService().find(criteria);
	}

	public void removeById(java.lang.Long id) {
        ((TabelaDivisaoClienteService)defaultService).removeById(id);
    }

    public Serializable store(TabelaDivisaoCliente bean) {
    	//FIXME Gambi feita para resolver a quest CQPRO00029069
			if (bean.getTabelaPrecoFob() != null
					&& bean.getTabelaPrecoFob().getIdTabelaPreco() == null) {
    		bean.setTabelaPrecoFob(null);
    	}
    	return ((TabelaDivisaoClienteService)defaultService).store(bean);
    }

	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	((TabelaDivisaoClienteService)defaultService).removeByIds(ids);
    }

    public TabelaDivisaoCliente findById(java.lang.Long id) {
    	return ((TabelaDivisaoClienteService)defaultService).findById(id);
    }
    
    public TypedFlatMap findDataSession() {
    	TypedFlatMap result = new TypedFlatMap();
    	result.put("idServicoPadrao", configuracoesFacade.getValorParametro("SERVICO_PADRAO"));
    	return result;
    }

    /*
     * GETTERS E SETTERS
     */
	public TabelaPrecoService getTabelaPrecoService() {
		return tabelaPrecoService;
	}
	public void setTabelaPrecoService(TabelaPrecoService tabelaPrecoService) {
		this.tabelaPrecoService = tabelaPrecoService;
	}
	public ServicoService getServicoService() {
		return servicoService;
	}
	public void setServicoService(ServicoService servicoService) {
		this.servicoService = servicoService;
	}
	public UsuarioService getUsuarioService() {
		return usuarioService;
	}
	public void setUsuarioService(UsuarioService usuarioService) {
		this.usuarioService = usuarioService;
	}
	public void setService(TabelaDivisaoClienteService serviceService) {
		this.defaultService = serviceService;
	}
	public void setConfiguracoesFacade(ConfiguracoesFacade configuracoesFacade) {
		this.configuracoesFacade = configuracoesFacade;
	}

	public DiaFaturamentoService getDiaFaturamentoService() {
		return diaFaturamentoService;
}

	public void setDiaFaturamentoService(DiaFaturamentoService diaFaturamentoService) {
		this.diaFaturamentoService = diaFaturamentoService;
	}
}
