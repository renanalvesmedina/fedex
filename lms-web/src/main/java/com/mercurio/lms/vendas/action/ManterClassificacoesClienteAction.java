package com.mercurio.lms.vendas.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import com.mercurio.adsm.framework.model.CrudAction;
import com.mercurio.adsm.framework.model.ResultSetPage;
import com.mercurio.lms.vendas.model.ClassificacaoCliente;
import com.mercurio.lms.vendas.model.DescClassificacaoCliente;
import com.mercurio.lms.vendas.model.service.ClassificacaoClienteService;

import com.mercurio.adsm.framework.annotations.ParametrizedAttribute;

/**
 * Generated by: ADSM ActionGenerator
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.vendas.manterClassificacoesClienteAction"
 */

public class ManterClassificacoesClienteAction extends CrudAction {
	public void setClassificacaoCliente(ClassificacaoClienteService classificacaoClienteService) {
		this.defaultService = classificacaoClienteService;
	}
    public void removeById(java.lang.Long id) {
        ((ClassificacaoClienteService)defaultService).removeById(id);
    }
    
    public ResultSetPage findPaginated(Map criteria) {
    	Map map = null;
    	ResultSetPage rsp = defaultService.findPaginated(criteria);
    	List list = rsp.getList();
    	List retorno = new ArrayList();
    	
    	for(Iterator iter = list.iterator(); iter.hasNext();){
    		map = new HashMap();
    		ClassificacaoCliente classificacaoCliente = (ClassificacaoCliente)iter.next();
    		map.put("dsDescClassificacaoClienteComp", classificacaoCliente.getDescClassificacaoCliente().getTipoClassificacaoCliente().getDsTipoClassificacaoCliente() + " - " + classificacaoCliente.getDescClassificacaoCliente().getDsDescClassificacaoCliente());
    		map.put("idClassificacaoCliente", classificacaoCliente.getIdClassificacaoCliente());
    		retorno.add(map);
    	}
    	rsp.setList(retorno);
    	return rsp;
    }

	/**
	 *
	 */
	@ParametrizedAttribute(type = java.lang.Long.class)
    public void removeByIds(List ids) {
    	((ClassificacaoClienteService)defaultService).removeByIds(ids);
    }

    public ClassificacaoCliente findById(java.lang.Long id) {
    	return ((ClassificacaoClienteService)defaultService).findById(id);
    }
    
    
    /**
     * Busca somente as Classificações que possuem seu tipo ativo
     * @param criterios
     * @return Lista de classificações ativas
     */
    public List findClassificacoesAtivas(Map criterios){
       List list = ((ClassificacaoClienteService)defaultService).getDescClassificacaoClienteService().findClassificacoesAtivas(criterios);
       List rList = new ArrayList();
       Map map = new HashMap();
       
       for(Iterator iter = list.iterator(); iter.hasNext();) {
    	   DescClassificacaoCliente descClassificacaoClientes = (DescClassificacaoCliente)iter.next();
    	   
    	   String dsDescClassificacaoClienteComp = descClassificacaoClientes.getTipoClassificacaoCliente().getDsTipoClassificacaoCliente() + " - " + descClassificacaoClientes.getDsDescClassificacaoCliente();
    	   
    	   map.put("dsDescClassificacaoClienteComp",dsDescClassificacaoClienteComp);
    	   map.put("idDescClassificacaoCliente",descClassificacaoClientes.getIdDescClassificacaoCliente());
    	   map.put("tpSituacao",descClassificacaoClientes.getTpSituacao());
    	   
    	   rList.add(map);
    	   
    	   map = new HashMap();
    	   
       }
    	   
       return rList;        
    }
    
    /**
     * Find de Classificações 
     * @param criterios
     * @return Lista de classificações 
     */
    public List find(Map criterios){
       List list = ((ClassificacaoClienteService)defaultService).getDescClassificacaoClienteService().find(criterios);
       List rList = new ArrayList();
       Map map = new HashMap();
       
       for(Iterator iter = list.iterator(); iter.hasNext();) {
    	   DescClassificacaoCliente descClassificacaoClientes = (DescClassificacaoCliente)iter.next();
    	   
    	   String dsDescClassificacaoClienteComp = descClassificacaoClientes.getTipoClassificacaoCliente().getDsTipoClassificacaoCliente() + " - " + descClassificacaoClientes.getDsDescClassificacaoCliente();
    	   
    	   map.put("dsDescClassificacaoClienteComp",dsDescClassificacaoClienteComp);
    	   map.put("idDescClassificacaoCliente",descClassificacaoClientes.getIdDescClassificacaoCliente());
    	   map.put("tpSituacao",descClassificacaoClientes.getTpSituacao());
    	   rList.add(map);
    	  
    	   map = new HashMap();
       }
    	   
       return rList;        
    }

}
