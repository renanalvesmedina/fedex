package com.mercurio.lms.vendas.action;

import java.io.File;

import org.apache.commons.collections.MapUtils;

import com.mercurio.adsm.framework.report.MultiReportCommand;
import com.mercurio.adsm.framework.report.ReportActionSupport;
import com.mercurio.adsm.framework.report.ReportExecutionManager;
import com.mercurio.adsm.framework.util.TypedFlatMap;


/**
 * Generated by: ADSM ActionGenerator
 *
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.vendas.emitirRelatorioPropostaFOBAction"
 * 
 */
public class EmitirRelatorioPropostaFOBAction extends ReportActionSupport {
	
	private ReportExecutionManager reportExecutionManager;
	
	@Override
	public File execute(TypedFlatMap parameters) throws Exception {
		
		/*Imprime termos e condições*/
		Boolean imprimeTermos = MapUtils.getBoolean(parameters, "impTermosCondicoes");
		
		MultiReportCommand mrc = new MultiReportCommand("emitirTabelaFOB");
		
		/*Imprime o relatorio de Tabela FOB*/
		mrc.addCommand("lms.tabelaprecos.report.emitirTabelaPropostaFOBService", new TypedFlatMap(parameters));
		
		/*Verifica se deve imprimir termos e condições*/
		if(imprimeTermos){
			mrc.addCommand("lms.vendas.clienteContratoTermosCondicoesService", new TypedFlatMap(parameters));
		}
		
		return this.reportExecutionManager.executeMultiReport(mrc);
	}
	
	public void setReportExecutionManager(ReportExecutionManager reportExecutionManager) {
		this.reportExecutionManager = reportExecutionManager;
	}
}
