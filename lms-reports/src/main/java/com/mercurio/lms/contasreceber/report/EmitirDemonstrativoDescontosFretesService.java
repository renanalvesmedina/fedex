package com.mercurio.lms.contasreceber.report;

import java.util.HashMap;
import java.util.Map;

import com.mercurio.adsm.framework.report.JRReportDataObject;
import com.mercurio.adsm.framework.report.ReportServiceSupport;
import com.mercurio.adsm.framework.util.SqlTemplate;
import com.mercurio.adsm.framework.util.TypedFlatMap;
import com.mercurio.lms.util.session.SessionUtils;

/**
 * Generated by: ADSM ActionGenerator
 *
 * Emissao de Demonstrativos de Descontos de Frete
 * @author Rafael Andrade de Oliveira
 * @since 28/03/2006
 *  
 * Não inserir documentação após ou remover a tag do XDoclet a seguir.
 * O valor do <code>id</code> informado abaixo deve ser utilizado para referenciar este serviço.
 * @spring.bean id="lms.contasreceber.emitirDemonstrativoDescontosFretesService"
 * @spring.property name="reportName" value="com/mercurio/lms/contasreceber/report/emitirDemonstrativoDescontosFretes.jasper"  
 */

public class EmitirDemonstrativoDescontosFretesService extends ReportServiceSupport {

	public JRReportDataObject execute(Map parameters) {

		/* Busca SqlTemplate */
		SqlTemplate sql = getSql((TypedFlatMap) parameters);
		
		JRReportDataObject jr = executeQuery(sql.getSql(), sql.getCriteria());

		Map parametersReport = new HashMap();
		
		/* Tipo do relatório */
        parametersReport.put(JRReportDataObject.EXPORT_MODE_PARAM, parameters.get("tpFormatoRelatorio"));
		/* Parametros de pesquisa */
		parametersReport.put("parametrosPesquisa", sql.getFilterSummary());
		/* Usuario emissor */
		parametersReport.put("usuarioEmissor", SessionUtils.getUsuarioLogado().getNmUsuario());
        
        jr.setParameters(parametersReport);
		
		return jr;
	}
	
	private SqlTemplate getSql(TypedFlatMap tfm) {
		
		SqlTemplate sql = createSqlTemplate();

		sql.addProjection("fdd.sg_filial || ' - ' || p.nm_fantasia", "FILIAL_COBRANCA");
		sql.addProjection("dd.nr_demonstrativo_desconto", "NR_DEMONSTRATIVO");
		sql.addProjection("dd.dt_emissao", "DATA_DEMONSTRATIVO");
		sql.addProjection("ds.tp_documento_servico", "TIPO");
		sql.addProjection("fds.sg_filial || ' ' || ds.nr_docto_servico", "DOCUMENTO");
		sql.addProjection("ddsf.vl_devido", "VALOR");
		sql.addProjection("ds.vl_base_calc_imposto", "BASE_CALC");
		sql.addProjection("ds.vl_imposto", "ICMS");
		sql.addProjection("100 - (d.vl_desconto / ddsf.vl_devido * 100)", "PERC_DESC");
		sql.addProjection("d.vl_desconto", "DESCONTO");
		sql.addProjection("md.ds_motivo_desconto", "MOTIVO_DOC");
		sql.addProjection("dd.ob_demonstrativo_desconto", "MOTIVO_DESCONTO");

		sql.addFrom("desconto", "d");
		
		sql.addFrom("demonstrativo_desconto", "dd");
		sql.addJoin("dd.id_demonstrativo_desconto", "d.id_demonstrativo_desconto");
		
		sql.addFrom("filial", "fdd");
		sql.addJoin("fdd.id_filial", "dd.id_filial");
		
		sql.addFrom("pessoa", "p");
		sql.addJoin("p.id_pessoa", "fdd.id_filial");
		
		sql.addFrom("devedor_doc_serv_fat", "ddsf");
		sql.addJoin("ddsf.id_devedor_doc_serv_fat", "d.id_devedor_doc_serv_fat");
		
		sql.addFrom("docto_servico", "ds");
		sql.addJoin("ds.id_docto_servico", "ddsf.id_docto_servico");
		
		sql.addFrom("filial", "fds");
		sql.addJoin("fds.id_filial", "ds.id_filial_origem");
		
		sql.addFrom("motivo_desconto", "md");
		sql.addJoin("md.id_motivo_desconto", "d.id_motivo_desconto");
		
		if (tfm.getLong("filial.idFilial") != null) {
			sql.addCriteria("fdd.id_filial", "=", tfm.getLong("filial.idFilial"));
			sql.addFilterSummary("filialCobranca", tfm.getString("sgFilial") + " - " + tfm.getString("filial.pessoa.nmFantasia"));
		}
		
		sql.addCriteria("dd.nr_demonstrativo_desconto", "=", tfm.getLong("nrDemonstrativoDesconto"));
		sql.addFilterSummary("numeroDemonstrativo", tfm.getLong("nrDemonstrativoDesconto"));
		
		sql.addOrderBy("fdd.sg_filial");
		sql.addOrderBy("dd.nr_demonstrativo_desconto");
		
		return sql;
	}
	
}